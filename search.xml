<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>英国之旅</title>
      <link href="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/"/>
      <url>/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/</url>
      
        <content type="html"><![CDATA[<h1 id="飞机天猛兄"><a class="markdownIt-Anchor" href="#飞机天猛兄"></a> 飞机&amp;天猛兄</h1><p>14 小时的飞机，前半程充满了新奇，后半程是令人煎熬的等待。吃了一顿饱饭，睡了一觉后，7 小时已经过去。后面 7小时显得格外漫长，一看要绕开乌克兰，颇有感慨。在看眼前的电影和笔记本之间来回切换，定不下心来。一路向西，天光不老，追逐太阳的脚步，降落时终是迟了 7 小时。抵达伦敦已是夜晚，起着薄雾的户外停车场给不了我任何安全感。反复上下楼，终于找到了直通宾馆的廊桥。天猛兄已在宾馆桌上赶着投稿 ddl。我们寒暄一二，由于方向极其相近，居然立刻开始了学术讨论。我抛出了 3 篇论文作为我们讨论的基础，此后三天，我们一边听讲座，一边和其他研究者接触，最终确定了三个小方向，约了回国后 regular meeting，在毕业前发表。<br>回国时飞机快了三个小时，机上都是来伦敦留学的女生，异国他乡出来闯荡，都很外向。我发现她们都有男朋友，基本上都是一起留学的，或者在英国找的。也有一两个异国恋的，男朋友已经在机场等着接她们了，临降落前一小时，她们开始化妆并分享道具的使用体验。<br><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/5d7bb59b528f0c8ecd6c9249c3a9a6b.jpg" alt=""></p><h1 id="旅行"><a class="markdownIt-Anchor" href="#旅行"></a> 旅行</h1><p>到英国的第一天我们逛了大英博物馆，但是一直想赶时间，沉浸感不是很强。英文看得很累，所以主要看了中日的文物。正逢女史箴图展出，我们细细观摩了它的纹理。<br>托室友的福，我得以和他北大的同学一起去了莎翁故居和剑桥大学，还在他学弟的带领下参观了三一学院的苹果树以及他们的食堂。那真是古典庄严的食堂，高高的穹顶，暗黄的台灯和长桌。5 个世纪过去，吃饭的学生换了一茬又一茬，食物风格和吧台都已经大不一样，但是环境始终如一。谁能想到牛顿也在个食堂和后院的宿舍生活过呢！我们也参观了国王学院的大教堂，它是整个英国最大的学院教堂（英国传统学院标配一个教堂），被当时的英国国王所青睐，所以建制恢弘，高顶和整块带圣经故事的彩色玻璃，是别的学院教堂所没有的。国王学院后院有中英友好花园，每块石头刻着徐志摩的诗。我们轻轻地踏着石板，教科书里的内容照进现实。中午，在学弟的介绍下，我们在沃森发现 DNA 双螺旋的酒吧吃了炸鱼薯条。<br>整个英国，无论是繁华的大城市还是静谧的小镇，都充满令人啧啧称奇的美丽。工整的草坪和篱笆，低着头的绵羊和马，时时修葺、颜色浓烈的小房子和尖顶教堂，清澈的蓝天白云，无不让人心旷神怡。这里产生了多么丰富的文化产品，哈利波特、傲慢与偏见、雾都孤儿、福尔摩斯……古典和现代在这里交织。就连修缮时用的脚手架，搭得整整齐齐，阳光下闪着银光。我充分感觉到编程届的一个准则：美就是生产力。<br><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/dab3fa1ec41a03aaf1371c5167cd441.jpg" alt=""><br><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/090f7c5ccb542db5c48159c380e642e.jpg" alt=""><br><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/38f00386dcb1c42bcea80b3f33a47c5.jpg" alt=""></p><p><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/2417632ee825b9cb462269b2af31c5b.jpg" alt=""><br><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/95bb2fc83c3fae84c7c7c5e3c6997ab%201.jpg" alt=""><br><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/a03fcb1747eeec326d22668c23d231e.jpg" alt=""><br><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/21f34710339e8469cef421c37f5e929.jpg" alt=""><br><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/81dd8d18024054f5590ee43f938c6ff.jpg" alt=""><br><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/7dab1a07c938d11bd889f34f8fd190f.jpg" alt=""></p><p><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/43dc687e71435aaa03226ed0dc370d6.jpg" alt=""></p><h1 id="火车"><a class="markdownIt-Anchor" href="#火车"></a> 火车</h1><p>英国的火车是最让我们糟心的。我们第一天从伦敦 euston 到伯明翰，车上还遇到了佐治亚大学的吴烜圣。这位三年级博士生展现了极高的学术热情，此后他在会场上逢人就讨论，英语中文的语调都很有起伏，是我要学习的。第一天的火车遇到了伯明翰罢工，我们没有在车上遇到任何检票，于是我们产生了侥幸心理，开始不买票或者买更便宜的班次（被人骗了！）。但是后面的路程中，我们每次都被查。第一次是听说可以买别的班次便宜的车票，然后坐最快的那班，但是上车后被要求补票。检票员开出原价，非常 nice。第二次是我由于睡眠不足，买票的时候勾选了到站取纸质票但是忘记这一茬了。上车后检票员直接开出当天最贵的天价。这方面对外国游客没有任何人情味，其实完全可以补到中间站的票，然后出去取票，但是检票员比较死板，我也没有反应过来。<br>英国火车班次频繁，两地之间平均半小时都会有一班，坐不满。不同班次由几家大公司运营，自己工作人员检票（创收），最便宜的班次由警察检票。所以为啥不和地铁一样在门口检票呢？这样完全可以避免检票和套票。两套方案逻辑不一致，让游客困惑。所以这是为了创造工作岗位么？<br><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/1a75b1948da81514b4965b75a541b1f.jpg" alt=""></p><h1 id="超市"><a class="markdownIt-Anchor" href="#超市"></a> 超市</h1><p>十月底，万圣节还没到，西方国家都已经开始准备圣诞，在伯明翰的市中心牛环，高大的圣诞树正在被树起。我们所到的各个小镇都有圣诞饰品专卖店，店里非常安静，没有国内洗脑的 twinkle bell 在播放。<br>在新的大洲逛超市绝对是新奇的体验。特别是谢菲的玛莎，像我这种从来不逛街的人都被各式各样精致的圣诞纪念品所吸引。玛莎有很多在淘宝价格翻倍的工艺品，比如小猪杯，我买了最新款的随身杯，因为比较轻。玛莎的底楼居然是一个自营超市，里面有很多精致的甜点。但是其他东西非常踩雷，饺子馅居然是土豆泥！蛋挞居然撒了花椒！我和妹妹回到公寓做了顿晚饭，体验了英国电器，不用说明书都能用，按钮设计非常简洁，也不会出什么危险，这点也是国内家用电器要学习的。<br>到处可见的廉价便利店 Tesco 给我新奇又实惠的感受。牛奶 1L 只要一磅，英国本地牛；超大三明治荤素搭配只要 2 磅；浓稠的鲜榨果汁，无任何添加剂只要 1.5 磅。我还带了两大盒饼干麦片回国。周博说他对象当年留学的时候爱吃这个牌子，那就送他，希望能帮到他。<img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/be17fc752ab3756aa3eec66c19316a4.jpg" alt=""><br><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/8c7707c7fabcced164c17a0bbb9ba04.jpg" alt=""><br><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/7f1ddb3a36b0801d24e2250362bffe4.jpg" alt=""><br><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/8d6e66e15a47f2f6a3ecebb23765a2e.jpg" alt=""><br><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/5a333b4ada7cf3a42269b4a46392972.jpg" alt=""></p><h1 id="会场"><a class="markdownIt-Anchor" href="#会场"></a> 会场</h1><p>会场就是学术伊甸园。这里一半华人，大家都很愿意互相交流加微信。我深刻感受到学术会议的意义：浮于表面的社交，high-level idea 的交换，猛吃免费的茶点和咖啡。我和韩国老哥相谈甚欢，总的来说，只有东亚人给人一种温和亲近之感，白人给我一种夸张和无情的礼貌。所以，我特别逮住了一个韩国科学院大学的博士练习口语，和他讨论我去年开始就在思考的问题（可能也是这个问题博得了美国教授的青眼），以及用大语言模型解决这个问题的可行性。<br>第二天晚上我们搭乘班车前往阿斯顿维拉俱乐部主场。进门是极其严格的安检，进去之后是只容一个人侧身而过的校门，有个神秘人从窗口给你递喝酒券。然后又继续永无止境的社交和喝酒。正餐有前菜、主菜、甜点三道，都不好吃，上菜又慢。正菜过后，是期待已久的颁奖环节。白天在会场小房间我就看到几个教授围着桌子讨论，果然晚上公布了最佳论文。每个作者名字都会被报过去，然后有人来的话会上台合影。其中 best paper 的作者躲在了桌子底下，原来是个中国女生，非常害羞，可能是被台上的社牛们吓到了。<br><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/988890a64ca27f4b747655be7c6b4bd.jpg" alt=""><br><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/b741c4117842064ddeb92ac365f8617.jpg" alt=""><br><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/7a2e6ef340d25afd822e1a35cb0b013.jpg" alt=""></p><h1 id="软弱-紧张-体面"><a class="markdownIt-Anchor" href="#软弱-紧张-体面"></a> 软弱、紧张、体面</h1><p>我来英国前做的功课太少，这是我要反思的。西方国家完全拘泥于规则，因为他们确实有极其成熟的规则体系。一旦不遵守规则，将面临极高的罚款。此行我至少交了 1000 元学费，但是给西方交学费的事情，从雅思复议就开始了，那次我白白交了 1400 元。<br>人在旅途，往往会因为不熟悉规则、赶时间和追求体面而产生经济损失。英国在这方面极其无情，用钱来惩罚这种错误。在火车上我们被惩罚了两次，支付了昂贵的代价；在大本钟，我们遇到了强行拍照的戏服女，我们因为要体面没有转身就跑，支付了 3 胖。当然，除此以外打乱计划和心理代价难以估量。心理代价主要来自于一用英语就缺乏自信，总感觉低人一等，不敢看白人的大蓝眼睛，事后越想越气。我认为人在国外还是要 aggressive 一些，以后要多加锻炼。</p><p><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/5e901b8846d348f929d9b28e9397306.jpg" alt=""><img src="/2023/10/27/%E8%8B%B1%E5%9B%BD%E4%B9%8B%E6%97%85/8bc7bff17cfe86930ca60293d16cd46.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> freetime </category>
          
      </categories>
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/06/%E7%94%9F%E6%97%A5%E6%9C%AD%E8%AE%B0/"/>
      <url>/2023/04/06/%E7%94%9F%E6%97%A5%E6%9C%AD%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>今天是我的生日，但我一点都开心不起来。身边的朋友寥寥，他们对我是否生日并不以为意，而是觉得游戏更重要。然而，人生的意义在于付出，这些冷漠并不影响我对他们的好。<br>回顾17-25这9年，我个人的成长其实以三年为一个周期。高二高三大一，上升期生物竞赛省队培训和进入大学社团的失败预示了第二阶段的下降。大二大三大四，完全的下降期，毕业设计有上升之势。二战研一研二，上升期，但是暂不及之前的水平。如今恰又在三年的末尾，理应集三年上升之力冲刺。<br>然而，焦虑成了最近年轻人的主旋律。我给自己安排大量的事，边做边抬头仰望，觉得脖子不够酸再换一个目标去仰望。这样时间久了真的太累了。上一个三年，我的学习策略是罪恶感驱动。这个三年，我走了另一个极端。不变的是，我依旧坚持心理问题是主要矛盾。这个坚持的好处是，可以始终保持对能力的自信。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>蝼蚁搏象</title>
      <link href="/2023/03/21/%E8%9D%BC%E8%9A%81%E6%90%8F%E8%B1%A1/"/>
      <url>/2023/03/21/%E8%9D%BC%E8%9A%81%E6%90%8F%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="顶峰才是风景"><a class="markdownIt-Anchor" href="#顶峰才是风景"></a> 顶峰才是风景</h1><p>当一个人被灌输太多层次观念时，拼搏的痛苦就开始了。当今社会这样的观念遍地生长，任何行业、行业之间都恨不得要分出高低。这样的比较，以金钱为主，体面为辅，以人口向大城市集中为现象，以流行语“卷、躺平、凡尔赛”为其脉络。被小红书、知乎、B 站彻底掌控的价值观，如登泰山，顶峰看到的才是日出，其余都是蛋黄滚落餐盘。</p><h1 id="鸟在笼中望眼欲穿"><a class="markdownIt-Anchor" href="#鸟在笼中望眼欲穿"></a> 鸟在笼中，望眼欲穿</h1><p>结果是，人人向上走，拼搏的定义不再停留于自身层次的突破，已经演变为从一个层次向另一个层次跨越。身处低层次，是“我在桎梏，人皆蝼蚁“。挣脱枷锁，一时光芒万丈。这种蜕变，成了现在年轻人最喜欢炫耀的价值。</p><h1 id="西溪观鸟记"><a class="markdownIt-Anchor" href="#西溪观鸟记"></a> 西溪观鸟记</h1>]]></content>
      
      
      <categories>
          
          <category> freetime </category>
          
      </categories>
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript-入门</title>
      <link href="/2023/02/15/TypeScript-%E5%85%A5%E9%97%A8/"/>
      <url>/2023/02/15/TypeScript-%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在线运行： <a href="https://www.typescriptlang.org/">TypeScript: JavaScript With Syntax For Types.</a></p></blockquote><h1 id="基础类型"><a class="markdownIt-Anchor" href="#基础类型"></a> 基础类型</h1><pre class="highlight"><code class="js"><span class="hljs-comment">//布尔</span><span class="hljs-keyword">let</span> <span class="hljs-attr">isDone</span>: boolean = <span class="hljs-literal">false</span>;<span class="hljs-comment">//数字，前缀区分表示采用的进制</span><span class="hljs-keyword">let</span> <span class="hljs-attr">decLiteral</span>: number = <span class="hljs-number">6</span>;<span class="hljs-keyword">let</span> <span class="hljs-attr">hexLiteral</span>: number = <span class="hljs-number">0xf00d</span>;<span class="hljs-keyword">let</span> <span class="hljs-attr">binaryLiteral</span>: number = <span class="hljs-number">0b1010</span>;<span class="hljs-keyword">let</span> <span class="hljs-attr">octalLiteral</span>: number = <span class="hljs-number">0o744</span>;<span class="hljs-comment">//字符串</span><span class="hljs-keyword">let</span> <span class="hljs-attr">name</span>: string = <span class="hljs-string">"bob"</span>;name = <span class="hljs-string">'smith'</span>;<span class="hljs-comment">//允许修改</span><span class="hljs-comment">//模板字符串，需要用`包围，中间为富文本不需要换行符等。</span><span class="hljs-keyword">let</span> <span class="hljs-attr">name</span>: string = <span class="hljs-string">`Gene`</span>;<span class="hljs-keyword">let</span> <span class="hljs-attr">age</span>: number = <span class="hljs-number">37</span>;<span class="hljs-keyword">let</span> <span class="hljs-attr">sentence</span>: string = <span class="hljs-string">`Hello, my name is <span class="hljs-subst">${ name }</span>. I'll be <span class="hljs-subst">${ age + <span class="hljs-number">1</span> }</span> years old next month.`</span>;<span class="hljs-comment">//数组</span><span class="hljs-keyword">let</span> <span class="hljs-attr">list</span>: number[] = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>];<span class="hljs-keyword">let</span> <span class="hljs-attr">list</span>: <span class="hljs-title class_">Array</span>&lt;number&gt; = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>];<span class="hljs-comment">//元组，定义已知数量和类型的列表</span><span class="hljs-keyword">let</span> <span class="hljs-attr">x</span>: [string, number];x = [<span class="hljs-string">'hello'</span>, <span class="hljs-number">10</span>]; <span class="hljs-comment">// OK</span><span class="hljs-comment">//枚举</span>enum <span class="hljs-title class_">Color</span> {<span class="hljs-title class_">Red</span> = <span class="hljs-number">1</span>, <span class="hljs-title class_">Green</span> = <span class="hljs-number">2</span>, <span class="hljs-title class_">Blue</span> = <span class="hljs-number">4</span>}<span class="hljs-keyword">let</span> <span class="hljs-attr">c</span>: <span class="hljs-title class_">Color</span> = <span class="hljs-title class_">Color</span>.<span class="hljs-property">Green</span>;<span class="hljs-keyword">let</span> <span class="hljs-attr">colorName</span>: string = <span class="hljs-title class_">Color</span>[c]<span class="hljs-title function_">alert</span>(colorName);<span class="hljs-comment">//反向查找key</span><span class="hljs-comment">//任意</span><span class="hljs-keyword">let</span> <span class="hljs-attr">notSure</span>: any = <span class="hljs-number">4</span>;notSure = <span class="hljs-string">"maybe a string instead"</span>;notSure = <span class="hljs-literal">false</span>; <span class="hljs-comment">// use it like python</span><span class="hljs-comment">//空值 常用于函数无返回值</span><span class="hljs-keyword">function</span> <span class="hljs-title function_">warnUser</span>(<span class="hljs-params"></span>): <span class="hljs-keyword">void</span> {    <span class="hljs-title function_">alert</span>(<span class="hljs-string">"This is my warning message"</span>);}<span class="hljs-comment">//null和undefined</span><span class="hljs-keyword">let</span> <span class="hljs-attr">u</span>: <span class="hljs-literal">undefined</span> = <span class="hljs-literal">undefined</span>;<span class="hljs-keyword">let</span> <span class="hljs-attr">n</span>: <span class="hljs-literal">null</span> = <span class="hljs-literal">null</span>;<span class="hljs-comment">//never</span><span class="hljs-keyword">function</span> <span class="hljs-title function_">error</span>(<span class="hljs-params">message: string</span>): never {    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(message);}</code></pre><h2 id="类型断言"><a class="markdownIt-Anchor" href="#类型断言"></a> 类型断言</h2><pre class="highlight"><code class="js">\\写法一 尖括号<span class="hljs-keyword">let</span> <span class="hljs-attr">someValue</span>: any = <span class="hljs-string">"this is a string"</span>;<span class="hljs-keyword">let</span> <span class="hljs-attr">strLength</span>: number = (&lt;string&gt;someValue).<span class="hljs-property">length</span>;\\写法二 <span class="hljs-keyword">as</span><span class="hljs-keyword">let</span> <span class="hljs-attr">someValue</span>: any = <span class="hljs-string">"this is a string"</span>;<span class="hljs-keyword">let</span> <span class="hljs-attr">strLength</span>: number = (someValue <span class="hljs-keyword">as</span> string).<span class="hljs-property">length</span>;</code></pre><h2 id="类型别名"><a class="markdownIt-Anchor" href="#类型别名"></a> 类型别名</h2><h1 id="接口interface"><a class="markdownIt-Anchor" href="#接口interface"></a> 接口：interface</h1><p>接口是一系列抽象方法的声明，是一些方法特征的集合，这些方法都应该是抽象的，需要由具体的类去实现，然后第三方就可以通过这组抽象方法调用，让具体的类执行具体的方法。</p><pre class="highlight"><code class="js"><span class="hljs-comment">//可选</span>interface <span class="hljs-title class_">SquareConfig</span> {  color?: string;  width?: number;}<span class="hljs-comment">//只读，只能构造时赋值</span>interface <span class="hljs-title class_">Point</span> {    readonly <span class="hljs-attr">x</span>: number;    readonly <span class="hljs-attr">y</span>: number;    readonly [<span class="hljs-attr">index</span>: string]: number;}<span class="hljs-comment">//索引签名</span>interface <span class="hljs-title class_">SquareConfig</span> {    color?: string;    width?: number;    [<span class="hljs-attr">propName</span>: string]: any;}<span class="hljs-comment">//定义函数类型，用来声明函数</span>interface <span class="hljs-title class_">SearchFunc</span> {  (<span class="hljs-attr">source</span>: string, <span class="hljs-attr">subString</span>: string): boolean;}<span class="hljs-keyword">let</span> <span class="hljs-attr">mySearch</span>: <span class="hljs-title class_">SearchFunc</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">src: string, sub: string</span>): boolean {  <span class="hljs-keyword">let</span> result = src.<span class="hljs-title function_">search</span>(sub);  <span class="hljs-keyword">return</span> result &gt; -<span class="hljs-number">1</span>;}<span class="hljs-comment">//用来声明类 使用implements关键字</span>interface <span class="hljs-title class_">ClockInterface</span> {    <span class="hljs-attr">currentTime</span>: <span class="hljs-title class_">Date</span>;    <span class="hljs-title function_">setTime</span>(<span class="hljs-attr">d</span>: <span class="hljs-title class_">Date</span>);}<span class="hljs-keyword">class</span> <span class="hljs-title class_">Clock</span> implements <span class="hljs-title class_">ClockInterface</span> {    <span class="hljs-attr">currentTime</span>: <span class="hljs-title class_">Date</span>;    <span class="hljs-title function_">setTime</span>(<span class="hljs-params">d: <span class="hljs-built_in">Date</span></span>) {        <span class="hljs-variable language_">this</span>.<span class="hljs-property">currentTime</span> = d;    }<span class="hljs-comment">//public</span>    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">h: number, m: number</span>) { }<span class="hljs-comment">//private</span>}</code></pre><h2 id="类静态与实例部分"><a class="markdownIt-Anchor" href="#类静态与实例部分"></a> 类静态与实例部分</h2><p>构造函数或者说类静态部分不会被接口检查，需要另外定义一个接口指定：</p><pre class="highlight"><code class="js"><span class="hljs-comment">//定义构造函数的接口 使用new关键字</span>interface <span class="hljs-title class_">ClockConstructor</span> {    <span class="hljs-keyword">new</span> (<span class="hljs-attr">hour</span>: number, <span class="hljs-attr">minute</span>: number): <span class="hljs-title class_">ClockInterface</span>;}<span class="hljs-comment">//定义实例部分的接口</span>interface <span class="hljs-title class_">ClockInterface</span> {    <span class="hljs-title function_">tick</span>();}<span class="hljs-comment">//用一个传入参数指定构造函数的类型，并且返回实例部分的类型</span><span class="hljs-keyword">function</span> <span class="hljs-title function_">createClock</span>(<span class="hljs-params">ctor: ClockConstructor, hour: number, minute: number</span>): <span class="hljs-title class_">ClockInterface</span> {    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title function_">ctor</span>(hour, minute);}<span class="hljs-keyword">class</span> <span class="hljs-title class_">DigitalClock</span> implements <span class="hljs-title class_">ClockInterface</span> {    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">h: number, m: number</span>) { }    <span class="hljs-title function_">tick</span>(<span class="hljs-params"></span>) {        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"beep beep"</span>);    }}<span class="hljs-keyword">let</span> digital = <span class="hljs-title function_">createClock</span>(<span class="hljs-title class_">DigitalClock</span>, <span class="hljs-number">12</span>, <span class="hljs-number">17</span>);</code></pre><p>使用类定义时的 implements 关键字检查实例部分，<code>createxxx()</code> 的函数定义检查静态部分</p><h2 id="接口继承"><a class="markdownIt-Anchor" href="#接口继承"></a> 接口继承</h2><pre class="highlight"><code class="js">interface <span class="hljs-title class_">Shape</span> {    <span class="hljs-attr">color</span>: string;}interface <span class="hljs-title class_">PenStroke</span> {    <span class="hljs-attr">penWidth</span>: number;}interface <span class="hljs-title class_">Square</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Shape</span>, <span class="hljs-title class_">PenStroke</span> {    <span class="hljs-attr">sideLength</span>: number;}<span class="hljs-keyword">let</span> square = &lt;<span class="hljs-title class_">Square</span>&gt;{};<span class="hljs-comment">//这里使用了类型声明</span>square.<span class="hljs-property">color</span> = <span class="hljs-string">"blue"</span>;square.<span class="hljs-property">sideLength</span> = <span class="hljs-number">10</span>;square.<span class="hljs-property">penWidth</span> = <span class="hljs-number">5.0</span>;</code></pre><h1 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h1><h2 id="默认参数使用-undefined-激活"><a class="markdownIt-Anchor" href="#默认参数使用-undefined-激活"></a> 默认参数：使用 undefined 激活</h2><pre class="highlight"><code class="js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">buildName</span>(<span class="hljs-params">firstName = <span class="hljs-string">"Will"</span>, lastName: string</span>) {    <span class="hljs-keyword">return</span> firstName + <span class="hljs-string">" "</span> + lastName;}<span class="hljs-keyword">let</span> result1 = <span class="hljs-title function_">buildName</span>(<span class="hljs-string">"Bob"</span>);                  <span class="hljs-comment">// error, too few parameters</span><span class="hljs-keyword">let</span> result2 = <span class="hljs-title function_">buildName</span>(<span class="hljs-string">"Bob"</span>, <span class="hljs-string">"Adams"</span>, <span class="hljs-string">"Sr."</span>);  <span class="hljs-comment">// error, too many parameters</span><span class="hljs-keyword">let</span> result3 = <span class="hljs-title function_">buildName</span>(<span class="hljs-string">"Bob"</span>, <span class="hljs-string">"Adams"</span>);         <span class="hljs-comment">// okay and returns "Bob Adams"</span><span class="hljs-comment">//使用undefine来获取默认值</span><span class="hljs-keyword">let</span> result4 = <span class="hljs-title function_">buildName</span>(<span class="hljs-literal">undefined</span>, <span class="hljs-string">"Adams"</span>);     <span class="hljs-comment">// okay and returns "Will Adams"</span></code></pre><h2 id="可选参数必须放在必要参数后"><a class="markdownIt-Anchor" href="#可选参数必须放在必要参数后"></a> 可选参数：必须放在必要参数后</h2><pre class="highlight"><code class="js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">buildName</span>(<span class="hljs-params">firstName: string, lastName?: string</span>) {    <span class="hljs-keyword">if</span> (lastName)        <span class="hljs-keyword">return</span> firstName + <span class="hljs-string">" "</span> + lastName;    <span class="hljs-keyword">else</span>        <span class="hljs-keyword">return</span> firstName;}<span class="hljs-keyword">let</span> result1 = <span class="hljs-title function_">buildName</span>(<span class="hljs-string">"Bob"</span>);  <span class="hljs-comment">// works correctly now</span><span class="hljs-keyword">let</span> result2 = <span class="hljs-title function_">buildName</span>(<span class="hljs-string">"Bob"</span>, <span class="hljs-string">"Adams"</span>, <span class="hljs-string">"Sr."</span>);  <span class="hljs-comment">// error, too many parameters</span><span class="hljs-keyword">let</span> result3 = <span class="hljs-title function_">buildName</span>(<span class="hljs-string">"Bob"</span>, <span class="hljs-string">"Adams"</span>);  <span class="hljs-comment">// ah, just right</span></code></pre><h2 id="剩余参数不确定参数数量"><a class="markdownIt-Anchor" href="#剩余参数不确定参数数量"></a> 剩余参数：不确定参数数量</h2><pre class="highlight"><code class="js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">buildName</span>(<span class="hljs-params">firstName: string, ...restOfName: string[]</span>) {  <span class="hljs-keyword">return</span> firstName + <span class="hljs-string">" "</span> + restOfName.<span class="hljs-title function_">join</span>(<span class="hljs-string">" "</span>);}<span class="hljs-keyword">let</span> <span class="hljs-attr">buildNameFun</span>: <span class="hljs-function">(<span class="hljs-params">fname: string, ...rest: string[]</span>) =&gt;</span> string = buildName;</code></pre><h2 id="用箭头绑定正确的-this"><a class="markdownIt-Anchor" href="#用箭头绑定正确的-this"></a> 用箭头绑定正确的 this</h2><pre class="highlight"><code class="js"><span class="hljs-keyword">let</span> deck = {    <span class="hljs-attr">suits</span>: [<span class="hljs-string">"hearts"</span>, <span class="hljs-string">"spades"</span>, <span class="hljs-string">"clubs"</span>, <span class="hljs-string">"diamonds"</span>],    <span class="hljs-attr">cards</span>: <span class="hljs-title class_">Array</span>(<span class="hljs-number">52</span>),    <span class="hljs-attr">createCardPicker</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) {        <span class="hljs-comment">// <span class="hljs-doctag">NOTE:</span> the line below is now an arrow function, allowing us to capture 'this' right here</span>        <span class="hljs-keyword">return</span> <span class="hljs-function">() =&gt;</span> {            <span class="hljs-keyword">let</span> pickedCard = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-number">52</span>);            <span class="hljs-keyword">let</span> pickedSuit = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(pickedCard / <span class="hljs-number">13</span>);            <span class="hljs-keyword">return</span> {<span class="hljs-attr">suit</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">suits</span>[pickedSuit], <span class="hljs-attr">card</span>: pickedCard % <span class="hljs-number">13</span>};        }    }}<span class="hljs-keyword">let</span> cardPicker = deck.<span class="hljs-title function_">createCardPicker</span>();<span class="hljs-keyword">let</span> pickedCard = <span class="hljs-title function_">cardPicker</span>();<span class="hljs-title function_">alert</span>(<span class="hljs-string">"card: "</span> + pickedCard.<span class="hljs-property">card</span> + <span class="hljs-string">" of "</span> + pickedCard.<span class="hljs-property">suit</span>);</code></pre><h1 id="类"><a class="markdownIt-Anchor" href="#类"></a> 类</h1><p>TypeScript 是面向对象的 JavaScript。类描述了所创建的对象共同的属性和方法。</p><h2 id="继承"><a class="markdownIt-Anchor" href="#继承"></a> 继承</h2><pre class="highlight"><code class="js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Animal</span> {    <span class="hljs-attr">name</span>: string;    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">theName: string</span>) { <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = theName; }    <span class="hljs-title function_">move</span>(<span class="hljs-params">distanceInMeters: number = <span class="hljs-number">0</span></span>) {        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-variable language_">this</span>.name}</span> moved <span class="hljs-subst">${distanceInMeters}</span>m.`</span>);    }}<span class="hljs-comment">//继承父类，super()执行基类构造函数</span><span class="hljs-keyword">class</span> <span class="hljs-title class_">Snake</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">Animal</span> {    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">name: string</span>) { <span class="hljs-variable language_">super</span>(name); }    <span class="hljs-comment">//重写move方法，默认值为5</span>    <span class="hljs-title function_">move</span>(<span class="hljs-params">distanceInMeters = <span class="hljs-number">5</span></span>) {        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"Slithering..."</span>);        <span class="hljs-variable language_">super</span>.<span class="hljs-title function_">move</span>(distanceInMeters);    }}<span class="hljs-keyword">class</span> <span class="hljs-title class_">Horse</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">Animal</span> {    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">name: string</span>) { <span class="hljs-variable language_">super</span>(name); }    <span class="hljs-title function_">move</span>(<span class="hljs-params">distanceInMeters = <span class="hljs-number">45</span></span>) {        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"Galloping..."</span>);        <span class="hljs-variable language_">super</span>.<span class="hljs-title function_">move</span>(distanceInMeters);    }}<span class="hljs-keyword">let</span> sam = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Snake</span>(<span class="hljs-string">"Sammy the Python"</span>);<span class="hljs-comment">//即使声明为Animal，也会使用Horse的move()方法</span><span class="hljs-keyword">let</span> <span class="hljs-attr">tom</span>: <span class="hljs-title class_">Animal</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Horse</span>(<span class="hljs-string">"Tommy the Palomino"</span>);sam.<span class="hljs-title function_">move</span>(<span class="hljs-number">6</span>);tom.<span class="hljs-title function_">move</span>();<span class="hljs-comment">//这里默认值为45而不是0</span></code></pre><h2 id="publicprivate-和-protected"><a class="markdownIt-Anchor" href="#publicprivate-和-protected"></a> public，private 和 protected</h2><p>通过 <code>super()</code> 修改父类的 private 变量。实例无法访问，外部类无法访问</p><pre class="highlight"><code class="js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Animal</span> {    private <span class="hljs-attr">name</span>: string;    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">theName: string</span>) { <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = theName; }}<span class="hljs-comment">//可以使用参数属性简化为</span><span class="hljs-keyword">class</span> <span class="hljs-title class_">Animal</span> {    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">private name: string</span>) { }}<span class="hljs-keyword">class</span> <span class="hljs-title class_">Rhino</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">Animal</span> {    <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) { <span class="hljs-variable language_">super</span>(<span class="hljs-string">"Rhino"</span>); }}<span class="hljs-keyword">class</span> <span class="hljs-title class_">Employee</span> {    private <span class="hljs-attr">name</span>: string;    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">theName: string</span>) { <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = theName; }}<span class="hljs-keyword">let</span> animal = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Animal</span>(<span class="hljs-string">"Goat"</span>);<span class="hljs-keyword">let</span> rhino = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Rhino</span>();<span class="hljs-keyword">let</span> employee = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Employee</span>(<span class="hljs-string">"Bob"</span>);animal = rhino;animal = employee; <span class="hljs-comment">// 错误: Animal 与 Employee 不兼容.</span></code></pre><p>protected 只能在子类的实例方法中访问</p><pre class="highlight"><code class="js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> {    protected <span class="hljs-attr">name</span>: string;    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">name: string</span>) { <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = name; }}<span class="hljs-keyword">class</span> <span class="hljs-title class_">Employee</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">Person</span> {    private <span class="hljs-attr">department</span>: string;    <span class="hljs-title function_">constructor</span>(<span class="hljs-params">name: string, department: string</span>) {        <span class="hljs-variable language_">super</span>(name)        <span class="hljs-variable language_">this</span>.<span class="hljs-property">department</span> = department;    }    public <span class="hljs-title function_">getElevatorPitch</span>(<span class="hljs-params"></span>) {        <span class="hljs-keyword">return</span> <span class="hljs-string">`Hello, my name is <span class="hljs-subst">${<span class="hljs-variable language_">this</span>.name}</span> and I work in <span class="hljs-subst">${<span class="hljs-variable language_">this</span>.department}</span>.`</span>;    }}<span class="hljs-keyword">let</span> howard = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Employee</span>(<span class="hljs-string">"Howard"</span>, <span class="hljs-string">"Sales"</span>);<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(howard.<span class="hljs-title function_">getElevatorPitch</span>());<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(howard.<span class="hljs-property">name</span>); <span class="hljs-comment">// 错误</span></code></pre><h1 id="泛型"><a class="markdownIt-Anchor" href="#泛型"></a> 泛型</h1><pre class="highlight"><code class="js"><span class="hljs-comment">//例如，我们需要一种方法使返回值的类型与传入参数的类型是相同的。</span><span class="hljs-keyword">function</span> identity&lt;T&gt;(<span class="hljs-attr">arg</span>: T): T {    <span class="hljs-keyword">return</span> arg;}<span class="hljs-keyword">let</span> output = identity&lt;string&gt;(<span class="hljs-string">"myString"</span>);<span class="hljs-comment">//方法一：传入类型参数</span><span class="hljs-keyword">let</span> output = <span class="hljs-title function_">identity</span>(<span class="hljs-string">"myString"</span>);<span class="hljs-comment">//方法二：类型推论</span><span class="hljs-comment">//泛型类型</span><span class="hljs-keyword">function</span> identity&lt;T&gt;(<span class="hljs-attr">arg</span>: T): T {    <span class="hljs-keyword">return</span> arg;}<span class="hljs-keyword">let</span> <span class="hljs-attr">myIdentity</span>: &lt;U&gt;<span class="hljs-function">(<span class="hljs-params">arg: U</span>) =&gt;</span> U = identity;<span class="hljs-keyword">let</span> <span class="hljs-attr">myIdentity</span>: {&lt;T&gt;(<span class="hljs-attr">arg</span>: T): T} = identity; <span class="hljs-comment">//使用签名来定义泛型类型</span><span class="hljs-comment">//泛型接口</span>interface <span class="hljs-title class_">GenericIdentityFn</span>&lt;T&gt; {    (<span class="hljs-attr">arg</span>: T): T;}<span class="hljs-keyword">function</span> identity&lt;T&gt;(<span class="hljs-attr">arg</span>: T): T {    <span class="hljs-keyword">return</span> arg;}<span class="hljs-keyword">let</span> <span class="hljs-attr">myIdentity</span>: <span class="hljs-title class_">GenericIdentityFn</span>&lt;number&gt; = identity;<span class="hljs-comment">//泛型类</span><span class="hljs-keyword">class</span> <span class="hljs-title class_">GenericNumber</span>&lt;T&gt; {    <span class="hljs-attr">zeroValue</span>: T;    <span class="hljs-attr">add</span>: <span class="hljs-function">(<span class="hljs-params">x: T, y: T</span>) =&gt;</span> T;}<span class="hljs-keyword">let</span> myGenericNumber = <span class="hljs-keyword">new</span> <span class="hljs-title class_">GenericNumber</span>&lt;number&gt;();myGenericNumber.<span class="hljs-property">zeroValue</span> = <span class="hljs-number">0</span>;myGenericNumber.<span class="hljs-property">add</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">x, y</span>) { <span class="hljs-keyword">return</span> x + y; };</code></pre><h2 id="泛型约束"><a class="markdownIt-Anchor" href="#泛型约束"></a> 泛型约束</h2><pre class="highlight"><code class="js"><span class="hljs-comment">//我们希望用户输入的key是obj已经存在的属性</span><span class="hljs-keyword">function</span> getProperty&lt;T, K <span class="hljs-keyword">extends</span> keyof T&gt;(<span class="hljs-attr">obj</span>: T, <span class="hljs-attr">key</span>: K) {    <span class="hljs-keyword">return</span> obj[key];}<span class="hljs-keyword">let</span> x = { <span class="hljs-attr">a</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">b</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">c</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">d</span>: <span class="hljs-number">4</span> };<span class="hljs-title function_">getProperty</span>(x, <span class="hljs-string">"a"</span>); <span class="hljs-comment">// okay</span><span class="hljs-title function_">getProperty</span>(x, <span class="hljs-string">"m"</span>); <span class="hljs-comment">// error: Argument of type 'm' isn't assignable to 'a' | 'b' | 'c' | 'd'.</span></code></pre><h1 id="装饰器"><a class="markdownIt-Anchor" href="#装饰器"></a> 装饰器</h1><h1 id="交叉类型和mixin"><a class="markdownIt-Anchor" href="#交叉类型和mixin"></a> 交叉类型和Mixin</h1><pre class="highlight"><code class="js">type <span class="hljs-title class_">LinkedList</span>&lt;T&gt; = T &amp; { <span class="hljs-attr">next</span>: <span class="hljs-title class_">LinkedList</span>&lt;T&gt; };interface <span class="hljs-title class_">Person</span> {    <span class="hljs-attr">name</span>: string;}<span class="hljs-keyword">var</span> <span class="hljs-attr">people</span>: <span class="hljs-title class_">LinkedList</span>&lt;<span class="hljs-title class_">Person</span>&gt;;<span class="hljs-keyword">var</span> s = people.<span class="hljs-property">name</span>;<span class="hljs-keyword">var</span> s = people.<span class="hljs-property">next</span>.<span class="hljs-property">name</span>;<span class="hljs-keyword">var</span> s = people.<span class="hljs-property">next</span>.<span class="hljs-property">next</span>.<span class="hljs-property">name</span>;<span class="hljs-keyword">var</span> s = people.<span class="hljs-property">next</span>.<span class="hljs-property">next</span>.<span class="hljs-property">next</span>.<span class="hljs-property">name</span>;</code></pre>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>力扣第一天</title>
      <link href="/2023/02/14/%E5%8A%9B%E6%89%A3%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
      <url>/2023/02/14/%E5%8A%9B%E6%89%A3%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<h1 id="两数之和"><a class="markdownIt-Anchor" href="#两数之和"></a> 两数之和</h1><p>难度：⭐</p><p>题目要求：给定一个整数数组 nums&nbsp; 和一个整数目标值 target，请你在该数组中找出和为目标值 target&nbsp; 的整数对，并返回它们的数组下标。</p><ul><li>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</li><li>你可以按任意顺序返回答案。</li></ul><h2 id="解法一下三角遍历"><a class="markdownIt-Anchor" href="#解法一下三角遍历"></a> 解法一：下三角遍历</h2><h2 id="解法二下三角哈希"><a class="markdownIt-Anchor" href="#解法二下三角哈希"></a> 解法二：下三角+哈希</h2><p>给定第一个数 num1，向后查询 (target-num1)</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">twoSum</span>(<span class="hljs-params">self, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>], target: <span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]:        hashmap={}        <span class="hljs-keyword">for</span> i,num <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(nums):            <span class="hljs-keyword">if</span> hashmap.get(target-num,<span class="hljs-literal">None</span>) <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:                <span class="hljs-keyword">return</span> [i,hashmap.get(target-num)]            hashmap[num]=i        <span class="hljs-keyword">return</span> []</code></pre><h2 id="知识点"><a class="markdownIt-Anchor" href="#知识点"></a> 知识点</h2><ol><li>哈希表：使用哈希算法建立从内容到位置的映射。适用于随机读写/查找的场景，复杂度为O(1)</li><li>python中的哈希表可以通过内置的字典来实现</li><li>下三角：对于组合问题，从当前位置向前或者向后遍历能够降低一半复杂度</li></ol>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo workflow</title>
      <link href="/2023/02/13/hexo-workflow/"/>
      <url>/2023/02/13/hexo-workflow/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-写博客基本流程"><a class="markdownIt-Anchor" href="#hexo-写博客基本流程"></a> hexo 写博客基本流程</h1><pre class="highlight"><code class="bash"><span class="hljs-comment"># 打开桌面post文件夹的快捷方式</span><span class="hljs-comment"># 新建md文件，撰写内容</span><span class="hljs-built_in">cd</span> ~/bloghexo clean &amp;&amp; hexo g &amp;&amp; hexo d<span class="hljs-comment"># 可以alias成一条命令 fabu</span><span class="hljs-comment"># 删除直接删文件</span></code></pre><h1 id="发布前的处理"><a class="markdownIt-Anchor" href="#发布前的处理"></a> 发布前的处理</h1><p>鉴于 hexo 各个渲染器的不完备，即使选择相对较好的 pandoc，也要在发布前预处理。</p><ol><li><p>图片去除相对路径和中括号里的图注，只留下小括号里文件名。<s>这样会在 typora 本地看不到图片。</s></p><blockquote><p>用 obsidian+custom attachment location 插件完美解决</p></blockquote></li><li><p>行内公式不能有空格。</p></li></ol><h1 id="主力换-win11-后的更新"><a class="markdownIt-Anchor" href="#主力换-win11-后的更新"></a> 主力换 win11 后的更新</h1><p>换主题 <a href="https://github.com/Haojen/hexo-theme-Claudia/blob/master/README-CN.md">hexo-theme-Claudia/README-CN.md at master · Haojen/hexo-theme-Claudia · GitHub</a><br>按其主页要求安装 npm 包。<br>由于 npm 迭代很快，很多包安装时就报错。解决方案：用新出的替代包，向下兼容</p><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">必要</span>npm install hexo-renderer-pugnpm install hexo-renderer-dartsassnpm install hexo-generator-search<span class="hljs-meta prompt_">#</span><span class="language-bash">选择性安装</span><span class="hljs-meta prompt_"># </span><span class="language-bash">如果需要添加订阅功能</span>npm install hexo-generator-feed<span class="hljs-meta prompt_"># </span><span class="language-bash">流程图功能</span>npm install hexo-filter-flowchart --save<span class="hljs-meta prompt_"># </span><span class="language-bash">Emoji</span>npm install hexo-filter-github-emojis --save<span class="hljs-meta prompt_"># </span><span class="language-bash">搜索功能</span>npm install hexo-generator-search --save<span class="hljs-meta prompt_"># </span><span class="language-bash">渲染器 数学公式</span>npm install hexo-renderer-markdown-it-plus --savenpm install hexo-math --savenpm install hexo-asset-img --save</code></pre><h2 id="公式支持mathjax-换为-katex"><a class="markdownIt-Anchor" href="#公式支持mathjax-换为-katex"></a> 公式支持：mathjax 换为 KaTex</h2><p>katex 渲染速度更快，并且无需主题支持<br>修改站点根目录下面的_config.yml:</p><pre class="highlight"><code class="yaml"><span class="hljs-attr">math:</span>  <span class="hljs-attr">engine:</span> <span class="hljs-string">katex</span>  <span class="hljs-attr">katex:</span>    <span class="hljs-attr">css:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/katex@0.10.0/dist/katex.min.css</span>    <span class="hljs-attr">js:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/katex@0.10.0/dist/katex.min.js</span>    <span class="hljs-attr">config:</span>      <span class="hljs-comment"># KaTeX config</span>      <span class="hljs-attr">throwOnError:</span> <span class="hljs-literal">false</span>      <span class="hljs-attr">errorColor:</span> <span class="hljs-string">"#cc0000"</span></code></pre><p>主题文件夹中的_config.yml:</p><pre class="highlight"><code class="yaml"><span class="hljs-attr">math:</span>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>  <span class="hljs-attr">per_page:</span> <span class="hljs-literal">false</span>  <span class="hljs-comment">#engine: mathjax</span>  <span class="hljs-attr">engine:</span> <span class="hljs-string">katex</span>  <span class="hljs-attr">katex:</span>    <span class="hljs-comment"># Use 0.7.1 as default, jsdelivr as default CDN, works everywhere even in China</span>    <span class="hljs-attr">cdn:</span> <span class="hljs-string">//cdn.jsdelivr.net/npm/katex@0.10.0/dist/katex.min.css</span>    <span class="hljs-comment">#cdn: //cdn.jsdelivr.net/npm/katex@0.7.1/dist/katex.min.css</span>    <span class="hljs-comment"># CDNJS, provided by cloudflare, maybe the best CDN, but not works in China</span>    <span class="hljs-comment">#cdn: //cdnjs.cloudflare.com/ajax/libs/KaTeX/0.7.1/katex.min.css</span>    <span class="hljs-attr">copy_tex:</span>      <span class="hljs-comment"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>      <span class="hljs-attr">copy_tex_js:</span> <span class="hljs-string">//cdn.jsdelivr.net/npm/katex@0/dist/contrib/copy-tex.min.js</span>      <span class="hljs-attr">copy_tex_css:</span> <span class="hljs-string">//cdn.jsdelivr.net/npm/katex@0/dist/contrib/copy-tex.min.css</span></code></pre><h2 id="图片支持hexo-asset-img-forhexo5"><a class="markdownIt-Anchor" href="#图片支持hexo-asset-img-forhexo5"></a> 图片支持：hexo-asset-img-forhexo5</h2><p>要求：本地markdown能渲染出图片，不做任何修改，网站部署就能在首页和文章中看到图片，公式同样这个要求</p><h3 id="方案一nextpandocobsidian"><a class="markdownIt-Anchor" href="#方案一nextpandocobsidian"></a> 方案一：next+pandoc+obsidian</h3><p>这也是我上个版本的解决方案<br><a href="https://theme-next.js.org/docs/third-party-services/math-equations">Math Equations | NexT</a></p><h3 id="方案二别的主题hexo-renderer-markdown-it-plusobsidian"><a class="markdownIt-Anchor" href="#方案二别的主题hexo-renderer-markdown-it-plusobsidian"></a> 方案二：别的主题+hexo-renderer-markdown-it-plus+obsidian</h3><p>这个版本不用next了，window对pandoc支持可能也有问题，安装时候报错。<br>查了半天资料，得出结论：<strong>必须在渲染时改为<code>{%xxx.jpg%}</code>格式，渲染前图片仅使用文件名，且hexo配置文件中<code>post_asset_folder: true</code>。</strong><br>实现该功能的npm包<code>hexo-asset-image</code>已失效。由于这个功能时普遍的需求，懒得自己改源码，去npm官网搜索新的轮子。<br>使用 npm 包：<code>hexo-asset-img</code></p><blockquote><p>obsidian 一定要装 easy typing 插件！太好用了！</p></blockquote><h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1><p><a href="https://blog.csdn.net/appleyuchi/article/details/92795620?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1-92795620-blog-105846999.pc_relevant_multi_platform_whitelistv3&amp;spm=1001.2101.3001.4242.2&amp;utm_relevant_index=4">hexo 的 yelee 主题使用 katex 引擎(markdown 渲染加速)_微电子学与固体电子学-俞驰的博客-CSDN 博客</a></p>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复杂网络基础</title>
      <link href="/2023/02/13/%E5%A4%8D%E6%9D%82%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/02/13/%E5%A4%8D%E6%9D%82%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="图论"><a class="markdownIt-Anchor" href="#图论"></a> 图论</h1><h2 id="集聚系数"><a class="markdownIt-Anchor" href="#集聚系数"></a> 集聚系数</h2><ol><li><strong>局部集聚系数</strong>: 节点集实际连边数/理论最大连边数</li><li><strong>全局集聚系数</strong>: 3x三角形个数/三元组个数</li></ol><blockquote><p>如何计算三元组个数：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><msub><mi>d</mi><mi>i</mi></msub><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">C_{d_i}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1973159999999998em;vertical-align:-0.3832079999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4168920000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3832079999999999em;"><span></span></span></span></span></span></span></span></span></span></p></blockquote><h2 id="介数"><a class="markdownIt-Anchor" href="#介数"></a> 介数</h2><p>节点i的介数：所有最短路径中，经过节点i的数量<br>边ij的介数：所有最短路径中，经过边ij的数量</p><h2 id="核度"><a class="markdownIt-Anchor" href="#核度"></a> 核度</h2><p>若一个节点属于k核而不属于（k+1）核，则该节点核度为k</p><h1 id="随机网络"><a class="markdownIt-Anchor" href="#随机网络"></a> 随机网络</h1><h2 id="er生成算法"><a class="markdownIt-Anchor" href="#er生成算法"></a> ER生成算法</h2><p>G(N,L) vs. G(N,p)</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">GNL</span>(<span class="hljs-params">N,L</span>)G=nx.Graph()nlist=<span class="hljs-built_in">list</span>(G.add_nodes_from(<span class="hljs-built_in">range</span>(N)))edge_count=<span class="hljs-number">0</span><span class="hljs-keyword">while</span> edge_count&lt;L:u=random.choice(nlist)v=random.choice(nlist)<span class="hljs-keyword">if</span> u==v <span class="hljs-keyword">or</span> G.has_edge(u,v):<span class="hljs-keyword">continue</span><span class="hljs-keyword">else</span>:G.add_edge(u,v)edge_count+=<span class="hljs-number">1</span><span class="hljs-keyword">return</span> G</code></pre><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">GNP</span>(<span class="hljs-params">N,p</span>)G=nx.Graph()G.add_nodes_from(<span class="hljs-built_in">range</span>(N))edges=itertools.combinations(<span class="hljs-built_in">range</span>(N),<span class="hljs-number">2</span>)<span class="hljs-keyword">for</span> e <span class="hljs-keyword">in</span> edges:<span class="hljs-keyword">if</span> random.random()&lt;p:G.add_edge(*e)<span class="hljs-keyword">return</span> G</code></pre><h2 id="er随机网络的性质"><a class="markdownIt-Anchor" href="#er随机网络的性质"></a> ER随机网络的性质</h2><ol><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>平均度</mtext><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">平均度=p(N-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">均</span><span class="mord cjk_fallback">度</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li><li>度分布为二项分布，在较大网络中近似为泊松分布<br><img src="/2023/02/13/%E5%A4%8D%E6%9D%82%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/Pasted%20image%2020230127211443.png" alt=""></li><li>当N趋于无穷，度分布为泊松分布，平均距离小，集聚系数小</li><li>巨连通分支规模和p的关系</li></ol><blockquote><p>横坐标为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">pN</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>，纵坐标为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>巨连通分支节点数</mtext><mi mathvariant="normal">/</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">巨连通分支节点数/N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">巨</span><span class="mord cjk_fallback">连</span><span class="mord cjk_fallback">通</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">支</span><span class="mord cjk_fallback">节</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">数</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></p></blockquote><p><img src="/2023/02/13/%E5%A4%8D%E6%9D%82%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/Pasted%20image%2020230127212153.png" alt=""></p><p><img src="/2023/02/13/%E5%A4%8D%E6%9D%82%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/Pasted%20image%2020230127212953.png" alt=""></p><h1 id="小世界网络"><a class="markdownIt-Anchor" href="#小世界网络"></a> 小世界网络</h1><p><strong>小</strong>的定义：平均距离正比于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>n</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">lnN</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></p><h2 id="ws模型"><a class="markdownIt-Anchor" href="#ws模型"></a> WS模型</h2><p>在k近邻规则网络中对边进行重连</p><blockquote><p>性质：随机重连前，集聚系数较高，平均距离较大；随机重连后，平均距离变小，集聚系数的降低需要更高的重连概率，越来越趋近于随机网络<br><img src="/2023/02/13/%E5%A4%8D%E6%9D%82%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/Pasted%20image%2020230128144525.png" alt=""></p></blockquote><h2 id="nw模型"><a class="markdownIt-Anchor" href="#nw模型"></a> NW模型</h2><p>在k近邻规则网络中以p的概率加边</p><h1 id="无标度幂律网络"><a class="markdownIt-Anchor" href="#无标度幂律网络"></a> 无标度（幂律）网络</h1><h2 id="离散形式"><a class="markdownIt-Anchor" href="#离散形式"></a> 离散形式</h2><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>p</mi><mi>k</mi></msub><mo>=</mo><mi>C</mi><msup><mi>k</mi><mrow><mo>−</mo><mi>γ</mi></mrow></msup></mrow><annotation encoding="application/x-tex">p_k=Ck^{-\gamma}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.821331em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.821331em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></munderover><msub><mi>p</mi><mi>k</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sum_{k=1}^\infty p_k=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.9535100000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><h2 id="和随机网络的对比"><a class="markdownIt-Anchor" href="#和随机网络的对比"></a> 和随机网络的对比</h2><p>两头多，中间少</p><blockquote><p>紫色为无标度网络，绿色为随机网络（泊松分布）。度分布-双对数坐标轴。<br><img src="/2023/02/13/%E5%A4%8D%E6%9D%82%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20230128194302960.png" alt=""></p></blockquote><h2 id="最大度期望"><a class="markdownIt-Anchor" href="#最大度期望"></a> 最大度期望</h2><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>k</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>=</mo><msub><mi>k</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><msup><mi>N</mi><mfrac><mn>1</mn><mrow><mi>γ</mi><mo>−</mo><mn>1</mn></mrow></mfrac></msup></mrow><annotation encoding="application/x-tex">k_{max}=k_{min}N^{\frac{1}{\gamma-1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1867899999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0367899999999999em;"><span style="top:-3.44577em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.48288571428571425em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ol><li>总节点数越大，最大度和最小度的期望差距越大</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span></span> 越大，最大度和最小度的期望差距越小</li></ol><h2 id="平均距离"><a class="markdownIt-Anchor" href="#平均距离"></a> 平均距离</h2><p><img src="/2023/02/13/%E5%A4%8D%E6%9D%82%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20230128203233246.png" alt=""></p><h2 id="集聚系数-2"><a class="markdownIt-Anchor" href="#集聚系数-2"></a> 集聚系数</h2><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">⟨</mo><mi>C</mi><mo stretchy="false">⟩</mo><mo>∼</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>l</mi><mi>n</mi><mi>N</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mi>N</mi></mfrac></mrow><annotation encoding="application/x-tex">\langle C \rangle \sim\frac{(lnN)^2}{N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.177108em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="度保持的随机化"><a class="markdownIt-Anchor" href="#度保持的随机化"></a> 度保持的随机化</h2><p>nx.double_edge_swap</p><pre class="highlight"><code class="">u--v            u  v       becomes  |  |x--y            x  y</code></pre><h1 id="ba无标度网络"><a class="markdownIt-Anchor" href="#ba无标度网络"></a> BA无标度网络</h1><ol><li>网络是逐步生长的</li><li>每个时间步增加m个节点，优先选择度高的节点（偏好连接）<br><img src="/2023/02/13/%E5%A4%8D%E6%9D%82%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20230128233914746.png" alt=""></li></ol><h2 id="非线性偏好连接"><a class="markdownIt-Anchor" href="#非线性偏好连接"></a> 非线性偏好连接</h2><p><img src="/2023/02/13/%E5%A4%8D%E6%9D%82%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20230128235913105.png" alt=""></p><h1 id="网络鲁棒性"><a class="markdownIt-Anchor" href="#网络鲁棒性"></a> 网络鲁棒性</h1><h2 id="集聚影响力collective-influence"><a class="markdownIt-Anchor" href="#集聚影响力collective-influence"></a> 集聚影响力（Collective Influence）</h2><p><img src="/2023/02/13/%E5%A4%8D%E6%9D%82%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/image-20230129205022475.png" alt=""></p><blockquote><p>可以用偏导符号表示k阶邻居 #H2GCN</p></blockquote><h1 id="社团检测"><a class="markdownIt-Anchor" href="#社团检测"></a> 社团检测</h1><p><strong>强社区</strong>：社区内部节点的度都大于外部节点的度<br><strong>弱社区</strong>：社区内部节点的度之和大于外部节点的度之和</p><h2 id="层次聚类算法"><a class="markdownIt-Anchor" href="#层次聚类算法"></a> 层次聚类算法</h2><h3 id="劳沃斯算法凝聚算法"><a class="markdownIt-Anchor" href="#劳沃斯算法凝聚算法"></a> 劳沃斯算法（凝聚算法）</h3><ol><li>将每个节点视为一个社区</li><li>计算社区两两相似度（平均簇相似度）</li><li>合并相似度最高的两个社区（如果有至少一条连边），绘制树状图</li><li>重复步骤2和3，直到所有节点被并入一个社区</li></ol><h3 id="格文-纽曼算法分裂算法"><a class="markdownIt-Anchor" href="#格文-纽曼算法分裂算法"></a> 格文-纽曼算法（分裂算法）</h3><ol><li>计算每条边的介数，删除最高的若干条，直到有子图分离</li><li>将分离的若干个子图作为新的叶子节点，直到这些子图只有一个节点</li></ol>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> math </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>头条大数据推荐项目</title>
      <link href="/2023/02/13/%E5%A4%B4%E6%9D%A1%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8E%A8%E8%8D%90%E9%A1%B9%E7%9B%AE/"/>
      <url>/2023/02/13/%E5%A4%B4%E6%9D%A1%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8E%A8%E8%8D%90%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p><img src="/2023/02/13/%E5%A4%B4%E6%9D%A1%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8E%A8%E8%8D%90%E9%A1%B9%E7%9B%AE/image-20230211193156286.png" alt=""></p><h1 id="环境配置"><a class="markdownIt-Anchor" href="#环境配置"></a> 环境配置</h1><h2 id="启动-hadoop-hive连接-mysql"><a class="markdownIt-Anchor" href="#启动-hadoop-hive连接-mysql"></a> 启动 hadoop、hive(连接 mysql)</h2><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">~/hadoop_code/start_hive.sh</span>start-all.shservice docker startdocker start mysqlhive --service metastore &amp;</code></pre><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">查看mysql</span>docker exec -it mysql bashmysql -uroot -p<span class="hljs-meta prompt_">#</span><span class="language-bash">密码: password</span>ctrl+P+Q 退出</code></pre><h2 id="启动-hbase-spark-thriftserver"><a class="markdownIt-Anchor" href="#启动-hbase-spark-thriftserver"></a> 启动 hbase、spark、thriftserver</h2><pre class="highlight"><code class="shell">cd ~/bigdatastart-hbase.sh./spark/sbin/start-all.shhbase thrift start</code></pre><h2 id="检查"><a class="markdownIt-Anchor" href="#检查"></a> 检查</h2><pre class="highlight"><code class="shell">jps10948 ThriftServer3816 ResourceManager3145 DataNode6571 HMaster4813 RunJar7667 Master13557 Jps6998 HRegionServer9691 Worker9948 RunJar3645 SecondaryNameNode2751 NameNode4223 NodeManager6463 HQuorumPeer</code></pre><h1 id="离线计算更新物品画像"><a class="markdownIt-Anchor" href="#离线计算更新物品画像"></a> 离线计算更新物品画像</h1><h2 id="用-sqoop-迁移和同步数据库"><a class="markdownIt-Anchor" href="#用-sqoop-迁移和同步数据库"></a> 用 Sqoop 迁移和同步数据库</h2><p>业务数据通常存放在 mysql 数据库中，我们需要把它定期同步到 hadoop 的 hive 数据仓库中。</p><pre class="highlight"><code class="sql"><span class="hljs-keyword">create</span> database if <span class="hljs-keyword">not</span> <span class="hljs-keyword">exists</span> toutiao comment "user,news information of 136 mysql" location <span class="hljs-string">'/user/hive/warehouse/toutiao.db/'</span>;</code></pre><pre class="highlight"><code class="shell">sqoop list-databases --connect jdbc:mysql://192.168.19.137:3306/ --username root -P</code></pre><p>密码：<strong>password</strong><br>会显示连接到的数据库:</p><pre class="highlight"><code class="">information_schemahivemysqlperformance_schemasystoutiao</code></pre><p>写增量导入的 Sqoop 脚本</p><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">/root/toutiao_project/scripts/import_incremental.sh</span>time=`date +"%Y-%m-%d" -d "-1day"`declare -A checkcheck=([user_profile]=update_time [user_basic]=last_login [news_channel]=update_time)declare -A mergemerge=([user_profile]=user_id [user_basic]=user_id [news_channel]=channel_id)for k in ${!check[@]}do    sqoop import \        --connect jdbc:mysql://192.168.19.137/toutiao \        --username root \        --password password \        --table $k \        --m 4 \        --target-dir /user/hive/warehouse/toutiao.db/$k \        --incremental lastmodified \        --check-column ${check[$k]} \        --merge-key ${merge[$k]} \        --last-value ${time}done</code></pre><p>写 crontab-shell 脚本让 Sqoop 定时运行</p><pre class="highlight"><code class="shell">crontab -e<span class="hljs-meta prompt_">#</span><span class="language-bash">每30分钟运行一次</span>*/30 * * * * /root/toutiao_project/scripts/import_incremental.shservice crond start</code></pre><blockquote><p>这里 MySQL 里面没有创建好，实际会报错，不管。</p></blockquote><h2 id="用户行为埋点收集"><a class="markdownIt-Anchor" href="#用户行为埋点收集"></a> 用户行为埋点收集</h2><h3 id="埋点设置"><a class="markdownIt-Anchor" href="#埋点设置"></a> 埋点设置</h3><pre class="highlight"><code class="json"># 曝光的参数，<span class="hljs-punctuation">{</span><span class="hljs-attr">"actionTime"</span><span class="hljs-punctuation">:</span><span class="hljs-string">"2019-04-10 18:15:35"</span><span class="hljs-punctuation">,</span><span class="hljs-attr">"readTime"</span><span class="hljs-punctuation">:</span><span class="hljs-string">""</span><span class="hljs-punctuation">,</span><span class="hljs-attr">"channelId"</span><span class="hljs-punctuation">:</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-attr">"param"</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">{</span><span class="hljs-attr">"action"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"exposure"</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">"userId"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"2"</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">"articleId"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"[18577, 14299]"</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">"algorithmCombine"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"C2"</span><span class="hljs-punctuation">}</span><span class="hljs-punctuation">}</span># 对文章发生行为的参数<span class="hljs-punctuation">{</span><span class="hljs-attr">"actionTime"</span><span class="hljs-punctuation">:</span><span class="hljs-string">"2019-04-10 18:12:11"</span><span class="hljs-punctuation">,</span><span class="hljs-attr">"readTime"</span><span class="hljs-punctuation">:</span><span class="hljs-string">"2886"</span><span class="hljs-punctuation">,</span><span class="hljs-attr">"channelId"</span><span class="hljs-punctuation">:</span><span class="hljs-number">18</span><span class="hljs-punctuation">,</span><span class="hljs-attr">"param"</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">{</span><span class="hljs-attr">"action"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"read"</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">"userId"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"2"</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">"articleId"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"18005"</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">"algorithmCombine"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"C2"</span><span class="hljs-punctuation">}</span><span class="hljs-punctuation">}</span><span class="hljs-punctuation">{</span><span class="hljs-attr">"actionTime"</span><span class="hljs-punctuation">:</span><span class="hljs-string">"2019-04-10 18:15:32"</span><span class="hljs-punctuation">,</span><span class="hljs-attr">"readTime"</span><span class="hljs-punctuation">:</span><span class="hljs-string">""</span><span class="hljs-punctuation">,</span><span class="hljs-attr">"channelId"</span><span class="hljs-punctuation">:</span><span class="hljs-number">18</span><span class="hljs-punctuation">,</span><span class="hljs-attr">"param"</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">{</span><span class="hljs-attr">"action"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"click"</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">"userId"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"2"</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">"articleId"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"18005"</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">"algorithmCombine"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"C2"</span><span class="hljs-punctuation">}</span><span class="hljs-punctuation">}</span><span class="hljs-punctuation">{</span><span class="hljs-attr">"actionTime"</span><span class="hljs-punctuation">:</span><span class="hljs-string">"2019-04-10 18:15:34"</span><span class="hljs-punctuation">,</span><span class="hljs-attr">"readTime"</span><span class="hljs-punctuation">:</span><span class="hljs-string">"1053"</span><span class="hljs-punctuation">,</span><span class="hljs-attr">"channelId"</span><span class="hljs-punctuation">:</span><span class="hljs-number">18</span><span class="hljs-punctuation">,</span><span class="hljs-attr">"param"</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">{</span><span class="hljs-attr">"action"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"read"</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">"userId"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"2"</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">"articleId"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"18005"</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">"algorithmCombine"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"C2"</span><span class="hljs-punctuation">}</span><span class="hljs-punctuation">}</span>...</code></pre><h3 id="用-flume-收集到-hive-中"><a class="markdownIt-Anchor" href="#用-flume-收集到-hive-中"></a> 用 flume 收集到 hive 中</h3><p>创建 flume 配置文件</p><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">/root/bigdata/flume/collect_click.conf</span>a1.sources = s1a1.sinks = k1a1.channels = c1<span class="hljs-meta prompt_"># </span><span class="language-bash">实时查看日志文件尾</span>a1.sources.s1.channels= c1a1.sources.s1.type = execa1.sources.s1.command = tail -F /root/logs/userClick.log<span class="hljs-meta prompt_"># </span><span class="language-bash">设置两个拦截器 1.格式过滤 2.附加时间戳</span>a1.sources.s1.interceptors=i1 i2a1.sources.s1.interceptors.i1.type=regex_filtera1.sources.s1.interceptors.i1.regex=\\{.*\\}a1.sources.r1.interceptors.i1.excludeEvents = falsea1.sources.s1.interceptors.i2.type=timestamp<span class="hljs-meta prompt_"># </span><span class="language-bash">指定缓冲区和batchdata</span>a1.channels.c1.type=memorya1.channels.c1.capacity=30000a1.channels.c1.transactionCapacity=1000<span class="hljs-meta prompt_"># </span><span class="language-bash">连接hdfs</span>a1.sinks.k1.type=hdfsa1.sinks.k1.channel=c1a1.sinks.k1.hdfs.path=hdfs://192.168.19.137:9000/user/hive/warehouse/profile.db/user_action/%Y-%m-%da1.sinks.k1.hdfs.useLocalTimeStamp = truea1.sinks.k1.hdfs.fileType=DataStreama1.sinks.k1.hdfs.writeFormat=Texta1.sinks.k1.hdfs.rollInterval=0a1.sinks.k1.hdfs.rollSize=10240a1.sinks.k1.hdfs.rollCount=0a1.sinks.k1.hdfs.idleTimeout=60</code></pre><p>hive 中创建数据库和表</p><pre class="highlight"><code class="sql"><span class="hljs-keyword">create</span> database if <span class="hljs-keyword">not</span> <span class="hljs-keyword">exists</span> profile comment "user action" location <span class="hljs-string">'/user/hive/warehouse/profile.db/'</span>;<span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> user_action(actionTime STRING comment "user actions time",readTime STRING comment "user reading time",channelId <span class="hljs-type">INT</span> comment "article channel id",param map comment "action parameter")COMMENT "user primitive action"PARTITIONED <span class="hljs-keyword">BY</span>(dt STRING)<span class="hljs-type">ROW</span> FORMAT SERDE <span class="hljs-string">'org.apache.hive.hcatalog.data.JsonSerDe'</span>LOCATION <span class="hljs-string">'/user/hive/warehouse/profile.db/user_action'</span>;</code></pre><p><code>ROW FORMAT SERDE 'org.apache.hive.hcatalog.data.JsonSerDe'</code>:添加 json 格式匹配功能</p><p>flume 会自动生成目录，在 hive 内部表上直接同步。但是如果想要通过 spark sql 获取内容，每天还是要主动关联：</p><pre class="highlight"><code class="sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> user_action <span class="hljs-keyword">add</span> <span class="hljs-keyword">partition</span> (dt<span class="hljs-operator">=</span><span class="hljs-string">'2023-02-11'</span>) location "/user/hive/warehouse/profile.db/user_action/2023-02-11/"</code></pre><h3 id="使用-supervisor-管理-flume-进程"><a class="markdownIt-Anchor" href="#使用-supervisor-管理-flume-进程"></a> 使用 supervisor 管理 flume 进程</h3><p>flume 及其依赖写入脚本/root/toutiao_project/scripts/collect-click.sh</p><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">!/usr/bin/env bash</span>export JAVA_HOME=/root/bigdata/jdkexport HADOOP_HOME=/root/bigdata/hadoopexport PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin/root/bigdata/flume/bin/flume-ng agent -c /root/bigdata/flume/conf -f /root/bigdata/flume/conf/collect_click.conf -Dflume.root.logger=INFO,console -name a1</code></pre><p>在/etc/supervisor 的 reco.conf 添加</p><pre class="highlight"><code class="shell">[program:collect-click]command=/bin/bash /root/toutiao_project/scripts/collect_click.shuser=rootautorestart=trueredirect_stderr=truestdout_logfile=/root/logs/collect.logloglevel=infostopsignal=KILLstopasgroup=truekillasgroup=true</code></pre><p>最后用 supervisord 启动收集</p><pre class="highlight"><code class="shell">pip install supervisorsupervisord -c /etc/supervisord.confsupervisorctl status</code></pre><h3 id="测试"><a class="markdownIt-Anchor" href="#测试"></a> 测试</h3><pre class="highlight"><code class="shell">echo {\"actionTime\":\"2023-02-11 21:04:39\",\"readTime\":\"\",\"channelId\":18,\"param\":{\"action\": \"click\", \"userId\": \"2\", \"articleId\": \"14299\", \"algorithmCombine\": \"C2\"}} &gt;&gt; userClick.log</code></pre><p>在 <a href="http://192.168.19.137:50070/explorer.html#/user/hive/warehouse/profile.db/user_action/">前端页面</a> 和 hive 中应当看到结果。</p><h2 id="离线文章画像计算"><a class="markdownIt-Anchor" href="#离线文章画像计算"></a> 离线文章画像计算</h2><h3 id="原始文章数据合并"><a class="markdownIt-Anchor" href="#原始文章数据合并"></a> 原始文章数据合并</h3><ol><li>创建 spark 基类</li><li>启动 jupyter</li></ol><pre class="highlight"><code class="shell">source activate py365jupyter notebook --allow-root --ip=192.168.19.137<span class="hljs-meta prompt_"># </span><span class="language-bash">密码：123</span></code></pre><ol start="3"><li>运行 full_call/merge_data</li></ol><h3 id="历史文章-tfidf-计算"><a class="markdownIt-Anchor" href="#历史文章-tfidf-计算"></a> 历史文章 tfidf 计算</h3><ol><li>jieba 分词，去除停用词，保留名词、英文和自定义词库中的词</li><li>使用 spark ML 中 CountVectorizer 包进行词频统计，得到词袋模型/字典<br><img src="/2023/02/13/%E5%A4%B4%E6%9D%A1%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8E%A8%E8%8D%90%E9%A1%B9%E7%9B%AE/image-20230211214707213.png" alt=""></li><li>使用 spark ML 中 IDF 包进一步计算每个单词的权重</li><li>根据索引和权重排序得到可以每篇文章权重最高的 20 个词</li></ol><h3 id="历史文章-textrank-计算"><a class="markdownIt-Anchor" href="#历史文章-textrank-计算"></a> 历史文章 textrank 计算</h3><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">textrank</span>(<span class="hljs-params">partition</span>):    <span class="hljs-keyword">import</span> os    <span class="hljs-keyword">import</span> jieba    <span class="hljs-keyword">import</span> jieba.analyse    <span class="hljs-keyword">import</span> jieba.posseg <span class="hljs-keyword">as</span> pseg    <span class="hljs-keyword">import</span> codecs    abspath = <span class="hljs-string">"/root/words"</span>    <span class="hljs-comment"># 结巴加载用户词典</span>    userDict_path = os.path.join(abspath, <span class="hljs-string">"ITKeywords.txt"</span>)    jieba.load_userdict(userDict_path)    <span class="hljs-comment"># 停用词文本</span>    stopwords_path = os.path.join(abspath, <span class="hljs-string">"stopwords.txt"</span>)    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_stopwords_list</span>():        <span class="hljs-string">"""返回stopwords列表"""</span>        stopwords_list = [i.strip()                          <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> codecs.<span class="hljs-built_in">open</span>(stopwords_path).readlines()]        <span class="hljs-keyword">return</span> stopwords_list    <span class="hljs-comment"># 所有的停用词列表</span>    stopwords_list = get_stopwords_list()    <span class="hljs-keyword">class</span> <span class="hljs-title class_">TextRank</span>(jieba.analyse.TextRank):        <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, window=<span class="hljs-number">20</span>, word_min_len=<span class="hljs-number">2</span></span>):            <span class="hljs-built_in">super</span>(TextRank, self).__init__()            self.span = window  <span class="hljs-comment"># 窗口大小</span>            self.word_min_len = word_min_len  <span class="hljs-comment"># 单词的最小长度</span>            <span class="hljs-comment"># 要保留的词性，根据jieba github ，具体参见https://github.com/baidu/lac</span>            self.pos_filt = <span class="hljs-built_in">frozenset</span>(                (<span class="hljs-string">'n'</span>, <span class="hljs-string">'x'</span>, <span class="hljs-string">'eng'</span>, <span class="hljs-string">'f'</span>, <span class="hljs-string">'s'</span>, <span class="hljs-string">'t'</span>, <span class="hljs-string">'nr'</span>, <span class="hljs-string">'ns'</span>, <span class="hljs-string">'nt'</span>, <span class="hljs-string">"nw"</span>, <span class="hljs-string">"nz"</span>, <span class="hljs-string">"PER"</span>, <span class="hljs-string">"LOC"</span>, <span class="hljs-string">"ORG"</span>))        <span class="hljs-keyword">def</span> <span class="hljs-title function_">pairfilter</span>(<span class="hljs-params">self, wp</span>):            <span class="hljs-string">"""过滤条件，返回True或者False"""</span>            <span class="hljs-keyword">if</span> wp.flag == <span class="hljs-string">"eng"</span>:                <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(wp.word) &lt;= <span class="hljs-number">2</span>:                    <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>            <span class="hljs-keyword">if</span> wp.flag <span class="hljs-keyword">in</span> self.pos_filt <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(wp.word.strip()) &gt;= self.word_min_len \                    <span class="hljs-keyword">and</span> wp.word.lower() <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> stopwords_list:                <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>    <span class="hljs-comment"># TextRank过滤窗口大小为5，单词最小为2</span>    textrank_model = TextRank(window=<span class="hljs-number">5</span>, word_min_len=<span class="hljs-number">2</span>)    allowPOS = (<span class="hljs-string">'n'</span>, <span class="hljs-string">"x"</span>, <span class="hljs-string">'eng'</span>, <span class="hljs-string">'nr'</span>, <span class="hljs-string">'ns'</span>, <span class="hljs-string">'nt'</span>, <span class="hljs-string">"nw"</span>, <span class="hljs-string">"nz"</span>, <span class="hljs-string">"c"</span>)</code></pre><p>同样可以给出 20 个关键词。但是最终结果由 Textank * IDF 再取前 20 给出<br><img src="/2023/02/13/%E5%A4%B4%E6%9D%A1%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8E%A8%E8%8D%90%E9%A1%B9%E7%9B%AE/image-20230211220415129.png" alt=""></p><h3 id="训练词向量模型-word2vec-和增量文章编码"><a class="markdownIt-Anchor" href="#训练词向量模型-word2vec-和增量文章编码"></a> 训练词向量模型 word2vec 和增量文章编码</h3><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> pyspark.ml.feature <span class="hljs-keyword">import</span> Word2Vec<span class="hljs-comment"># minCount忽略总频率低于此频率的所有单词</span>w2v = Word2Vec(vectorSize=<span class="hljs-number">100</span>, inputCol=<span class="hljs-string">'words'</span>, outputCol=<span class="hljs-string">'model'</span>, minCount=<span class="hljs-number">3</span>)w2v_model = w2v.fit(words_df)w2v_model.write().overwrite().save(<span class="hljs-string">"hdfs://hadoop-master:9000/headlines/models/test.word2vec"</span>)<span class="hljs-keyword">from</span> pyspark.ml.feature <span class="hljs-keyword">import</span> Word2VecModelword_vec = Word2VecModel.load(<span class="hljs-string">"hdfs://hadoop-master:9000/headlines/models/test.word2vec"</span>)vectors = word_vec.getVectors()</code></pre><p>编码后和每个单词权重相乘，最终得到每篇文章的特征向量（文章画像）</p><h3 id="用-apscheduler-定时更新文章画像"><a class="markdownIt-Anchor" href="#用-apscheduler-定时更新文章画像"></a> 用 Apscheduler 定时更新文章画像</h3><ol><li>增量更新文章编码，包括 hive 里的 article_profile<blockquote><p>新词可以用平均值填充</p></blockquote></li><li>定期重新计算 tfidf、textrank 和 word2vec 模型</li><li>Apsheduler 是 crontab 升级版</li></ol><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> sys<span class="hljs-keyword">import</span> osBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))sys.path.insert(<span class="hljs-number">0</span>, os.path.join(BASE_DIR))sys.path.insert(<span class="hljs-number">0</span>, os.path.join(BASE_DIR, <span class="hljs-string">'reco_sys'</span>))<span class="hljs-keyword">from</span> apscheduler.schedulers.blocking <span class="hljs-keyword">import</span> BlockingScheduler<span class="hljs-keyword">from</span> apscheduler.executors.pool <span class="hljs-keyword">import</span> ProcessPoolExecutor<span class="hljs-keyword">from</span> scheduler.update <span class="hljs-keyword">import</span> update_article_profile<span class="hljs-comment"># 创建scheduler，多进程执行</span>executors = {    <span class="hljs-string">'default'</span>: ProcessPoolExecutor(<span class="hljs-number">3</span>)}scheduler = BlockingScheduler(executors=executors)<span class="hljs-comment"># 添加定时更新任务更新文章画像,每隔一小时更新</span>scheduler.add_job(update_article_profile, trigger=<span class="hljs-string">'interval'</span>, hours=<span class="hljs-number">1</span>)scheduler.start()</code></pre><h1 id="离线用户召回集与排序计算"><a class="markdownIt-Anchor" href="#离线用户召回集与排序计算"></a> 离线用户召回集与排序计算</h1><h2 id="用户画像存储与获取"><a class="markdownIt-Anchor" href="#用户画像存储与获取"></a> 用户画像存储与获取</h2><p>用户画像需要快速迭代，方便读取，选择存储在 hbase 中。这里我们从 hbase 关联到 hive。</p><pre class="highlight"><code class="sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">external</span> <span class="hljs-keyword">table</span> user_profile_hbase(user_id STRING comment "userID",information map<span class="hljs-operator">&lt;</span>string, <span class="hljs-keyword">DOUBLE</span><span class="hljs-operator">&gt;</span> comment "user basic information",article_partial map<span class="hljs-operator">&lt;</span>string, <span class="hljs-keyword">DOUBLE</span><span class="hljs-operator">&gt;</span> comment "article partial",env map<span class="hljs-operator">&lt;</span>string, <span class="hljs-type">INT</span><span class="hljs-operator">&gt;</span> comment "user env")COMMENT "user profile table"STORED <span class="hljs-keyword">BY</span> <span class="hljs-string">'org.apache.hadoop.hive.hbase.HBaseStorageHandler'</span><span class="hljs-keyword">WITH</span> SERDEPROPERTIES ("hbase.columns.mapping" <span class="hljs-operator">=</span> ":key,basic:,partial:,env:")TBLPROPERTIES ("hbase.table.name" <span class="hljs-operator">=</span> "user_profile");</code></pre><p>读取 user_article_basic 表，<strong>合并行为表</strong>与<strong>文章画像中的主题词</strong></p><pre class="highlight"><code class="python"><span class="hljs-comment"># 获取基本用户行为信息，然后进行文章画像的主题词合并</span>uup.spark.sql(<span class="hljs-string">"use profile"</span>)<span class="hljs-comment"># 取出日志中的channel_id</span>user_article_ = uup.spark.sql(<span class="hljs-string">"select * from user_article_basic"</span>).drop(<span class="hljs-string">'channel_id'</span>)uup.spark.sql(<span class="hljs-string">'use article'</span>)article_label = uup.spark.sql(<span class="hljs-string">"select article_id, channel_id, topics from article_profile"</span>)<span class="hljs-comment"># 合并使用文章中正确的channel_id</span>click_article_res = user_article_.join(article_label, how=<span class="hljs-string">'left'</span>, on=[<span class="hljs-string">'article_id'</span>])</code></pre><h3 id="用户权重计算公式"><a class="markdownIt-Anchor" href="#用户权重计算公式"></a> 用户权重计算公式</h3><p><strong>用户标签权重 =( 行为类型权重之和) × 时间衰减</strong></p><table><thead><tr><th>行为</th><th>分值</th></tr></thead><tbody><tr><td>阅读时间(&lt;1000)</td><td>1</td></tr><tr><td>阅读时间(&gt;=1000)</td><td>2</td></tr><tr><td>收藏</td><td>2</td></tr><tr><td>分享</td><td>3</td></tr><tr><td>点击</td><td>5</td></tr><tr><td><strong>时间衰减</strong>=1/(log(t)+1) ,t 为时间发生时间距离当前时间的大小</td><td></td></tr></tbody></table><p>使用 happybase 关联文章表，统计每个词的标签权重，得到用户的关键词喜好 top10</p><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> happybase<span class="hljs-comment">#  用于读取hbase缓存结果配置</span>pool = happybase.ConnectionPool(size=<span class="hljs-number">10</span>, host=<span class="hljs-string">'192.168.19.137'</span>, port=<span class="hljs-number">9090</span>)<span class="hljs-keyword">with</span> pool.connection() <span class="hljs-keyword">as</span> conn:    table = conn.table(<span class="hljs-string">'user_profile'</span>)    <span class="hljs-comment"># 获取每个键 对应的所有列的结果</span>    data = table.row(<span class="hljs-string">b'user:2'</span>, columns=[<span class="hljs-string">b'partial'</span>])    conn.close()</code></pre><p>完善代码后，添加到 Apscheduler 中</p><pre class="highlight"><code class="python">scheduler.add_job(update_user_profile, trigger=<span class="hljs-string">'interval'</span>, hours=<span class="hljs-number">2</span>)</code></pre><h2 id="召回排序"><a class="markdownIt-Anchor" href="#召回排序"></a> 召回排序</h2><ul><li>用户冷启动（前期点击行为较少情况）<ul><li>非个性化推荐<ul><li><strong>热门召回</strong>：自定义热门规则，根据当前时间段热点定期更新维护<em>热点文章库</em></li><li><strong>新文章召回</strong>：为了提高新文章的曝光率，建立<em>新文章库</em>，进行推荐</li></ul></li><li>个性化推荐：<ul><li><strong>基于内容的协同过滤在线召回</strong>：基于用户实时兴趣画像相似的召回结果用于首页的个性化推荐</li></ul></li></ul></li><li>后期离线部分（用户点击行为较多，用户画像完善）<ul><li>建立用户长期兴趣画像（详细）：包括用户各个维度的兴趣特征</li><li>训练排序模型<ul><li><strong>LR 模型、FTRL、Wide&amp;Deep</strong></li></ul></li><li>离线部分的召回：<ul><li><strong>基于模型协同过滤推荐离线召回</strong>：ALS</li><li><strong>基于内容的离线召回</strong>：或者称基于用户画像的召回</li></ul></li></ul></li></ul><h3 id="基于-als-模型的召回"><a class="markdownIt-Anchor" href="#基于-als-模型的召回"></a> 基于 ALS 模型的召回</h3><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> pyspark.ml.recommendation <span class="hljs-keyword">import</span> ALS<span class="hljs-comment"># 模型训练和推荐默认每个用户固定文章个数</span>als = ALS(userCol=<span class="hljs-string">'als_user_id'</span>, itemCol=<span class="hljs-string">'als_article_id'</span>, ratingCol=<span class="hljs-string">'clicked'</span>, checkpointInterval=<span class="hljs-number">1</span>)model = als.fit(als_user_article_click)recall_res = model.recommendForAllUsers(<span class="hljs-number">100</span>)</code></pre><p>召回结果存储</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">save_offline_recall_hbase</span>(<span class="hljs-params">partition</span>):<span class="hljs-string">"""离线模型召回结果存储"""</span><span class="hljs-keyword">import</span> happybasepool = happybase.ConnectionPool(size=<span class="hljs-number">10</span>, host=<span class="hljs-string">'hadoop-master'</span>, port=<span class="hljs-number">9090</span>)<span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> partition:<span class="hljs-keyword">with</span> pool.connection() <span class="hljs-keyword">as</span> conn:<span class="hljs-comment"># 获取历史看过的该频道文章</span>history_table = conn.table(<span class="hljs-string">'history_recall'</span>)<span class="hljs-comment"># 多个版本</span>data = history_table.cells(<span class="hljs-string">'reco:his:{}'</span>.<span class="hljs-built_in">format</span>(row.user_id).encode(),   <span class="hljs-string">'channel:{}'</span>.<span class="hljs-built_in">format</span>(row.channel_id).encode())history = []<span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(data) &gt;= <span class="hljs-number">2</span>:<span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> data[:-<span class="hljs-number">1</span>]:history.extend(<span class="hljs-built_in">eval</span>(l))<span class="hljs-keyword">else</span>:history = []<span class="hljs-comment"># 过滤reco_article与history</span>reco_res = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(row.article_list) - <span class="hljs-built_in">set</span>(history))<span class="hljs-keyword">if</span> reco_res:table = conn.table(<span class="hljs-string">'cb_recall'</span>)<span class="hljs-comment"># 默认放在推荐频道</span>table.put(<span class="hljs-string">'recall:user:{}'</span>.<span class="hljs-built_in">format</span>(row.user_id).encode(),  {<span class="hljs-string">'als:{}'</span>.<span class="hljs-built_in">format</span>(row.channel_id).encode(): <span class="hljs-built_in">str</span>(reco_res).encode()})conn.close()<span class="hljs-comment"># 放入历史推荐过文章</span>history_table.put(<span class="hljs-string">"reco:his:{}"</span>.<span class="hljs-built_in">format</span>(row.user_id).encode(),  {<span class="hljs-string">'channel:{}'</span>.<span class="hljs-built_in">format</span>(row.channel_id): <span class="hljs-built_in">str</span>(reco_res).encode()})conn.close()als_recall.foreachPartition(save_offline_recall_hbase)</code></pre><h3 id="基于内容的召回"><a class="markdownIt-Anchor" href="#基于内容的召回"></a> 基于内容的召回</h3><p>即根据 LHS 等算法，快速得到用户当前点击文章的相似文章集，进行推荐。</p><pre class="highlight"><code class="python"><span class="hljs-comment"># 循环partition</span><span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> partition:    <span class="hljs-comment"># 获取相似文章结果表</span>    similar_article = similar_table.row(<span class="hljs-built_in">str</span>(row.article_id).encode(),                                        columns=[<span class="hljs-string">b'similar'</span>])    <span class="hljs-comment"># 相似文章相似度排序过滤，召回不需要太大的数据， 百个，千</span>    _srt = <span class="hljs-built_in">sorted</span>(similar_article.items(), key=<span class="hljs-keyword">lambda</span> item: item[<span class="hljs-number">1</span>], reverse=<span class="hljs-literal">True</span>)    <span class="hljs-keyword">if</span> _srt:        <span class="hljs-comment"># 每次行为推荐若干篇文章</span>        reco_article = [<span class="hljs-built_in">int</span>(i[<span class="hljs-number">0</span>].split(<span class="hljs-string">b':'</span>)[<span class="hljs-number">1</span>]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> _srt][:<span class="hljs-number">10</span>]</code></pre><blockquote><p>基于内容和基于模型的结果存入同一张 hbase 表</p></blockquote><pre class="highlight"><code class="sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">external</span> <span class="hljs-keyword">table</span> cb_recall_hbase(user_id STRING comment "userID",als map<span class="hljs-operator">&lt;</span>string, <span class="hljs-keyword">ARRAY</span><span class="hljs-operator">&lt;</span><span class="hljs-type">BIGINT</span><span class="hljs-operator">&gt;&gt;</span> comment "als recall",content map<span class="hljs-operator">&lt;</span>string, <span class="hljs-keyword">ARRAY</span><span class="hljs-operator">&lt;</span><span class="hljs-type">BIGINT</span><span class="hljs-operator">&gt;&gt;</span> comment "content recall",online map<span class="hljs-operator">&lt;</span>string, <span class="hljs-keyword">ARRAY</span><span class="hljs-operator">&lt;</span><span class="hljs-type">BIGINT</span><span class="hljs-operator">&gt;&gt;</span> comment "online recall")COMMENT "user recall table"STORED <span class="hljs-keyword">BY</span> <span class="hljs-string">'org.apache.hadoop.hive.hbase.HBaseStorageHandler'</span><span class="hljs-keyword">WITH</span> SERDEPROPERTIES ("hbase.columns.mapping" <span class="hljs-operator">=</span> ":key,als:,content:,online:")TBLPROPERTIES ("hbase.table.name" <span class="hljs-operator">=</span> "cb_recall");</code></pre><h3 id="离线排序模型-ctr"><a class="markdownIt-Anchor" href="#离线排序模型-ctr"></a> 离线排序模型 CTR</h3><p>CTR（Click-Through Rate）预估：给定一个 Item，预测该 Item 会被点击的概率<br>最基础的模型目前都是基于 LR 的点击率预估策略，目前在工业使用模型做预估的有这么几种类型</p><ul><li>宽模型 + 特征⼯程<ul><li>LR/MLR + 非 ID 类特征(⼈⼯离散/GBDT/FM)</li><li>spark 中可以直接使用</li></ul></li><li>宽模型 + 深模型<ul><li>wide&amp;deep,DeepFM</li><li>使用 TensorFlow 进行训练</li></ul></li><li>深模型：<ul><li>DNN + 特征 embedding</li><li>使用 TensorFlow 进行训练</li></ul></li></ul><p>特征包含：用户画像关键词 10+文章画像关键词 10+channel_id(25, onehot)+文章主题词向量(concat, 100)</p><pre class="highlight"><code class="python">cols = [<span class="hljs-string">'article_id'</span>, <span class="hljs-string">'user_id'</span>, <span class="hljs-string">'channel_id'</span>, <span class="hljs-string">'articlevector'</span>, <span class="hljs-string">'weights'</span>, <span class="hljs-string">'article_weights'</span>, <span class="hljs-string">'clicked'</span>]train_version_two = VectorAssembler().setInputCols(cols[<span class="hljs-number">2</span>:<span class="hljs-number">6</span>]).setOutputCol(<span class="hljs-string">"features"</span>).transform(train)</code></pre><p><img src="/2023/02/13/%E5%A4%B4%E6%9D%A1%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8E%A8%E8%8D%90%E9%A1%B9%E7%9B%AE/image-20230212102837399.png" alt=""><br>训练线性回归模型，可以服务于在线召回</p><pre class="highlight"><code class="python">lr = LogisticRegression()model = lr.setLabelCol(<span class="hljs-string">"clicked"</span>).setFeaturesCol(<span class="hljs-string">"features"</span>).fit(train_version_two)model.save(<span class="hljs-string">"hdfs://hadoop-master:9000/headlines/models/lr.obj"</span>)</code></pre><p>定期重新训练</p><h1 id="实时计算业务"><a class="markdownIt-Anchor" href="#实时计算业务"></a> 实时计算业务</h1><p>实时（在线）计算：</p><ul><li>解决用户冷启动问题</li><li>实时计算能够根据用户的点击实时反馈，快速跟踪用户的喜好</li></ul><p>日志数据我们已经收集到 hadoop 中，但是做实时分析的时候，我们需要将每个时刻用户产生的点击行为收集到 KAFKA 当中，等待 spark streaming 程序去消费。</p><h2 id="kafka-简介"><a class="markdownIt-Anchor" href="#kafka-简介"></a> Kafka 简介</h2><p><strong>Kafka</strong>是由<a href="https://zh.wikipedia.org/wiki/Apache%E8%BD%AF%E4%BB%B6%E5%9F%BA%E9%87%91%E4%BC%9A" title="Apache软件基金会">Apache 软件基金会</a>开发的一个<a href="https://zh.wikipedia.org/wiki/%E5%BC%80%E6%BA%90" title="开源">开源</a><a href="https://zh.wikipedia.org/wiki/%E6%B5%81%E5%A4%84%E7%90%86" title="流处理">流处理</a>平台，由<a href="https://zh.wikipedia.org/wiki/Scala" title="Scala">Scala</a>和<a href="https://zh.wikipedia.org/wiki/Java" title="Java">Java</a>编写。该项目的目标是为处理实时数据提供一个统一、高吞吐、低延迟的平台。其持久化层本质上是一个“按照分布式事务日志架构的大规模发布/订阅消息队列”，这使它作为企业级基础设施来处理流式数据非常有价值。</p><h2 id="flume-收集日志到-kafka"><a class="markdownIt-Anchor" href="#flume-收集日志到-kafka"></a> flume 收集日志到 kafka</h2><p>开启 zookeeper,需要在一直在服务器端实时运行，以守护进程运行</p><pre class="highlight"><code class="shell">/root/bigdata/kafka/bin/zookeeper-server-start.sh -daemon /root/bigdata/kafka/config/zookeeper.properties</code></pre><p>以及 kafka</p><pre class="highlight"><code class="">/root/bigdata/kafka/bin/kafka-server-start.sh /root/bigdata/kafka/config/server.properties</code></pre><p>测试</p><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_"> #</span><span class="language-bash">开启消息生产者</span>/root/bigdata/kafka/bin/kafka-console-producer.sh --broker-list 192.168.19.137:9092 --sync --topic click-trace<span class="hljs-meta prompt_"> #</span><span class="language-bash">开启消费者</span>/root/bigdata/kafka/bin/kafka-console-consumer.sh --bootstrap-server 192.168.19.137:9092 --topic  click-trace<span class="hljs-meta prompt_">#</span><span class="language-bash">在生产者窗口输入任意内容测试</span></code></pre><p>修改原来收集日志的文件，添加 flume 收集日志行为到 kafka 的 source, channel, sink</p><pre class="highlight"><code class="">a1.sources = s1a1.sinks = k1 k2a1.channels = c1 c2a1.sources.s1.channels= c1 c2a1.sources.s1.type = execa1.sources.s1.command = tail -F /root/logs/userClick.loga1.sources.s1.interceptors=i1 i2a1.sources.s1.interceptors.i1.type=regex_filtera1.sources.r1.interceptors.i1.excludeEvents = falsea1.sources.s1.interceptors.i1.regex=\\{.*\\}a1.sources.s1.interceptors.i2.type=timestamp# channel1a1.channels.c1.type=memorya1.channels.c1.capacity=30000a1.channels.c1.transactionCapacity=1000# channel2a1.channels.c2.type=memorya1.channels.c2.capacity=30000a1.channels.c2.transactionCapacity=1000# k1a1.sinks.k1.type=hdfsa1.sinks.k1.channel=c1a1.sinks.k1.hdfs.path=hdfs://192.168.19.137:9000/user/hive/warehouse/profile.db/user_action/%Y-%m-%da1.sinks.k1.hdfs.useLocalTimeStamp = truea1.sinks.k1.hdfs.fileType=DataStreama1.sinks.k1.hdfs.writeFormat=Texta1.sinks.k1.hdfs.rollInterval=0a1.sinks.k1.hdfs.rollSize=10240a1.sinks.k1.hdfs.rollCount=0a1.sinks.k1.hdfs.idleTimeout=60# k2a1.sinks.k2.channel=c2a1.sinks.k2.type=org.apache.flume.sink.kafka.KafkaSinka1.sinks.k2.kafka.bootstrap.servers=192.168.19.137:9092a1.sinks.k2.kafka.topic=click-tracea1.sinks.k2.kafka.batchSize=20a1.sinks.k2.kafka.producer.requiredAcks=1</code></pre><p>添加 supervisor 配置</p><pre class="highlight"><code class="">[program:kafka]command=/bin/bash /root/toutiao_project/scripts/start_kafka.shuser=rootautorestart=trueredirect_stderr=truestdout_logfile=/root/logs/kafka.logloglevel=infostopsignal=KILLstopasgroup=truekillasgroup=true</code></pre><p>用 supervisorctl 启动后测试</p><h2 id="实时召回集业务"><a class="markdownIt-Anchor" href="#实时召回集业务"></a> 实时召回集业务</h2><p>实时召回基于相似度的文章推荐</p><p>创建 online 文件夹，建立在线实时处理程序</p><ul><li>目的：对用户日志进行处理，实时达到求出相似文章，放入用户召回集合中</li><li>步骤：<ul><li>1、配置 spark streaming 信息</li><li>2、读取点击行为日志数据，获取相似文章列表</li><li>3、过滤历史文章集合</li><li>4、存入召回结果以及历史记录结果</li></ul></li></ul><p>happybase 和 kafka 对接 spark streaming 的配置</p><pre class="highlight"><code class="python"><span class="hljs-comment"># 增加spark online 启动配置</span><span class="hljs-keyword">class</span> <span class="hljs-title class_">DefaultConfig</span>(<span class="hljs-title class_ inherited__">object</span>):    <span class="hljs-string">"""默认的一些配置信息    """</span>    SPARK_ONLINE_CONFIG = (        (<span class="hljs-string">"spark.app.name"</span>, <span class="hljs-string">"onlineUpdate"</span>),  <span class="hljs-comment"># 设置启动的spark的app名称，没有提供，将随机产生一个名称</span>        (<span class="hljs-string">"spark.master"</span>, <span class="hljs-string">"yarn"</span>),        (<span class="hljs-string">"spark.executor.instances"</span>, <span class="hljs-number">4</span>)    )<span class="hljs-comment"># 添加sparkstreaming启动对接kafka的配置</span><span class="hljs-keyword">from</span> pyspark <span class="hljs-keyword">import</span> SparkConf<span class="hljs-keyword">from</span> pyspark.sql <span class="hljs-keyword">import</span> SparkSession<span class="hljs-keyword">from</span> pyspark <span class="hljs-keyword">import</span> SparkContext<span class="hljs-keyword">from</span> pyspark.streaming <span class="hljs-keyword">import</span> StreamingContext<span class="hljs-keyword">from</span> pyspark.streaming.kafka <span class="hljs-keyword">import</span> KafkaUtils<span class="hljs-keyword">from</span> setting.default <span class="hljs-keyword">import</span> DefaultConfig<span class="hljs-keyword">import</span> happybase<span class="hljs-comment">#  用于读取hbase缓存结果配置</span>pool = happybase.ConnectionPool(size=<span class="hljs-number">10</span>, host=<span class="hljs-string">'hadoop-master'</span>, port=<span class="hljs-number">9090</span>)<span class="hljs-comment"># 1、创建conf</span>conf = SparkConf()conf.setAll(DefaultConfig.SPARK_ONLINE_CONFIG)<span class="hljs-comment"># 建立spark session以及spark streaming context</span>sc = SparkContext(conf=conf)<span class="hljs-comment"># 创建Streaming Context</span>stream_c = StreamingContext(sc, <span class="hljs-number">60</span>)<span class="hljs-comment"># KAFKA配置</span>KAFKA_SERVER = <span class="hljs-string">"192.168.19.137:9092"</span><span class="hljs-comment"># 基于内容召回配置，用于收集用户行为，获取相似文章实时推荐</span>similar_kafkaParams = {<span class="hljs-string">"metadata.broker.list"</span>: DefaultConfig.KAFKA_SERVER, <span class="hljs-string">"group.id"</span>: <span class="hljs-string">'similar'</span>}SIMILAR_DS = KafkaUtils.createDirectStream(stream_c, [<span class="hljs-string">'click-trace'</span>], similar_kafkaParams)</code></pre><p>主代码</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">OnlineRecall</span>(<span class="hljs-title class_ inherited__">object</span>):<span class="hljs-string">"""在线处理计算平台"""</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<span class="hljs-keyword">pass</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">_update_online_cb</span>(<span class="hljs-params">self</span>):<span class="hljs-string">"""通过点击行为更新用户的cb召回表中的online召回结果:return:"""</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">foreachFunc</span>(<span class="hljs-params">rdd</span>):<span class="hljs-keyword">for</span> data <span class="hljs-keyword">in</span> rdd.collect():logger.info(<span class="hljs-string">"{}, INFO: rdd filter"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>)))<span class="hljs-comment"># 判断日志行为类型，只处理点击流日志</span><span class="hljs-keyword">if</span> data[<span class="hljs-string">"param"</span>][<span class="hljs-string">"action"</span>] <span class="hljs-keyword">in</span> [<span class="hljs-string">"click"</span>, <span class="hljs-string">"collect"</span>, <span class="hljs-string">"share"</span>]:<span class="hljs-comment"># print(data)</span><span class="hljs-keyword">with</span> pool.connection() <span class="hljs-keyword">as</span> conn:<span class="hljs-keyword">try</span>:<span class="hljs-comment"># 相似文章表</span>sim_table = conn.table(<span class="hljs-string">"article_similar"</span>)<span class="hljs-comment"># 根据用户点击流日志涉及文章找出与之最相似文章(基于内容的相似)，选取TOP-k相似的作为召回推荐结果</span>_dic = sim_table.row(<span class="hljs-built_in">str</span>(data[<span class="hljs-string">"param"</span>][<span class="hljs-string">"articleId"</span>]).encode(), columns=[<span class="hljs-string">b"similar"</span>])_srt = <span class="hljs-built_in">sorted</span>(_dic.items(), key=<span class="hljs-keyword">lambda</span> obj: obj[<span class="hljs-number">1</span>], reverse=<span class="hljs-literal">True</span>)  <span class="hljs-comment"># 按相似度排序</span><span class="hljs-keyword">if</span> _srt:topKSimIds = [<span class="hljs-built_in">int</span>(i[<span class="hljs-number">0</span>].split(<span class="hljs-string">b":"</span>)[<span class="hljs-number">1</span>]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> _srt[:self.k]]<span class="hljs-comment"># 根据历史推荐集过滤，已经给用户推荐过的文章</span>history_table = conn.table(<span class="hljs-string">"history_recall"</span>)_history_data = history_table.cells(<span class="hljs-string">b"reco:his:%s"</span> % data[<span class="hljs-string">"param"</span>][<span class="hljs-string">"userId"</span>].encode(),<span class="hljs-string">b"channel:%d"</span> % data[<span class="hljs-string">"channelId"</span>])<span class="hljs-comment"># print("_history_data: ", _history_data)</span>history = []<span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(data) &gt;= <span class="hljs-number">2</span>:<span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> data[:-<span class="hljs-number">1</span>]:history.extend(<span class="hljs-built_in">eval</span>(l))<span class="hljs-keyword">else</span>:history = []<span class="hljs-comment"># 根据历史召回记录，过滤召回结果</span>recall_list = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(topKSimIds) - <span class="hljs-built_in">set</span>(history_data))<span class="hljs-comment"># print("recall_list: ", recall_list)</span>logger.info(<span class="hljs-string">"{}, INFO: store user:{} cb_recall data"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), data[<span class="hljs-string">"param"</span>][<span class="hljs-string">"userId"</span>]))<span class="hljs-keyword">if</span> recall_list:<span class="hljs-comment"># 如果有推荐结果集，那么将数据添加到cb_recall表中，同时记录到历史记录表中</span>logger.info(<span class="hljs-string">"{}, INFO: get online-recall data"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>)))recall_table = conn.table(<span class="hljs-string">"cb_recall"</span>)recall_table.put(<span class="hljs-string">b"recall:user:%s"</span> % data[<span class="hljs-string">"param"</span>][<span class="hljs-string">"userId"</span>].encode(),{<span class="hljs-string">b"online:%d"</span> % data[<span class="hljs-string">"channelId"</span>]: <span class="hljs-built_in">str</span>(recall_list).encode()})history_table.put(<span class="hljs-string">b"reco:his:%s"</span> % data[<span class="hljs-string">"param"</span>][<span class="hljs-string">"userId"</span>].encode(),{<span class="hljs-string">b"channel:%d"</span> % data[<span class="hljs-string">"channelId"</span>]: <span class="hljs-built_in">str</span>(recall_list).encode()})<span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:logger.info(<span class="hljs-string">"{}, WARN: {}"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), e))<span class="hljs-keyword">finally</span>:conn.close()SIMILAR_DS.<span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> x: json.loads(x[<span class="hljs-number">1</span>])).foreachRDD(foreachFunc)<span class="hljs-keyword">return</span> <span class="hljs-literal">None</span></code></pre><h1 id="推荐业务流实现与-ab-测试"><a class="markdownIt-Anchor" href="#推荐业务流实现与-ab-测试"></a> 推荐业务流实现与 AB 测试</h1><ul><li><p>逻辑流程</p><ul><li>1、后端发送推荐请求，实时推荐系统拿到请求参数<ul><li>grpc对接</li></ul></li><li>2、根据用户进行ABTest分流<ul><li>ABTest实验中心，用于进行分流任务，方便测试调整不同的模型上线</li></ul></li><li>3、推荐中心服务<ul><li>根据用户在ABTest分配的算法进行召回服务和排序服务读取返回结果</li></ul></li><li>4、返回推荐结果和埋点参数封装</li></ul></li></ul><p><img src="/2023/02/13/%E5%A4%B4%E6%9D%A1%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8E%A8%E8%8D%90%E9%A1%B9%E7%9B%AE/image-20230212160039176.png" alt=""></p><h2 id="grpc"><a class="markdownIt-Anchor" href="#grpc"></a> gRPC</h2><ul><li>gRPC是由Google公司开源的高性能RPC框架。</li><li>gRPC支持多语言<br>gRPC原生使用C、Java、Go进行了三种实现，而C语言实现的版本进行封装后又支持C++、C#、Node、ObjC、 Python、Ruby、PHP等开发语言</li><li>gRPC支持多平台<br>支持的平台包括：Linux、Android、iOS、MacOS、Windows</li><li>gRPC的消息协议使用Google自家开源的Protocol Buffers协议机制（proto3） 序列化</li><li>gRPC的传输使用HTTP/2标准，支持双向流和连接多路复用</li></ul><h3 id="创建user_recoproto协议文件"><a class="markdownIt-Anchor" href="#创建user_recoproto协议文件"></a> 创建user_reco.proto协议文件</h3><ul><li>用户刷新feed流接口<ul><li>user_recommend(User) returns (Track)</li></ul></li><li>文章相似(猜你喜欢)接口<ul><li>article_recommend(Article) returns(Similar)</li></ul></li></ul><p>编写grpc_tools.protoc</p><pre class="highlight"><code class="shell">syntax = "proto3";message User {    string user_id = 1;    int32 channel_id = 2;    int32 article_num = 3;    int64 time_stamp = 4;}// int32 ---&gt; int64 article_idmessage Article {    int64 article_id = 1;    int32 article_num = 2;}message param2 {    string click = 1;    string collect = 2;    string share = 3;    string read = 4;}message param1 {    int64 article_id = 1;    param2 params = 2;}message Track {    string exposure = 1;    repeated param1 recommends = 2;    int64 time_stamp = 3;}message Similar {    repeated int64 article_id = 1;}service UserRecommend {    // feed recommend    rpc user_recommend(User) returns (Track) {}    rpc article_recommend(Article) returns(Similar) {}}</code></pre><p>通过命令生成</p><pre class="highlight"><code class="shell">python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. user_reco.proto</code></pre><h3 id="服务端编写"><a class="markdownIt-Anchor" href="#服务端编写"></a> 服务端编写</h3><pre class="highlight"><code class="python"><span class="hljs-comment"># route.py</span><span class="hljs-comment"># 基于用户推荐的rpc服务推荐</span><span class="hljs-comment"># 定义指定的rpc服务输入输出参数格式proto</span>RPC_SERVER = <span class="hljs-string">'192.168.19.137:9999'</span><span class="hljs-keyword">class</span> <span class="hljs-title class_">UserRecommendServicer</span>(user_reco_pb2_grpc.UserRecommendServicer):    <span class="hljs-string">"""    对用户进行技术文章推荐    """</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">user_recommend</span>(<span class="hljs-params">self, request, context</span>):        <span class="hljs-string">"""        用户feed流推荐        :param request:        :param context:        :return:        """</span>        <span class="hljs-comment"># 选择C4组合</span>        user_id = request.user_id        channel_id = request.channel_id        article_num = request.article_num        time_stamp = request.time_stamp        <span class="hljs-comment"># 解析参数，并进行推荐中心推荐(暂时使用假数据替代)</span>        <span class="hljs-keyword">class</span> <span class="hljs-title class_">Temp</span>(<span class="hljs-title class_ inherited__">object</span>):            user_id = -<span class="hljs-number">10</span>            algo = <span class="hljs-string">'test'</span>            time_stamp = -<span class="hljs-number">10</span>        tp = Temp()        tp.user_id = user_id        tp.time_stamp = time_stamp        _track = add_track([], tp)        <span class="hljs-comment"># 解析返回参数到rpc结果参数</span>        <span class="hljs-comment"># 参数如下</span>        <span class="hljs-comment"># [       {"article_id": 1, "param": {"click": "", "collect": "", "share": "", 'detentionTime':''}},</span>        <span class="hljs-comment">#         {"article_id": 2, "param": {"click": "", "collect": "", "share": "", 'detentionTime':''}},</span>        <span class="hljs-comment">#         {"article_id": 3, "param": {"click": "", "collect": "", "share": "", 'detentionTime':''}},</span>        <span class="hljs-comment">#         {"article_id": 4, "param": {"click": "", "collect": "", "share": "", 'detentionTime':''}}</span>        <span class="hljs-comment">#     ]</span>        <span class="hljs-comment"># 第二个rpc参数</span>        _param1 = []        <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> _track[<span class="hljs-string">'recommends'</span>]:            <span class="hljs-comment"># param的封装</span>            _params = user_reco_pb2.param2(click=_[<span class="hljs-string">'param'</span>][<span class="hljs-string">'click'</span>],                                           collect=_[<span class="hljs-string">'param'</span>][<span class="hljs-string">'collect'</span>],                                           share=_[<span class="hljs-string">'param'</span>][<span class="hljs-string">'share'</span>],                                           read=_[<span class="hljs-string">'param'</span>][<span class="hljs-string">'read'</span>])            _p2 = user_reco_pb2.param1(article_id=_[<span class="hljs-string">'article_id'</span>], params=_params)            _param1.append(_p2)        <span class="hljs-comment"># param</span>        <span class="hljs-keyword">return</span> user_reco_pb2.Track(exposure=_track[<span class="hljs-string">'param'</span>], recommends=_param1, time_stamp=_track[<span class="hljs-string">'timestamp'</span>])<span class="hljs-comment">#    def article_recommend(self, request, context):</span><span class="hljs-comment">#        """</span><span class="hljs-comment">#       文章相似推荐</span><span class="hljs-comment">#       :param request:</span><span class="hljs-comment">#       :param context:</span><span class="hljs-comment">#       :return:</span><span class="hljs-comment">#       """</span><span class="hljs-comment">#       # 获取web参数</span><span class="hljs-comment">#       article_id = request.article_id</span><span class="hljs-comment">#       article_num = request.article_num</span><span class="hljs-comment">#</span><span class="hljs-comment">#        # 进行文章相似推荐,调用推荐中心的文章相似</span><span class="hljs-comment">#       _article_list = article_reco_list(article_id, article_num, 105)</span><span class="hljs-comment">#</span><span class="hljs-comment">#       # rpc参数封装</span><span class="hljs-comment">#       return user_reco_pb2.Similar(article_id=_article_list)</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">add_track</span>(<span class="hljs-params">res, temp</span>):    <span class="hljs-string">"""    封装埋点参数    :param res: 推荐文章id列表    :param cb: 合并参数    :param rpc_param: rpc参数    :return: 埋点参数        文章列表参数        单文章参数    """</span>    <span class="hljs-comment"># 添加埋点参数</span>    track = {}    <span class="hljs-comment"># 准备曝光参数</span>    <span class="hljs-comment"># 全部字符串形式提供，在hive端不会解析问题</span>    _exposure = {<span class="hljs-string">"action"</span>: <span class="hljs-string">"exposure"</span>, <span class="hljs-string">"userId"</span>: temp.user_id, <span class="hljs-string">"articleId"</span>: json.dumps(res),                 <span class="hljs-string">"algorithmCombine"</span>: temp.algo}    track[<span class="hljs-string">'param'</span>] = json.dumps(_exposure)    track[<span class="hljs-string">'recommends'</span>] = []    <span class="hljs-comment"># 准备其它点击参数</span>    <span class="hljs-keyword">for</span> _<span class="hljs-built_in">id</span> <span class="hljs-keyword">in</span> res:        <span class="hljs-comment"># 构造字典</span>        _dic = {}        _dic[<span class="hljs-string">'article_id'</span>] = _<span class="hljs-built_in">id</span>        _dic[<span class="hljs-string">'param'</span>] = {}        <span class="hljs-comment"># 准备click参数</span>        _p = {<span class="hljs-string">"action"</span>: <span class="hljs-string">"click"</span>, <span class="hljs-string">"userId"</span>: temp.user_id, <span class="hljs-string">"articleId"</span>: <span class="hljs-built_in">str</span>(_<span class="hljs-built_in">id</span>),              <span class="hljs-string">"algorithmCombine"</span>: temp.algo}        _dic[<span class="hljs-string">'param'</span>][<span class="hljs-string">'click'</span>] = json.dumps(_p)        <span class="hljs-comment"># 准备collect参数</span>        _p[<span class="hljs-string">"action"</span>] = <span class="hljs-string">'collect'</span>        _dic[<span class="hljs-string">'param'</span>][<span class="hljs-string">'collect'</span>] = json.dumps(_p)        <span class="hljs-comment"># 准备share参数</span>        _p[<span class="hljs-string">"action"</span>] = <span class="hljs-string">'share'</span>        _dic[<span class="hljs-string">'param'</span>][<span class="hljs-string">'share'</span>] = json.dumps(_p)        <span class="hljs-comment"># 准备detentionTime参数</span>        _p[<span class="hljs-string">"action"</span>] = <span class="hljs-string">'read'</span>        _dic[<span class="hljs-string">'param'</span>][<span class="hljs-string">'read'</span>] = json.dumps(_p)        track[<span class="hljs-string">'recommends'</span>].append(_dic)    track[<span class="hljs-string">'timestamp'</span>] = temp.time_stamp    <span class="hljs-keyword">return</span> track<span class="hljs-keyword">def</span> <span class="hljs-title function_">serve</span>():    <span class="hljs-comment"># 多线程服务器</span>    server = grpc.server(futures.ThreadPoolExecutor(max_workers=<span class="hljs-number">10</span>))    <span class="hljs-comment"># 注册本地服务</span>    user_reco_pb2_grpc.add_UserRecommendServicer_to_server(UserRecommendServicer(), server)    <span class="hljs-comment"># 监听端口</span>    server.add_insecure_port(DefaultConfig.RPC_SERVER)    <span class="hljs-comment"># 开始接收请求进行服务</span>    server.start()    <span class="hljs-comment"># 使用 ctrl+c 可以退出服务</span>    _ONE_DAY_IN_SECONDS = <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>    <span class="hljs-keyword">try</span>:        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:            time.sleep(_ONE_DAY_IN_SECONDS)    <span class="hljs-keyword">except</span> KeyboardInterrupt:        server.stop(<span class="hljs-number">0</span>)<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:    <span class="hljs-comment"># 测试grpc服务</span>    serve()</code></pre><p>客户端测试代码：</p><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> os<span class="hljs-keyword">import</span> sysBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))sys.path.insert(<span class="hljs-number">0</span>, os.path.join(BASE_DIR))<span class="hljs-keyword">from</span> abtest <span class="hljs-keyword">import</span> user_reco_pb2_grpc<span class="hljs-keyword">from</span> abtest <span class="hljs-keyword">import</span> user_reco_pb2<span class="hljs-keyword">import</span> grpc<span class="hljs-keyword">from</span> setting.default <span class="hljs-keyword">import</span> DefaultConfig<span class="hljs-keyword">import</span> time<span class="hljs-keyword">def</span> <span class="hljs-title function_">test</span>():    article_dict = {}    <span class="hljs-comment"># 构造传入数据</span>    req_article = user_reco_pb2.User()    req_article.user_id = <span class="hljs-string">'1115629498121846784'</span>    req_article.channel_id = <span class="hljs-number">18</span>    req_article.article_num = <span class="hljs-number">10</span>    req_article.time_stamp = <span class="hljs-built_in">int</span>(time.time() * <span class="hljs-number">1000</span>)    <span class="hljs-comment"># req_article.time_stamp = 1555573069870</span>    <span class="hljs-keyword">with</span> grpc.insecure_channel(DefaultConfig.RPC_SERVER) <span class="hljs-keyword">as</span> rpc_cli:        <span class="hljs-built_in">print</span>(<span class="hljs-string">''''''</span>)        <span class="hljs-keyword">try</span>:            stub = user_reco_pb2_grpc.UserRecommendStub(rpc_cli)            resp = stub.user_recommend(req_article)        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:            <span class="hljs-built_in">print</span>(e)            article_dict[<span class="hljs-string">'param'</span>] = []        <span class="hljs-keyword">else</span>:            <span class="hljs-comment"># 解析返回结果参数</span>            article_dict[<span class="hljs-string">'exposure_param'</span>] = resp.exposure            reco_arts = resp.recommends            reco_art_param = []            reco_list = []            <span class="hljs-keyword">for</span> art <span class="hljs-keyword">in</span> reco_arts:                reco_art_param.append({                    <span class="hljs-string">'artcle_id'</span>: art.article_id,                    <span class="hljs-string">'params'</span>: {                        <span class="hljs-string">'click'</span>: art.params.click,                        <span class="hljs-string">'collect'</span>: art.params.collect,                        <span class="hljs-string">'share'</span>: art.params.share,                        <span class="hljs-string">'read'</span>: art.params.read                    }                })                reco_list.append(art.article_id)            article_dict[<span class="hljs-string">'param'</span>] = reco_art_param            <span class="hljs-comment"># 文章列表以及参数（曝光参数 以及 每篇文章的点击等参数）</span>            <span class="hljs-built_in">print</span>(reco_list, article_dict)<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:    test()</code></pre><h2 id="通过哈希分桶进行流量切分"><a class="markdownIt-Anchor" href="#通过哈希分桶进行流量切分"></a> 通过哈希分桶进行流量切分</h2><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">feed_recommend</span>(<span class="hljs-params">user_id, channel_id, article_num, time_stamp</span>):    <span class="hljs-string">"""    1、根据web提供的参数，进行分流    2、找到对应的算法组合之后，去推荐中心调用不同的召回和排序服务    3、进行埋点参数封装    :param user_id:用户id    :param article_num:推荐文章个数    :return: track:埋点参数结果: 参考上面埋点参数组合    """</span>    <span class="hljs-comment">#  产品前期推荐由于较少的点击行为，所以去做 用户冷启动 + 文章冷启动</span>    <span class="hljs-comment"># 用户冷启动：'推荐'频道：热门频道的召回+用户实时行为画像召回（在线的不保存画像）  'C2'组合</span>    <span class="hljs-comment">#            # 其它频道：热门召回 + 新文章召回   'C1'组合</span>    <span class="hljs-comment"># 定义返回参数的类</span>    <span class="hljs-keyword">class</span> <span class="hljs-title class_">TempParam</span>(<span class="hljs-title class_ inherited__">object</span>):        user_id = -<span class="hljs-number">10</span>        channel_id = -<span class="hljs-number">10</span>        article_num = -<span class="hljs-number">10</span>        time_stamp = -<span class="hljs-number">10</span>        algo = <span class="hljs-string">""</span>    temp = TempParam()    temp.user_id = user_id    temp.channel_id = channel_id    temp.article_num = article_num    <span class="hljs-comment"># 请求的时间戳大小</span>    temp.time_stamp = time_stamp    <span class="hljs-comment"># 先读取缓存数据redis+待推荐hbase结果</span>    <span class="hljs-comment"># 如果有返回并加上埋点参数</span>    <span class="hljs-comment"># 并且写入hbase 当前推荐时间戳用户（登录和匿名）的历史推荐文章列表</span>    <span class="hljs-comment"># 传入用户id为空的直接召回结果</span>    <span class="hljs-keyword">if</span> temp.user_id == <span class="hljs-string">""</span>:        temp.algo = <span class="hljs-string">""</span>        <span class="hljs-keyword">return</span> add_track([], temp)    <span class="hljs-comment"># 进行分桶实现分流，制定不同的实验策略</span>    bucket = hashlib.md5(user_id.encode()).hexdigest()[:<span class="hljs-number">1</span>]    <span class="hljs-keyword">if</span> bucket <span class="hljs-keyword">in</span> RAParam.BYPASS[<span class="hljs-number">0</span>][<span class="hljs-string">'Bucket'</span>]:        temp.algo = RAParam.BYPASS[<span class="hljs-number">0</span>][<span class="hljs-string">'Strategy'</span>]    <span class="hljs-keyword">else</span>:        temp.algo = RAParam.BYPASS[<span class="hljs-number">1</span>][<span class="hljs-string">'Strategy'</span>]    <span class="hljs-comment"># 推荐服务中心推荐结果(这里做测试)</span>    track = add_track([], temp)    <span class="hljs-keyword">return</span> track</code></pre><h2 id="推荐服务中心"><a class="markdownIt-Anchor" href="#推荐服务中心"></a> 推荐服务中心</h2><ul><li>根据时间戳<ul><li>时间戳T小于HBASE历史推荐记录，则获取历史记录，返回该时间戳T上次的时间戳T-1</li><li>时间戳T大于HBASE历史推荐记录，则获取新推荐，则获取HBASE数据库中最近的一次时间戳<ul><li>如果有缓存，从缓存中拿，并且写入推荐历史表中</li><li>如果没有缓存，就进行一次指定算法组合的召回结果读取，排序，然后写入待推荐wait_recommend中，其中推荐出去的放入历史推荐表中</li></ul></li></ul></li></ul><h3 id="推荐中心业务逻辑"><a class="markdownIt-Anchor" href="#推荐中心业务逻辑"></a> 推荐中心业务逻辑</h3><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">feed_recommend_logic</span>(<span class="hljs-params">self, temp</span>):<span class="hljs-string">"""推荐流业务逻辑:param temp:ABTest传入的业务请求参数"""</span><span class="hljs-comment"># 判断用请求的时间戳大小决定获取历史记录还是刷新推荐文章</span><span class="hljs-keyword">try</span>:last_stamp = self.hbu.get_table_row(<span class="hljs-string">'history_recommend'</span>, <span class="hljs-string">'reco:his:{}'</span>.<span class="hljs-built_in">format</span>(temp.user_id).encode(),<span class="hljs-string">'channel:{}'</span>.<span class="hljs-built_in">format</span>(temp.channel_id).encode(), include_timestamp=<span class="hljs-literal">True</span>)[<span class="hljs-number">1</span>]logger.info(<span class="hljs-string">"{} INFO get user_id:{} channel:{} history last_stamp"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), temp.user_id, temp.channel_id))<span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:logger.warning(<span class="hljs-string">"{} WARN read history recommend exception:{}"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), e))last_stamp = <span class="hljs-number">0</span><span class="hljs-comment"># 如果小于，走一遍正常的推荐流程，缓存或者召回排序</span>logger.info(<span class="hljs-string">"{} INFO history last_stamp:{},temp.time_stamp:{}"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), last_stamp, temp.time_stamp))<span class="hljs-keyword">if</span> last_stamp &lt; temp.time_stamp:<span class="hljs-comment"># 获取</span>res = redis_cache.get_reco_from_cache(temp, self.hbu)<span class="hljs-comment"># 如果没有，然后走一遍算法推荐 召回+排序，同时写入到hbase待推荐结果列表</span><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> res:logger.info(<span class="hljs-string">"{} INFO get user_id:{} channel:{} recall/sort data"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), temp.user_id, temp.channel_id))res = self.user_reco_list(temp)temp.time_stamp = <span class="hljs-built_in">int</span>(last_stamp)track = add_track(res, temp)<span class="hljs-keyword">else</span>:logger.info(<span class="hljs-string">"{} INFO read user_id:{} channel:{} history recommend data"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), temp.user_id, temp.channel_id))<span class="hljs-keyword">try</span>:row = self.hbu.get_table_cells(<span class="hljs-string">'history_recommend'</span>,  <span class="hljs-string">'reco:his:{}'</span>.<span class="hljs-built_in">format</span>(temp.user_id).encode(),  <span class="hljs-string">'channel:{}'</span>.<span class="hljs-built_in">format</span>(temp.channel_id).encode(),  timestamp=temp.time_stamp + <span class="hljs-number">1</span>,  include_timestamp=<span class="hljs-literal">True</span>)<span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:logger.warning(<span class="hljs-string">"{} WARN read history recommend exception:{}"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), e))row = []res = []<span class="hljs-comment"># 1、如果没有历史数据，返回时间戳0以及结果空列表</span><span class="hljs-comment"># 2、如果历史数据只有一条，返回这一条历史数据以及时间戳正好为请求时间戳，修改时间戳为0</span><span class="hljs-comment"># 3、如果历史数据多条，返回最近一条历史数据，然后返回</span><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> row:temp.time_stamp = <span class="hljs-number">0</span>res = []<span class="hljs-keyword">elif</span> <span class="hljs-built_in">len</span>(row) == <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> row[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>] == temp.time_stamp:res = <span class="hljs-built_in">eval</span>(row[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>])temp.time_stamp = <span class="hljs-number">0</span><span class="hljs-keyword">elif</span> <span class="hljs-built_in">len</span>(row) &gt;= <span class="hljs-number">2</span>:res = <span class="hljs-built_in">eval</span>(row[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>])temp.time_stamp = <span class="hljs-built_in">int</span>(row[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>])res = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">int</span>, res))logger.info(<span class="hljs-string">"{} INFO history:{}, {}"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), res, temp.time_stamp))track = add_track(res, temp)<span class="hljs-comment"># 曝光参数设置为空</span>track[<span class="hljs-string">'param'</span>] = <span class="hljs-string">''</span><span class="hljs-keyword">return</span> track</code></pre><h3 id="获取用户召回结果"><a class="markdownIt-Anchor" href="#获取用户召回结果"></a> 获取用户召回结果</h3><pre class="highlight"><code class="python">  <span class="hljs-keyword">def</span> <span class="hljs-title function_">user_reco_list</span>(<span class="hljs-params">self, temp</span>):        <span class="hljs-string">"""        获取用户的召回结果进行推荐        :param temp:        :return:        """</span>        reco_set = []        <span class="hljs-comment"># 1、循环算法组合参数，遍历不同召回结果进行过滤</span>        <span class="hljs-keyword">for</span> _num <span class="hljs-keyword">in</span> RAParam.COMBINE[temp.algo][<span class="hljs-number">1</span>]:            <span class="hljs-comment"># 进行每个召回结果的读取100,101,102,103,104</span>            <span class="hljs-keyword">if</span> _num == <span class="hljs-number">103</span>:                <span class="hljs-comment"># 新文章召回读取</span>                _res = self.recall_service.read_redis_new_article(temp.channel_id)                reco_set = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(reco_set).union(<span class="hljs-built_in">set</span>(_res)))            <span class="hljs-keyword">elif</span> _num == <span class="hljs-number">104</span>:                <span class="hljs-comment"># 热门文章召回读取</span>                _res = self.recall_service.read_redis_hot_article(temp.channel_id)                reco_set = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(reco_set).union(<span class="hljs-built_in">set</span>(_res)))            <span class="hljs-keyword">else</span>:                _res = self.recall_service.\                    read_hbase_recall_data(RAParam.RECALL[_num][<span class="hljs-number">0</span>],                                           <span class="hljs-string">'recall:user:{}'</span>.<span class="hljs-built_in">format</span>(temp.user_id).encode(),                                           <span class="hljs-string">'{}:{}'</span>.<span class="hljs-built_in">format</span>(RAParam.RECALL[_num][<span class="hljs-number">1</span>], temp.channel_id).encode())                <span class="hljs-comment"># 进行合并某个协同过滤召回的结果</span>                reco_set = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(reco_set).union(<span class="hljs-built_in">set</span>(_res)))        <span class="hljs-comment"># reco_set都是新推荐的结果，进行过滤</span>        history_list = []        <span class="hljs-keyword">try</span>:            data = self.hbu.get_table_cells(<span class="hljs-string">'history_recommend'</span>,                                            <span class="hljs-string">'reco:his:{}'</span>.<span class="hljs-built_in">format</span>(temp.user_id).encode(),                                            <span class="hljs-string">'channel:{}'</span>.<span class="hljs-built_in">format</span>(temp.channel_id).encode())            <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> data:                history_list = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(history_list).union(<span class="hljs-built_in">set</span>(<span class="hljs-built_in">eval</span>(_))))            logger.info(<span class="hljs-string">"{} INFO filter user_id:{} channel:{} history data"</span>.<span class="hljs-built_in">format</span>(                datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), temp.user_id, temp.channel_id))        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:            logger.warning(                <span class="hljs-string">"{} WARN filter history article exception:{}"</span>.<span class="hljs-built_in">format</span>(datetime.now().                                                                     strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), e))        <span class="hljs-comment"># 如果0号频道有历史记录，也需要过滤</span>        <span class="hljs-keyword">try</span>:            data = self.hbu.get_table_cells(<span class="hljs-string">'history_recommend'</span>,                                            <span class="hljs-string">'reco:his:{}'</span>.<span class="hljs-built_in">format</span>(temp.user_id).encode(),                                            <span class="hljs-string">'channel:{}'</span>.<span class="hljs-built_in">format</span>(<span class="hljs-number">0</span>).encode())            <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> data:                history_list = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(history_list).union(<span class="hljs-built_in">set</span>(<span class="hljs-built_in">eval</span>(_))))            logger.info(<span class="hljs-string">"{} INFO filter user_id:{} channel:{} history data"</span>.<span class="hljs-built_in">format</span>(                datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), temp.user_id, <span class="hljs-number">0</span>))        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:            logger.warning(                <span class="hljs-string">"{} WARN filter history article exception:{}"</span>.<span class="hljs-built_in">format</span>(datetime.now().                                                                     strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), e))        <span class="hljs-comment"># 过滤操作 reco_set 与history_list进行过滤</span>        reco_set = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(reco_set).difference(<span class="hljs-built_in">set</span>(history_list)))        <span class="hljs-comment"># 排序代码逻辑</span>        <span class="hljs-comment"># _sort_num = RAParam.COMBINE[temp.algo][2][0]</span>        <span class="hljs-comment"># reco_set = sort_dict[RAParam.SORT[_sort_num]](reco_set, temp, self.hbu)</span>        <span class="hljs-comment"># 如果没有内容，直接返回</span>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> reco_set:            <span class="hljs-keyword">return</span> reco_set        <span class="hljs-keyword">else</span>:            <span class="hljs-comment"># 类型进行转换</span>            reco_set = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">int</span>, reco_set))            <span class="hljs-comment"># 跟后端需要推荐的文章数量进行比对 article_num</span>            <span class="hljs-comment"># article_num &gt; reco_set</span>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(reco_set) &lt;= temp.article_num:                res = reco_set            <span class="hljs-keyword">else</span>:                <span class="hljs-comment"># 之取出推荐出去的内容</span>                res = reco_set[:temp.article_num]                <span class="hljs-comment"># 剩下的推荐结果放入wait_recommend等待下次帅新的时候直接推荐</span>                self.hbu.get_table_put(<span class="hljs-string">'wait_recommend'</span>,                                       <span class="hljs-string">'reco:{}'</span>.<span class="hljs-built_in">format</span>(temp.user_id).encode(),                                       <span class="hljs-string">'channel:{}'</span>.<span class="hljs-built_in">format</span>(temp.channel_id).encode(),                                       <span class="hljs-built_in">str</span>(reco_set[temp.article_num:]).encode(),                                       timestamp=temp.time_stamp)                logger.info(                    <span class="hljs-string">"{} INFO put user_id:{} channel:{} wait data"</span>.<span class="hljs-built_in">format</span>(                        datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), temp.user_id, temp.channel_id))            <span class="hljs-comment"># 放入历史记录表当中</span>            self.hbu.get_table_put(<span class="hljs-string">'history_recommend'</span>,                                   <span class="hljs-string">'reco:his:{}'</span>.<span class="hljs-built_in">format</span>(temp.user_id).encode(),                                   <span class="hljs-string">'channel:{}'</span>.<span class="hljs-built_in">format</span>(temp.channel_id).encode(),                                   <span class="hljs-built_in">str</span>(res).encode(),                                   timestamp=temp.time_stamp)            <span class="hljs-comment"># 放入历史记录日志</span>            logger.info(                <span class="hljs-string">"{} INFO store recall/sorted user_id:{} channel:{} history_recommend data"</span>.<span class="hljs-built_in">format</span>(                    datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), temp.user_id, temp.channel_id))            <span class="hljs-keyword">return</span> res</code></pre><h3 id="在线预测"><a class="markdownIt-Anchor" href="#在线预测"></a> 在线预测</h3><p>除了对召回集进行排序以外，还可以在在线平台上使用离线训练好的点击率模型，得到高点击召回集。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">lr_sort_service</span>(<span class="hljs-params">reco_set, temp, hbu</span>):    <span class="hljs-string">"""    排序返回推荐文章    :param reco_set:召回合并过滤后的结果    :param temp: 参数    :param hbu: Hbase工具    :return:    """</span>    <span class="hljs-comment"># 排序</span>    <span class="hljs-comment"># 1、读取用户特征中心特征</span>    <span class="hljs-keyword">try</span>:        user_feature = <span class="hljs-built_in">eval</span>(hbu.get_table_row(<span class="hljs-string">'ctr_feature_user'</span>,                                              <span class="hljs-string">'{}'</span>.<span class="hljs-built_in">format</span>(temp.user_id).encode(),                                              <span class="hljs-string">'channel:{}'</span>.<span class="hljs-built_in">format</span>(temp.channel_id).encode()))        logger.info(<span class="hljs-string">"{} INFO get user user_id:{} channel:{} profile data"</span>.<span class="hljs-built_in">format</span>(            datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), temp.user_id, temp.channel_id))    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:        user_feature = []    <span class="hljs-keyword">if</span> user_feature:        <span class="hljs-comment"># 2、读取文章特征中心特征</span>        result = []        <span class="hljs-keyword">for</span> article_id <span class="hljs-keyword">in</span> reco_set:            <span class="hljs-keyword">try</span>:                article_feature = <span class="hljs-built_in">eval</span>(hbu.get_table_row(<span class="hljs-string">'ctr_feature_article'</span>,                                                         <span class="hljs-string">'{}'</span>.<span class="hljs-built_in">format</span>(article_id).encode(),                                                         <span class="hljs-string">'article:{}'</span>.<span class="hljs-built_in">format</span>(article_id).encode()))            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:                article_feature = [<span class="hljs-number">0.0</span>] * <span class="hljs-number">111</span>            f = []            <span class="hljs-comment"># 第一个channel_id</span>            f.extend([article_feature[<span class="hljs-number">0</span>]])            <span class="hljs-comment"># 第二个article_vector</span>            f.extend(article_feature[<span class="hljs-number">11</span>:])            <span class="hljs-comment"># 第三个用户权重特征</span>            f.extend(user_feature)            <span class="hljs-comment"># 第四个文章权重特征</span>            f.extend(article_feature[<span class="hljs-number">1</span>:<span class="hljs-number">11</span>])            vector = DenseVector(f)            result.append([temp.user_id, article_id, vector])        <span class="hljs-comment"># 4、预测并进行排序是筛选</span>        df = pd.DataFrame(result, columns=[<span class="hljs-string">"user_id"</span>, <span class="hljs-string">"article_id"</span>, <span class="hljs-string">"features"</span>])        test = SORT_SPARK.createDataFrame(df)        <span class="hljs-comment"># 加载逻辑回归模型</span>        model = LogisticRegressionModel.load(<span class="hljs-string">"hdfs://hadoop-master:9000/headlines/models/LR.obj"</span>)        predict = model.transform(test)        <span class="hljs-keyword">def</span> <span class="hljs-title function_">vector_to_double</span>(<span class="hljs-params">row</span>):            <span class="hljs-keyword">return</span> <span class="hljs-built_in">float</span>(row.article_id), <span class="hljs-built_in">float</span>(row.probability[<span class="hljs-number">1</span>])        res = predict.select([<span class="hljs-string">'article_id'</span>, <span class="hljs-string">'probability'</span>]).rdd.<span class="hljs-built_in">map</span>(vector_to_double).toDF(            [<span class="hljs-string">'article_id'</span>, <span class="hljs-string">'probability'</span>]).sort(<span class="hljs-string">'probability'</span>, ascending=<span class="hljs-literal">False</span>)        article_list = [i.article_id <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> res.collect()]        logger.info(<span class="hljs-string">"{} INFO sorting user_id:{} recommend article"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>),                                                                          temp.user_id))        <span class="hljs-comment"># 排序后，只将排名在前100个文章ID返回给用户推荐</span>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(article_list) &gt; <span class="hljs-number">100</span>:            article_list = article_list[:<span class="hljs-number">100</span>]        reco_set = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">int</span>, article_list))    <span class="hljs-keyword">return</span> reco_set</code></pre><h3 id="多路召回"><a class="markdownIt-Anchor" href="#多路召回"></a> 多路召回</h3><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> os<span class="hljs-keyword">import</span> sysBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))sys.path.insert(<span class="hljs-number">0</span>, os.path.join(BASE_DIR))<span class="hljs-keyword">from</span> server <span class="hljs-keyword">import</span> redis_client<span class="hljs-keyword">from</span> server <span class="hljs-keyword">import</span> pool<span class="hljs-keyword">import</span> logging<span class="hljs-keyword">from</span> datetime <span class="hljs-keyword">import</span> datetime<span class="hljs-keyword">from</span> abtest.utils <span class="hljs-keyword">import</span> HBaseUtilslogger = logging.getLogger(<span class="hljs-string">'recommend'</span>)<span class="hljs-keyword">class</span> <span class="hljs-title class_">ReadRecall</span>(<span class="hljs-title class_ inherited__">object</span>):    <span class="hljs-string">"""读取召回集的结果    """</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):        self.client = redis_client        self.hbu = HBaseUtils(pool)    <span class="hljs-keyword">def</span> <span class="hljs-title function_">read_hbase_recall_data</span>(<span class="hljs-params">self, table_name, key_format, column_format</span>):        <span class="hljs-string">"""获取指定用户的对应频道的召回结果,在线画像召回，离线画像召回，离线协同召回        :return:        """</span>        <span class="hljs-comment"># 获取family对应的值</span>        <span class="hljs-comment"># 数据库中的键都是bytes类型，所以需要进行编码相加</span>        <span class="hljs-comment"># 读取召回结果多个版本合并</span>        recall_list = []        <span class="hljs-keyword">try</span>:            data = self.hbu.get_table_cells(table_name, key_format, column_format)            <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> data:                recall_list = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(recall_list).union(<span class="hljs-built_in">set</span>(<span class="hljs-built_in">eval</span>(_))))            <span class="hljs-comment"># 读取所有这个用户的在线推荐的版本，清空该频道的数据</span>            <span class="hljs-comment"># self.hbu.get_table_delete(table_name, key_format, column_format)</span>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:            logger.warning(                <span class="hljs-string">"{} WARN read recall data exception:{}"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), e))        <span class="hljs-keyword">return</span> recall_list    <span class="hljs-keyword">def</span> <span class="hljs-title function_">read_redis_new_data</span>(<span class="hljs-params">self, channel_id</span>):        <span class="hljs-string">"""获取redis新文章结果        :param channel_id:        :return:        """</span>        <span class="hljs-comment"># format结果</span>        logger.info(<span class="hljs-string">"{} INFO read channel:{} new recommend data"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), channel_id))        _key = <span class="hljs-string">"ch:{}:new"</span>.<span class="hljs-built_in">format</span>(channel_id)        <span class="hljs-keyword">try</span>:            res = self.client.zrevrange(_key, <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>)        <span class="hljs-keyword">except</span> redis.exceptions.ResponseError <span class="hljs-keyword">as</span> e:            logger.warning(<span class="hljs-string">"{} WARN read new article exception:{}"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), e))            res = []        <span class="hljs-keyword">return</span> <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">int</span>, res))    <span class="hljs-keyword">def</span> <span class="hljs-title function_">read_redis_hot_data</span>(<span class="hljs-params">self, channel_id</span>):        <span class="hljs-string">"""获取redis热门文章结果        :param channel_id:        :return:        """</span>        <span class="hljs-comment"># format结果</span>        logger.info(<span class="hljs-string">"{} INFO read channel:{} hot recommend data"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), channel_id))        _key = <span class="hljs-string">"ch:{}:hot"</span>.<span class="hljs-built_in">format</span>(channel_id)        <span class="hljs-keyword">try</span>:            _res = self.client.zrevrange(_key, <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>)        <span class="hljs-keyword">except</span> redis.exceptions.ResponseError <span class="hljs-keyword">as</span> e:            logger.warning(<span class="hljs-string">"{} WARN read hot article exception:{}"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), e))            _res = []        <span class="hljs-comment"># 每次返回前50热门文章</span>        res = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">int</span>, _res))        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(res) &gt; <span class="hljs-number">50</span>:            res = res[:<span class="hljs-number">50</span>]        <span class="hljs-keyword">return</span> res    <span class="hljs-keyword">def</span> <span class="hljs-title function_">read_hbase_article_similar</span>(<span class="hljs-params">self, table_name, key_format, article_num</span>):        <span class="hljs-string">"""获取文章相似结果        :param article_id: 文章id        :param article_num: 文章数量        :return:        """</span>        <span class="hljs-comment"># 第一种表结构方式测试：</span>        <span class="hljs-comment"># create 'article_similar', 'similar'</span>        <span class="hljs-comment"># put 'article_similar', '1', 'similar:1', 0.2</span>        <span class="hljs-comment"># put 'article_similar', '1', 'similar:2', 0.34</span>        <span class="hljs-keyword">try</span>:            _dic = self.hbu.get_table_row(table_name, key_format)            res = []            _srt = <span class="hljs-built_in">sorted</span>(_dic.items(), key=<span class="hljs-keyword">lambda</span> obj: obj[<span class="hljs-number">1</span>], reverse=<span class="hljs-literal">True</span>)            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(_srt) &gt; article_num:                _srt = _srt[:article_num]            <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> _srt:                res.append(<span class="hljs-built_in">int</span>(_[<span class="hljs-number">0</span>].decode().split(<span class="hljs-string">':'</span>)[<span class="hljs-number">1</span>]))        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:            logger.error(<span class="hljs-string">"{} ERROR read similar article exception: {}"</span>.<span class="hljs-built_in">format</span>(datetime.now().strftime(<span class="hljs-string">'%Y-%m-%d %H:%M:%S'</span>), e))            res = []        <span class="hljs-keyword">return</span> res<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:    rr = ReadRecall()    <span class="hljs-built_in">print</span>(rr.read_hbase_article_similar(<span class="hljs-string">'article_similar'</span>, <span class="hljs-string">b'13342'</span>, <span class="hljs-number">10</span>))    <span class="hljs-built_in">print</span>(rr.read_hbase_recall_data(<span class="hljs-string">'cb_recall'</span>, <span class="hljs-string">b'recall:user:1115629498121846784'</span>, <span class="hljs-string">b'als:18'</span>))    <span class="hljs-comment"># rr = ReadRecall()</span>    <span class="hljs-comment"># print(rr.read_redis_new_data(18))</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BigData </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据框架简介</title>
      <link href="/2023/02/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/"/>
      <url>/2023/02/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="hadoop分布式系统框架"><a class="markdownIt-Anchor" href="#hadoop分布式系统框架"></a> Hadoop：分布式系统框架</h1><p><img src="/2023/02/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/image-20230201202112535.png" alt=""></p><h2 id="hdfs分布式文件系统"><a class="markdownIt-Anchor" href="#hdfs分布式文件系统"></a> HDFS：分布式文件系统</h2><p><img src="/2023/02/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/image-20230201203516037.png" alt=""></p><blockquote><p>TIP: HDFS中的block大小为64MB，默认保存3份</p></blockquote><h2 id="yarn分布式资源调度器"><a class="markdownIt-Anchor" href="#yarn分布式资源调度器"></a> YARN：分布式资源调度器</h2><p>核心思想：JobTracker和TaskTacker进行分离<br><img src="/2023/02/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/image-20230201203912441.png" alt=""></p><p>包含ResourceManager，ApplicationMaster，Nodemanager，Container，Client</p><h2 id="mapreduce分布式计算框架"><a class="markdownIt-Anchor" href="#mapreduce分布式计算框架"></a> MapReduce：分布式计算框架</h2><p><img src="/2023/02/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/image-20230201202455615.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BigData </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GNN概述</title>
      <link href="/2022/04/29/GNN%E6%A6%82%E8%BF%B0/"/>
      <url>/2022/04/29/GNN%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="graph-embedding"><a class="markdownIt-Anchor" href="#graph-embedding"></a> Graph embedding</h1><h2 id="21-deepwalk"><a class="markdownIt-Anchor" href="#21-deepwalk"></a> 2.1 deepwalk</h2><p>从某个节点出发随机游走，得到若干个序列，用skip-gram计算每个节点的embedding信息</p><h2 id="22-line"><a class="markdownIt-Anchor" href="#22-line"></a> 2.2 LINE</h2><p>一阶相似性：直接相连的两节点相似</p><p>二阶相似性：有大量共同邻居的两个不相连节点相似</p><p>相似度高的节点会在embedding后有更短的欧氏距离</p><p>一阶和二阶直接拼接为节点的向量</p><h2 id="23-node2vec"><a class="markdownIt-Anchor" href="#23-node2vec"></a> 2.3 Node2vec</h2><p>有策略的随机游走</p><p>深度优先得到节点的社团相似性（上图）</p><p>广度优先得到节点的结构等价性（下图）</p><p><img src="/2022/04/29/GNN%E6%A6%82%E8%BF%B0/image-20210818171416928.png" alt=""></p><h2 id="24-struc2vec"><a class="markdownIt-Anchor" href="#24-struc2vec"></a> 2.4 Struc2vec</h2><ol><li><p>计算节点n阶邻居度的序列，</p></li><li><p>求两序列的相似度</p></li><li><p>得到两节点的结构相似性</p></li></ol><h2 id="25-sdne"><a class="markdownIt-Anchor" href="#25-sdne"></a> 2.5 SDNE</h2><p>采用多个非线性层捕获一阶二阶相似性</p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p><img src="/2022/04/29/GNN%E6%A6%82%E8%BF%B0/image-20210818173631288.png" alt=""></p><h1 id="两类学习"><a class="markdownIt-Anchor" href="#两类学习"></a> 两类学习</h1><ul><li><strong>归纳学习（Inductive Learning）：</strong> 先从训练样本中学习到一定的模式，然后利用其对测试样本进行预测（即首先从特殊到一般，然后再从一般到特殊），这类模型如常见的<a href="https://www.zhihu.com/search?q=%E8%B4%9D%E5%8F%B6%E6%96%AF%E6%A8%A1%E5%9E%8B&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A34232818%7D">贝叶斯模型</a>。</li><li><strong>直推学习（Transductive Learning）：</strong> 先观察特定的训练样本，然后对特定的测试样本做出预测（从特殊到特殊），这类模型如k近邻、SVM等。</li></ul><h1 id="gcn"><a class="markdownIt-Anchor" href="#gcn"></a> GCN</h1><ul><li><strong>GCN的基本思想：</strong> 把一个节点在图中的高纬度邻接信息降维到一个低维的向量表示。</li><li><strong>GCN的优点：</strong> 可以捕捉graph的全局信息，从而很好地表示node的特征。</li><li><strong>GCN的缺点：</strong> Transductive learning的方式，需要把所有节点都参与训练才能得到<a href="https://www.zhihu.com/search?q=node+embedding&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A74242097%7D">node embedding</a>，无法快速得到新node的embedding。</li></ul><p>常用字母对应:</p><table><thead><tr><th>名称</th><th>字母</th></tr></thead><tbody><tr><td>度矩阵（对角阵）</td><td>D</td></tr><tr><td>邻接矩阵（01阵）</td><td>A</td></tr></tbody></table><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>A</mi><mo>~</mo></mover><mo>=</mo><mi>A</mi><mo>+</mo><msub><mi>I</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">\tilde{A}=A+I_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9201899999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.11110999999999999em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>D</mi><mo>~</mo></mover><mo>=</mo><mi>D</mi><mo>+</mo><msub><mi>I</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">\tilde{D}=D+I_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9201899999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>H</mi><mrow><mo stretchy="false">(</mo><mi>l</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msup><mover accent="true"><mi>D</mi><mo>~</mo></mover><mrow><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></msup><mover accent="true"><mi>A</mi><mo>~</mo></mover><msup><mover accent="true"><mi>D</mi><mo>~</mo></mover><mrow><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></msup><msup><mi>H</mi><mrow><mo stretchy="false">(</mo><mi>l</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>W</mi><mrow><mo stretchy="false">(</mo><mi>l</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H^{(l+1)}=\sigma(\tilde{D}^{-\frac{1}{2}}\tilde{A}\tilde{D}^{-\frac{1}{2}}H^{(l)}W^{(l)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.938em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2540200000000001em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">~</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.11110999999999999em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">~</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo>~</mo></mover><mi>H</mi></mrow><annotation encoding="application/x-tex">\tilde{A}H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9201899999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.11110999999999999em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span>聚合了节点自身和邻居的信息，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mover accent="true"><mi>D</mi><mo>~</mo></mover><mrow><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></msup></mrow><annotation encoding="application/x-tex">\tilde{D}^{-\frac{1}{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9540200000000001em;vertical-align:0em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">~</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9540200000000001em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span>起到归一化的作用。</p><p>归一化之后的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo>~</mo></mover></mrow><annotation encoding="application/x-tex">\tilde{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9201899999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.11110999999999999em;"><span class="mord">~</span></span></span></span></span></span></span></span></span></span> 可记为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>A</mi><mo>^</mo></mover><mo>=</mo><msup><mover accent="true"><mi>D</mi><mo>~</mo></mover><mrow><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></msup><mover accent="true"><mi>A</mi><mo>~</mo></mover><msup><mover accent="true"><mi>D</mi><mo>~</mo></mover><mrow><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow></msup></mrow><annotation encoding="application/x-tex">\hat{A}=\tilde{D}^{-\frac{1}{2}}\tilde{A}\tilde{D}^{-\frac{1}{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.11110999999999999em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0040200000000001em;vertical-align:0em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">~</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.11110999999999999em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9201899999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.6023300000000003em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">~</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0040200000000001em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="训练方式"><a class="markdownIt-Anchor" href="#训练方式"></a> 训练方式</h2><h3 id="端到端"><a class="markdownIt-Anchor" href="#端到端"></a> 端到端</h3><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>Z</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mover accent="true"><mi>A</mi><mo>^</mo></mover><mtext> </mtext><mi>R</mi><mi>e</mi><mi>L</mi><mi>U</mi><mo stretchy="false">(</mo><mover accent="true"><mi>A</mi><mo>^</mo></mover><mi>H</mi><msup><mi>W</mi><mrow><mo stretchy="false">(</mo><mn>0</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><msup><mi>W</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Z=f(X,A)=softmax(\hat{A}\,ReLU(\hat{A}HW^{(0)})W^{(1)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.19677em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.11110999999999999em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">A</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.11110999999999999em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">0</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><h2 id="嵌入mlp"><a class="markdownIt-Anchor" href="#嵌入mlp"></a> 嵌入+MLP</h2><h1 id="graphsage"><a class="markdownIt-Anchor" href="#graphsage"></a> GraphSAGE</h1><p><strong>思想：学习一个节点的信息是怎么通过其邻居节点的特征聚合而来的</strong></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>h</mi><mrow><mi>N</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><mi>k</mi></msubsup><mo>=</mo><mi>A</mi><mi>g</mi><mi>g</mi><mo stretchy="false">(</mo><msubsup><mi>h</mi><mi>u</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mo separator="true">,</mo><mi mathvariant="normal">∀</mi><mi>u</mi><mo>∈</mo><mi>N</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h^k_{N(v)}=Agg({h^{k-1}_u},\forall u\in N(v))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3461079999999999em;vertical-align:-0.4469999999999999em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-2.428em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1491079999999998em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∀</span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>h</mi><mi>v</mi><mi>k</mi></msubsup><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>W</mi><mi>k</mi></msup><mo>⋅</mo><mi>C</mi><mi>o</mi><mi>n</mi><mi>c</mi><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><msubsup><mi>h</mi><mi>v</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mo separator="true">,</mo><msubsup><mi>h</mi><mrow><mi>N</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><mi>k</mi></msubsup><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h_v^k=\sigma(W^k \cdot Concat(h^{k-1}_v,h^k_{N(v)}) )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.146108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3461079999999999em;vertical-align:-0.4469999999999999em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-2.428em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4469999999999999em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N(v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>表示节点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 的邻居节点集合，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>g</mi><mi>g</mi></mrow><annotation encoding="application/x-tex">Agg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span></span>()表示某个聚合函数。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>代表层数。每一轮结束后进行归一化：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>h</mi><mi>v</mi><mi>k</mi></msubsup><mo>=</mo><msubsup><mi>h</mi><mi>v</mi><mi>k</mi></msubsup><mi mathvariant="normal">/</mi><mi mathvariant="normal">∥</mi><msubsup><mi>h</mi><mi>v</mi><mi>k</mi></msubsup><msub><mi mathvariant="normal">∥</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">h_v^k=h_v^k/\Vert h_v^k \Vert _2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.146108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1491079999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord">∥</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><h2 id="邻居采样"><a class="markdownIt-Anchor" href="#邻居采样"></a> 邻居采样</h2><pre class="highlight"><code class="python"><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(neighbors) &gt;= self.max_degree:neighbors=np.random.choice(neighbors, self.max_degree, replace=<span class="hljs-literal">False</span>)<span class="hljs-comment"># 数量不足将有放回的采样</span><span class="hljs-keyword">elif</span> <span class="hljs-built_in">len</span>(neighbors) &lt; self.max_degree:neighbors=np.random.choice(neighbors, self.max_degree, replace=<span class="hljs-literal">True</span>)</code></pre><p><img src="/2022/04/29/GNN%E6%A6%82%E8%BF%B0/image-20211209161858990.png" alt=""></p><h2 id="聚合函数"><a class="markdownIt-Anchor" href="#聚合函数"></a> 聚合函数</h2><p>需要满足输入排列不变性，如</p><ul><li>Mean()</li><li><strong>GCN aggregator</strong> 比mean()多算一个自身特征</li><li>LSTM</li><li>Pooling</li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>g</mi><msubsup><mi>g</mi><mi>k</mi><mrow><mi>p</mi><mi>o</mi><mi>o</mi><mi>l</mi></mrow></msubsup><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mo stretchy="false">{</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>W</mi><msubsup><mi>h</mi><mi>u</mi><mi>k</mi></msubsup><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Agg_k^{pool}=max(\{ \sigma(Wh_u^k+b)\})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2683239999999998em;vertical-align:-0.3013079999999999em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9670159999999998em;"><span style="top:-2.3986920000000005em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.180908em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013079999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1491079999999998em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mclose">}</span><span class="mclose">)</span></span></span></span></span></p><h2 id="minibatch"><a class="markdownIt-Anchor" href="#minibatch"></a> Minibatch</h2><p>即先采样把不需要用到的节点删除</p><h2 id="损失函数"><a class="markdownIt-Anchor" href="#损失函数"></a> 损失函数</h2><p>让临近的节点拥有相似的表示，反之应该表示大不相同</p><p><img src="/2022/04/29/GNN%E6%A6%82%E8%BF%B0/v2-9c473f5e242f8db158854d4e5e036b9c_r.jpg" alt=""></p><h1 id="gat"><a class="markdownIt-Anchor" href="#gat"></a> GAT</h1><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>α</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mi>L</mi><mi>e</mi><mi>a</mi><mi>k</mi><mi>y</mi><mi>R</mi><mi>e</mi><mi>L</mi><mi>u</mi><mo stretchy="false">(</mo><msup><mover accent="true"><mi>a</mi><mo>⃗</mo></mover><mi>T</mi></msup><mo stretchy="false">[</mo><mi mathvariant="bold-italic">W</mi><msub><mover accent="true"><mi>h</mi><mo>⃗</mo></mover><mi>i</mi></msub><mi mathvariant="normal">∥</mi><mi mathvariant="bold-italic">W</mi><msub><mover accent="true"><mi>h</mi><mo>⃗</mo></mover><mi>j</mi></msub><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><mrow><munder><mo>∑</mo><mrow><mi>k</mi><mo>∈</mo><msub><mi>N</mi><mi>i</mi></msub></mrow></munder><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mi>L</mi><mi>e</mi><mi>a</mi><mi>k</mi><mi>y</mi><mi>R</mi><mi>e</mi><mi>L</mi><mi>u</mi><mo stretchy="false">(</mo><msup><mover accent="true"><mi>a</mi><mo>⃗</mo></mover><mi>T</mi></msup><mo stretchy="false">[</mo><mi mathvariant="bold-italic">W</mi><msub><mover accent="true"><mi>h</mi><mo>⃗</mo></mover><mi>i</mi></msub><mi mathvariant="normal">∥</mi><mi mathvariant="bold-italic">W</mi><msub><mover accent="true"><mi>h</mi><mo>⃗</mo></mover><mi>k</mi></msub><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\alpha_{ij}=\frac{exp(LeakyReLu(\vec a^T[\boldsymbol W\vec h_i\Vert \boldsymbol W\vec h_j ]))}{\sum _{k \in N_i}exp(LeakyReLu(\vec a^T[\boldsymbol W\vec h_i\Vert \boldsymbol  W \vec h_k ]))}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.92169em;vertical-align:-1.2672499999999998em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.65444em;"><span style="top:-2.1325600000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.18639799999999995em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39981em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal">L</span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.767331em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9774399999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">h</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∥</span><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9774399999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">h</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mclose">)</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal">L</span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9774399999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">h</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∥</span><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9774399999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">h</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2672499999999998em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><blockquote><p>相当于在聚合前计算了权重。如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>a</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span></span></span></span>是全1向量，那么这个权重就由邻居节点各自的特征值大小决定。</p></blockquote><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mover accent="true"><mi>h</mi><mo>⃗</mo></mover><mi>i</mi><mo mathvariant="normal">′</mo></msubsup><mo>=</mo><mi>σ</mi><mrow><mo fence="true">(</mo><munder><mo>∑</mo><mrow><mi>j</mi><mo>∈</mo><msub><mi>N</mi><mi>i</mi></msub></mrow></munder><msub><mi>α</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mi mathvariant="bold-italic">W</mi><msub><mover accent="true"><mi>h</mi><mo>⃗</mo></mover><mi>j</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\vec h_i^\prime=\sigma\left(\sum_{j\in N_i}\alpha_{ij} \boldsymbol W\vec h_j\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.22444em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9774399999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">h</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-3.2550000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="overlay" style="height:0.3em;width:0.875em;"><svg width="0.875em" height="0.3em" style="width:0.875em" viewBox="0 0 875 300" preserveAspectRatio="xMinYMin"><path d="M291 0 H417 V300 H291 z"></path></svg></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.430444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9774399999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">h</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-3.2550000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="overlay" style="height:0.3em;width:0.875em;"><svg width="0.875em" height="0.3em" style="width:0.875em" viewBox="0 0 875 300" preserveAspectRatio="xMinYMin"><path d="M457 0 H583 V300 H457 z"></path></svg></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="multi-head-attention"><a class="markdownIt-Anchor" href="#multi-head-attention"></a> multi-head attention</h2><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mover accent="true"><mi>h</mi><mo>⃗</mo></mover><mi>i</mi><mo mathvariant="normal">′</mo></msubsup><mo>=</mo><mi>σ</mi><mrow><mo fence="true">(</mo><munder><mo>∑</mo><mrow><mi>j</mi><mo>∈</mo><msub><mi>N</mi><mi>i</mi></msub></mrow></munder><msubsup><mi>α</mi><mrow><mi>i</mi><mi>j</mi></mrow><mi>k</mi></msubsup><msup><mi mathvariant="bold-italic">W</mi><mi>k</mi></msup><msub><mover accent="true"><mi>h</mi><mo>⃗</mo></mover><mi>j</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\vec h_i^\prime=\sigma\left(\sum_{j\in N_i}\alpha_{ij}^k \boldsymbol W^k\vec h_j\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.22444em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9774399999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">h</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-3.2550000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="overlay" style="height:0.3em;width:0.875em;"><svg width="0.875em" height="0.3em" style="width:0.875em" viewBox="0 0 875 300" preserveAspectRatio="xMinYMin"><path d="M291 0 H417 V300 H291 z"></path></svg></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.430444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.899108em;"><span style="top:-2.4530000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9251179999999999em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9774399999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">h</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width="0.471em" height="0.714em" style="width:0.471em" viewBox="0 0 471 714" preserveAspectRatio="xMinYMin"><path d="M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z"></path></svg></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-3.2550000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="overlay" style="height:0.3em;width:0.875em;"><svg width="0.875em" height="0.3em" style="width:0.875em" viewBox="0 0 875 300" preserveAspectRatio="xMinYMin"><path d="M457 0 H583 V300 H457 z"></path></svg></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h1 id="patch-san"><a class="markdownIt-Anchor" href="#patch-san"></a> PATCH-SAN</h1><h1 id="han"><a class="markdownIt-Anchor" href="#han"></a> HAN</h1><p>异构图：节点和边的类型之和大于2<br>元路径：按照某种类型pattern的路径（有向），不同的元路径揭示了不同的<strong>语义信息</strong><br>基于元路径的邻居：以某种元路径连接到节点i的所有节点<br>所以，在根据元路径邻居分配注意力的时候，可以依据不同类型的元路径分配权重<br><img src="/2022/04/29/GNN%E6%A6%82%E8%BF%B0/image-20211223171241963.png" alt=""></p><h2 id="node-level-attention"><a class="markdownIt-Anchor" href="#node-level-attention"></a> Node-level Attention</h2><ol><li>根据某一类型元路径，异构图转为同构图</li><li>类似于GAT</li></ol><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>e</mi><mrow><mi>i</mi><mi>j</mi></mrow><mi mathvariant="normal">Φ</mi></msubsup><mo>=</mo><mi>a</mi><mi>t</mi><msub><mi>t</mi><mrow><mi>n</mi><mi>o</mi><mi>d</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><msubsup><mi>h</mi><mi>i</mi><mo mathvariant="normal">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>h</mi><mi>j</mi><mo mathvariant="normal">′</mo></msubsup><mo separator="true">;</mo><mi mathvariant="normal">Φ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">e_{ij}^\Phi=att_{node}(h^\prime_i,h^\prime_j;\Phi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.274439em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">Φ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.185em;vertical-align:-0.383108em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Φ</span><span class="mclose">)</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>α</mi><mrow><mi>i</mi><mi>j</mi></mrow><mi mathvariant="normal">Φ</mi></msubsup><mo>=</mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msubsup><mi>e</mi><mrow><mi>i</mi><mi>j</mi></mrow><mi mathvariant="normal">Φ</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\alpha_{ij}^\Phi=softmax(e_{ij}^\Phi)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.274439em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-2.4530000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">Φ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.274439em;vertical-align:-0.383108em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">Φ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>z</mi><mi>i</mi><mi mathvariant="normal">Φ</mi></msubsup><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><munder><mo>∑</mo><mrow><mi>j</mi><mo>∈</mo><msubsup><mi mathvariant="script">N</mi><mi>i</mi><mi mathvariant="normal">Φ</mi></msubsup></mrow></munder><msubsup><mi>α</mi><mrow><mi>i</mi><mi>j</mi></mrow><mi mathvariant="normal">Φ</mi></msubsup><mo>⋅</mo><msubsup><mi>h</mi><mi>j</mi><mo mathvariant="normal">′</mo></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">z_{i}^\Phi=\sigma(\sum_{j \in{\mathcal {N}}_i^\Phi}\alpha_{ij}^\Phi \cdot  h^\prime_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">Φ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.6746350000000003em;vertical-align:-1.62463em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.75097em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.14736em;">N</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8328928571428571em;"><span style="top:-2.177714285714286em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">Φ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3222857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.62463em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-2.4530000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">Φ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.185em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><h2 id="semantic-level-attention"><a class="markdownIt-Anchor" href="#semantic-level-attention"></a> Semantic-level Attention</h2><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>w</mi><msub><mi mathvariant="normal">Φ</mi><mi>i</mi></msub></msub><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="script">V</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><munder><mo>∑</mo><mrow><mi>i</mi><mo>∈</mo><mi mathvariant="script">V</mi></mrow></munder><msup><mi>q</mi><mi>T</mi></msup><mo>⋅</mo><mi>tanh</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>W</mi><mo>⋅</mo><msubsup><mi>z</mi><mi>i</mi><mi mathvariant="normal">Φ</mi></msubsup><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex"> w_{\Phi_i}=\frac{1}{|{\mathcal{V}}|} \sum_{i\in{\mathcal{V}}}q^T\cdot\tanh(W\cdot z_i^\Phi+b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68066em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.6431459999999998em;vertical-align:-1.321706em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span></span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.08222em;">V</span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">tanh</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.138331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">Φ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>β</mi><msub><mi mathvariant="normal">Φ</mi><mi>i</mi></msub></msub><mo>=</mo><mfrac><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><msub><mi>w</mi><msub><mi mathvariant="normal">Φ</mi><mi>i</mi></msub></msub><mo stretchy="false">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>P</mi></munderover><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><msub><mi>w</mi><msub><mi mathvariant="normal">Φ</mi><mi>i</mi></msub></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex"> \beta_{\Phi_i}=\frac{exp(w_{\Phi_i})}{\sum_{i=1}^Pexp(w_{\Phi_i})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9445399999999999em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.597941em;vertical-align:-1.170941em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.128769em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6769999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.170941em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>Z</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>P</mi></munderover><msub><mi>β</mi><msub><mi mathvariant="normal">Φ</mi><mi>i</mi></msub></msub><mo>⋅</mo><msub><mi>Z</mi><msub><mi mathvariant="normal">Φ</mi><mi>i</mi></msub></msub></mrow><annotation encoding="application/x-tex"> Z=\sum_{i=1}^{P}\beta_{\Phi_i}\cdot Z_{\Phi_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.93343em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">Φ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span></span></span></span></span></p><h1 id="gtn"><a class="markdownIt-Anchor" href="#gtn"></a> GTN</h1><p><img src="/2022/04/29/GNN%E6%A6%82%E8%BF%B0/image-20211223194418292.png" alt=""></p><ol><li>用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>D</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><msub><mi>Q</mi><mn>1</mn></msub><msub><mi>Q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">D^{-1}Q_1Q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>归一化</li><li>为了保留图本身的性质，给点边关系集增加一个单位阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span>这样和A相乘时还是A。</li><li>矩阵相乘后去掉对角线</li></ol><h1 id="metapath2vec"><a class="markdownIt-Anchor" href="#metapath2vec"></a> metapath2vec</h1><p>元路径随机游走<br>对称的元路径效果更好</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msup><mi>v</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msup><mi mathvariant="normal">∣</mi><msubsup><mi>v</mi><mi>t</mi><mi>i</mi></msubsup><mo separator="true">,</mo><mi mathvariant="script">P</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∣</mi><msub><mi>N</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msubsup><mi>v</mi><mi>t</mi><mi>i</mi></msubsup><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow></mfrac><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle scriptlevel="0" displaystyle="false"><mo stretchy="false">(</mo><msup><mi>v</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo><msup><mi>v</mi><mi>i</mi></msup><mo stretchy="false">)</mo><mo>∈</mo><mi>E</mi><mo separator="true">,</mo><mi>ϕ</mi><mo stretchy="false">(</mo><msup><mi>v</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi>t</mi><mo>+</mo><mn>1</mn></mstyle></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>other&nbsp;situation</mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">p(v^{i+1}|v_t^i,{\mathcal{P}})=\begin{cases}\frac{1}{|N_{t+1}(v_t^i)|}, &amp; \text{$(v^{i+1},v^i)\in E,\phi(v^{i+1})=t+1$}\\[2ex]0, &amp; \text{other situation}\\\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.124664em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.742em;vertical-align:-1.621em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.49999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.00501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.121em;"><span style="top:-4.121em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.61888em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173142857142857em;"><span style="top:-2.357em;margin-left:-0.10903em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.20252142857142857em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8158857142857143em;"><span style="top:-2.209457142857143em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29054285714285716em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span><span class="mord mtight">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5845em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span><span style="top:-1.819em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.621em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.121em;"><span style="top:-4.121em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span style="top:-1.819em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">other&nbsp;situation</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.621em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>上述公式表明，在游走到某节点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">v_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的情况下，下一节点在满足一下两个条件的节点中等概率选择：</p><ol><li>和节点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">v_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>有边连接</li><li>是元路径规定的下一个节点的类型</li></ol><blockquote><p>获得随机游走序列之后，和deepwalk一样输入skip-gram模型训练</p></blockquote><h1 id="gatne"><a class="markdownIt-Anchor" href="#gatne"></a> GATNE</h1><ol><li>相比metapath2vec，增加了边类型不同的情况</li><li>base-embedding+edge-embedding<br><img src="/2022/04/29/GNN%E6%A6%82%E8%BF%B0/image-20211226200105763.png" alt=""></li></ol><blockquote><p>用函数逼近器得到归纳学习的效果<br><img src="/2022/04/29/GNN%E6%A6%82%E8%BF%B0/image-20211226204804890.png" alt=""></p></blockquote><h1 id="bine"><a class="markdownIt-Anchor" href="#bine"></a> BiNE</h1><p>给显式和隐式关系分别赋予不同的权重。<br>显式关系：直接的连边，A-B或A-A<br>隐式关系：共同邻居，类似于元路径的A-B-A</p><h1 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h1><p><a href="https://www.bilibili.com/video/BV1K5411H7EQ?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click">B站某大佬</a></p>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Graph </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络挖掘基础</title>
      <link href="/2022/03/08/%E7%BD%91%E7%BB%9C%E6%8C%96%E6%8E%98%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/03/08/%E7%BD%91%E7%BB%9C%E6%8C%96%E6%8E%98%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="图的性质"><a class="markdownIt-Anchor" href="#图的性质"></a> 图的性质</h1><h2 id="度中心性"><a class="markdownIt-Anchor" href="#度中心性"></a> 度中心性</h2><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>D</mi><mi>i</mi></msub><mo>=</mo><mfrac><msub><mi>N</mi><mi>i</mi></msub><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">D_i=\frac{N_i}{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">D_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: i 结点的度中心性</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">N_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: i 结点的度</p><p>n: 结点数量</p><h2 id="特征向量中心性"><a class="markdownIt-Anchor" href="#特征向量中心性"></a> 特征向量中心性</h2><p>邻接矩阵的最大特征值对应的<strong>特征向量</strong>，给出了每个节点重要程度的度量</p><h2 id="中介中心性"><a class="markdownIt-Anchor" href="#中介中心性"></a> 中介中心性</h2><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>B</mi><mi>e</mi><mi>t</mi><mi>w</mi><mi>e</mi><mi>e</mi><mi>n</mi><mi>n</mi><mi>e</mi><mi>s</mi><mi>s</mi><mo>=</mo><mfrac><mtext>经过该节点的最短路径数目</mtext><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">Betweenness=\frac{经过该节点的最短路径数目}{(n-2)(n-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">e</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">s</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.29633em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">经</span><span class="mord cjk_fallback">过</span><span class="mord cjk_fallback">该</span><span class="mord cjk_fallback">节</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">最</span><span class="mord cjk_fallback">短</span><span class="mord cjk_fallback">路</span><span class="mord cjk_fallback">径</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">目</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>如果两节点出现两条最短路径，经过目标节点的路径权值减半。</p><h2 id="连接中心性"><a class="markdownIt-Anchor" href="#连接中心性"></a> 连接中心性</h2><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>e</mi><mi>n</mi><mi>e</mi><mi>s</mi><mi>s</mi><mo>=</mo><mfrac><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mtext>节点到所有其他节点最短路径长度之和</mtext></mfrac></mrow><annotation encoding="application/x-tex">Closeness=\frac{n-1}{节点到所有其他节点最短路径长度之和}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">s</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">节</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">他</span><span class="mord cjk_fallback">节</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">最</span><span class="mord cjk_fallback">短</span><span class="mord cjk_fallback">路</span><span class="mord cjk_fallback">径</span><span class="mord cjk_fallback">长</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">之</span><span class="mord cjk_fallback">和</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="clustering-coefficient集聚系数簇系数"><a class="markdownIt-Anchor" href="#clustering-coefficient集聚系数簇系数"></a> clustering coefficient/集聚系数(簇系数)</h2><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub><mo>=</mo><mfrac><mrow><mn>2</mn><msub><mi>e</mi><mi>i</mi></msub></mrow><mrow><msub><mi>k</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>k</mi><mi>i</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">C_i=\frac{2e_i}{k_i(k_i-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25744em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>某结点的邻居结点之间的边占这些结点之间最大边数的比例</p><h2 id="pagerank"><a class="markdownIt-Anchor" href="#pagerank"></a> PageRank</h2><ol><li><p>指定某个节点的PR值</p></li><li><p>计算仅由它指向的节点的PR值，迭代到收敛</p><p>公式中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>是总节点数，所有节点都有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>−</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">1-d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>的保留概率被访问，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>是阻尼系数，根据经验取0.85，阻尼系数乘上所有指向<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">p_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的节点的PR值除以那些节点的出度</p></li></ol><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>P</mi><mi>R</mi><mo stretchy="false">(</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mn>1</mn><mo>−</mo><mi>d</mi></mrow><mi>N</mi></mfrac><mo>+</mo><mi>d</mi><munder><mo>∑</mo><mrow><msub><mi>p</mi><mi>j</mi></msub><mo>∈</mo><mi>B</mi><mo stretchy="false">(</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></munder><mfrac><mrow><mi>P</mi><mi>R</mi><mo stretchy="false">(</mo><msub><mi>p</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mi>L</mi><mo stretchy="false">(</mo><msub><mi>p</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow></mstyle></mrow><annotation encoding="application/x-tex">\displaystyle{ PR(p_{i}) = \frac{1-d}{N}+d\sum _{p_{j}\in B(p_{i})}\frac{PR({p_{j}})}{L({p_{j}})} }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.965325em;vertical-align:-1.538325em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.538325em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></span></p><h2 id="hits"><a class="markdownIt-Anchor" href="#hits"></a> Hits</h2><ol><li><p>每一个网页的权威值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>a</mi><mi>u</mi><mi>t</mi><mi>h</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mrow><annotation encoding="application/x-tex">\displaystyle{  auth(p) = 1  }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span></span></span>，枢纽值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>h</mi><mi>u</mi><mi>b</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mrow><annotation encoding="application/x-tex">\displaystyle{  hub(p) = 1  }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="mord mathnormal">u</span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>a</mi><mi>u</mi><mi>t</mi><mi>h</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>q</mi><mo>∈</mo><msub><mi>P</mi><msub><mi>t</mi><mn>0</mn></msub></msub></mrow></munder><mi>h</mi><mi>u</mi><mi>b</mi><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo></mrow></mstyle></mrow><annotation encoding="application/x-tex">\displaystyle{ auth(p) = \sum_{q\in P_{t_{0}}}hub(q) }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.5942610000000004em;vertical-align:-1.544256em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.29634285714285713em;"><span style="top:-2.3569999999999998em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3570285714285715em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.544256em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">u</span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>h</mi><mi>u</mi><mi>b</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>q</mi><mo>∈</mo><msub><mi>P</mi><mrow><mi>f</mi><mi>r</mi><mi>o</mi><mi>m</mi></mrow></msub></mrow></munder><mi>a</mi><mi>u</mi><mi>t</mi><mi>h</mi><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo></mrow></mstyle></mrow><annotation encoding="application/x-tex">\displaystyle{ hub(p) = \sum_{q\in P_{from}}auth(q) }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.547421em;vertical-align:-1.4974159999999999em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="mord mathnormal">u</span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29011428571428566em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4974159999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span></span></p><p>权威值更新为所有指向它的节点的枢纽值求和，枢纽值更新它指向的节点的权威值求和。</p></li><li><p>分别对权威值和枢纽值归一化</p></li><li><p>重复2-3直到收敛</p></li></ol><h2 id="案例分析-zachary空手道俱乐部"><a class="markdownIt-Anchor" href="#案例分析-zachary空手道俱乐部"></a> 案例分析-Zachary空手道俱乐部</h2><p><code>nx.draw(nx.Graph())</code> 需要调用pyplot</p><p><img src="/2022/03/08/%E7%BD%91%E7%BB%9C%E6%8C%96%E6%8E%98%E5%9F%BA%E7%A1%80/image-20220307160753170.png" alt=""></p><h2 id="度分布"><a class="markdownIt-Anchor" href="#度分布"></a> 度分布</h2><pre class="highlight"><code class="python">degree_freq = nx.degree_histogram(G)degrees = <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(degree_freq))plt.plot(degrees, degree_freq, <span class="hljs-string">'ro-'</span>)plt.title(<span class="hljs-string">'degree distribution of Zachary'</span>)plt.xlabel(<span class="hljs-string">'Degree'</span>)plt.ylabel(<span class="hljs-string">'Frequency'</span>)plt.show()</code></pre><p><img src="/2022/03/08/%E7%BD%91%E7%BB%9C%E6%8C%96%E6%8E%98%E5%9F%BA%E7%A1%80/image-20220308163459883.png" alt=""></p><h2 id="幂律分布无标度网络"><a class="markdownIt-Anchor" href="#幂律分布无标度网络"></a> 幂律分布(无标度网络)</h2><pre class="highlight"><code class="python">G = nx.barabasi_albert_graph(<span class="hljs-number">10000</span>, <span class="hljs-number">10</span>)degree_freq = nx.degree_histogram(G)degrees = <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(degree_freq))plt.loglog(degrees[<span class="hljs-number">1</span>:], degree_freq[<span class="hljs-number">1</span>:],<span class="hljs-string">'ro'</span>) plt.title(<span class="hljs-string">'degree distribution &amp; power law'</span>)plt.xlabel(<span class="hljs-string">'Degree'</span>)plt.ylabel(<span class="hljs-string">'Frequency'</span>)plt.show()</code></pre><p><img src="/2022/03/08/%E7%BD%91%E7%BB%9C%E6%8C%96%E6%8E%98%E5%9F%BA%E7%A1%80/image-20220307161721628.png" alt=""></p><h2 id="簇系数集聚系数"><a class="markdownIt-Anchor" href="#簇系数集聚系数"></a> 簇系数（集聚系数）</h2><blockquote><p>clustering coefficient</p></blockquote><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub><mo>=</mo><mfrac><mrow><mn>2</mn><msub><mi>e</mi><mi>i</mi></msub></mrow><mrow><msub><mi>k</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>k</mi><mi>i</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">C_i=\frac{2e_i}{k_i(k_i-1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25744em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>某结点的邻居结点之间的边占这些结点之间最大边数的比例</p><pre class="highlight"><code class="python">clustering_coefs = <span class="hljs-built_in">list</span>(nx.clustering(G).values())degrees = [n <span class="hljs-keyword">for</span> _, n <span class="hljs-keyword">in</span> G.degree()]data = pd.DataFrame({<span class="hljs-string">'clustering_coefs'</span>: clustering_coefs,                      <span class="hljs-string">'degrees'</span>: degrees})g = sns.lmplot(x=<span class="hljs-string">'degrees'</span>, y=<span class="hljs-string">'clustering_coefs'</span>, data=data)plt.title(<span class="hljs-string">'degree-clutering'</span>)plt.show()</code></pre><p><img src="/2022/03/08/%E7%BD%91%E7%BB%9C%E6%8C%96%E6%8E%98%E5%9F%BA%E7%A1%80/image-20220307162103343.png" alt=""></p><p>阴影表示置信区间</p><h2 id="度度相关性"><a class="markdownIt-Anchor" href="#度度相关性"></a> 度度相关性</h2><blockquote><p>节点的度和邻居节点度的平均值的关系</p></blockquote><pre class="highlight"><code class="python">degree1 = []degree2 = []<span class="hljs-keyword">for</span> v <span class="hljs-keyword">in</span> G:    degree1.append(G.degree(v))    degree2.append(np.mean([G.degree(x) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> G.neighbors(v)]))    data = pd.DataFrame({<span class="hljs-string">'degree1'</span>: degree1,                      <span class="hljs-string">'degree2'</span>: degree2})g = sns.lmplot(x=<span class="hljs-string">'degree1'</span>, y=<span class="hljs-string">'degree2'</span>, data=data)plt.title(<span class="hljs-string">'degree-degree'</span>)plt.show()</code></pre><p><img src="/2022/03/08/%E7%BD%91%E7%BB%9C%E6%8C%96%E6%8E%98%E5%9F%BA%E7%A1%80/image-20220307162937610.png" alt=""></p><pre class="highlight"><code class="Python"><span class="hljs-comment"># 同配性系数</span>nx.degree_assortativity_coefficient(G)<span class="hljs-comment"># 平均距离</span>nx.average_shortest_path_length(G)<span class="hljs-comment"># 距离</span>nx.distance_measures.diameter(G)<span class="hljs-comment"># 最大连通分量</span>largest_cc = <span class="hljs-built_in">max</span>(nx.connected_components(G), key=<span class="hljs-built_in">len</span>)Gcc = DG.subgraph(largest_cc)<span class="hljs-comment"># 有向图的强连通</span><span class="hljs-built_in">print</span>(nx.is_strongly_connected(Gcc))<span class="hljs-comment"># 有向图的出度、入读</span>DG.out_degree()DG.in_degree()</code></pre><h1 id="经典网络模型"><a class="markdownIt-Anchor" href="#经典网络模型"></a> 经典网络模型</h1><h2 id="随机网络"><a class="markdownIt-Anchor" href="#随机网络"></a> 随机网络</h2><pre class="highlight"><code class="python">n = <span class="hljs-number">43</span>m = <span class="hljs-number">130</span>p = <span class="hljs-number">130</span>G_random = nx.gnp_random_graph(n, p)G_random = nx.gnm_random_graph(n, m)<span class="hljs-built_in">print</span>(nx.info(G_random))fig, axes = plt.subplots(figsize=(<span class="hljs-number">16</span>, <span class="hljs-number">8</span>), nrows=<span class="hljs-number">1</span>, ncols=<span class="hljs-number">1</span>)pos = nx.circular_layout(G_random)nx.draw(G_random, pos=pos, with_labels=<span class="hljs-literal">True</span>, ax=axes[<span class="hljs-number">0</span>])axes[<span class="hljs-number">0</span>].set_title(<span class="hljs-string">'Random network'</span>)plt.show()<span class="hljs-comment"># 保证网络连通的 p 值大小？</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">plot_random_network</span>(<span class="hljs-params">n, p, ax</span>):    G_random = nx.gnp_random_graph(n, p)    is_connected = nx.is_connected(G_random)    pos = nx.circular_layout(G_random)    nx.draw(G_random, pos=pos, ax=ax)    ax.set_title(<span class="hljs-string">'%.4f %s'</span> %                 (p, <span class="hljs-string">'Connected'</span> <span class="hljs-keyword">if</span> is_connected <span class="hljs-keyword">else</span> <span class="hljs-string">'Not connected'</span>))</code></pre><p><img src="/2022/03/08/%E7%BD%91%E7%BB%9C%E6%8C%96%E6%8E%98%E5%9F%BA%E7%A1%80/image-20220308110330811.png" alt=""></p><h3 id="配置网络"><a class="markdownIt-Anchor" href="#配置网络"></a> 配置网络</h3><pre class="highlight"><code class="python"><span class="hljs-comment"># degree like</span>degrees = [d <span class="hljs-keyword">for</span> v, d <span class="hljs-keyword">in</span> G_friends.degree()]G_configuration = nx.configuration_model(degrees)</code></pre><h2 id="自我中心网络"><a class="markdownIt-Anchor" href="#自我中心网络"></a> 自我中心网络</h2><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">plot_ego_network</span>(<span class="hljs-params">G, n, ax, title</span>):        <span class="hljs-comment"># ndoes_ego = list(nx.ego_graph(G, n, radius=1))</span>    <span class="hljs-comment"># G_ego = G.subgraph(ndoes_ego)</span>    G_ego = nx.ego_graph(G, n, radius=<span class="hljs-number">1</span>)        cc = nx.clustering(G)[n]        pos=nx.fruchterman_reingold_layout(G_ego, seed=<span class="hljs-number">1028</span>)    d = <span class="hljs-built_in">dict</span>(G_ego.degree)    nx.draw(G_ego, pos=pos, node_size=[v * <span class="hljs-number">100</span> <span class="hljs-keyword">for</span> v <span class="hljs-keyword">in</span> d.values()], with_labels=<span class="hljs-literal">True</span>, ax=ax)    ax.set_title(<span class="hljs-string">'%s, cc=%.3f'</span> % (title, cc))n = <span class="hljs-number">19</span>fig, axes = plt.subplots(figsize=(<span class="hljs-number">18</span>, <span class="hljs-number">6</span>), nrows=<span class="hljs-number">1</span>, ncols=<span class="hljs-number">3</span>)plt.suptitle(<span class="hljs-string">'Ego network of node %d'</span> % n)plot_ego_network(G_random, n, axes[<span class="hljs-number">0</span>], <span class="hljs-string">'Random network'</span>)<span class="hljs-comment"># plot_ego_network(nx.Graph(G_configuration), 19, axes[1], 'Configuration network')</span><span class="hljs-comment"># plot_ego_network(G_friends, 19, axes[2], 'Friends network')</span>plt.show()</code></pre><p><img src="/2022/03/08/%E7%BD%91%E7%BB%9C%E6%8C%96%E6%8E%98%E5%9F%BA%E7%A1%80/image-20220308112019045.png" alt=""></p><h2 id="小世界网络"><a class="markdownIt-Anchor" href="#小世界网络"></a> 小世界网络</h2><pre class="highlight"><code class="python">fig, axes = plt.subplots(figsize=(<span class="hljs-number">18</span>, <span class="hljs-number">6</span>), nrows=<span class="hljs-number">1</span>, ncols=<span class="hljs-number">3</span>)G_regular = nx.watts_strogatz_graph(n = <span class="hljs-number">16</span>, k = <span class="hljs-number">4</span>, p = <span class="hljs-number">0.0</span>)pos = nx.circular_layout(G_regular)nx.draw(G_regular, pos=pos, with_labels=<span class="hljs-literal">True</span>, ax=axes[<span class="hljs-number">0</span>])axes[<span class="hljs-number">0</span>].set_title(<span class="hljs-string">'Regular network'</span>)G_sm = nx.watts_strogatz_graph(n = <span class="hljs-number">16</span>, k = <span class="hljs-number">4</span>, p = <span class="hljs-number">0.3</span>)pos = nx.circular_layout(G_sm)nx.draw(G_sm, pos=pos, with_labels=<span class="hljs-literal">True</span>, ax=axes[<span class="hljs-number">1</span>])axes[<span class="hljs-number">1</span>].set_title(<span class="hljs-string">'Small-world network'</span>)G_random = nx.gnp_random_graph(n = <span class="hljs-number">16</span>, p = <span class="hljs-number">4</span>/<span class="hljs-number">16</span>)pos = nx.circular_layout(G_random)nx.draw(G_random, pos=pos, with_labels=<span class="hljs-literal">True</span>, ax=axes[<span class="hljs-number">2</span>])axes[<span class="hljs-number">2</span>].set_title(<span class="hljs-string">'Random network'</span>)plt.show()</code></pre><p><img src="/2022/03/08/%E7%BD%91%E7%BB%9C%E6%8C%96%E6%8E%98%E5%9F%BA%E7%A1%80/image-20220308112408375.png" alt=""></p><p><img src="/2022/03/08/%E7%BD%91%E7%BB%9C%E6%8C%96%E6%8E%98%E5%9F%BA%E7%A1%80/image-20220308122754592.png" alt=""></p><p><img src="/2022/03/08/%E7%BD%91%E7%BB%9C%E6%8C%96%E6%8E%98%E5%9F%BA%E7%A1%80/image-20220308123031740.png" alt=""></p><p>规律：换掉的边越多，聚类系数越小，越接近随机网络；平均距离越小</p><h2 id="无标度网络"><a class="markdownIt-Anchor" href="#无标度网络"></a> 无标度网络</h2><p>学习资料</p><ul><li><a href="https://www.ellipsix.net/blog/2012/02/scale-invariance-and-the-power-law.html">无标度与幂律分布</a></li><li><a href="https://adamwierman.com/wp-content/uploads/2020/09/2013-SIGMETRICS-heavytails.pdf">The Fundamentals of Heavy Tails</a></li><li><a href="https://www.bilibili.com/video/BV1PJ411T7ey?from=search&amp;seid=16649474684175316499&amp;spm_id_from=333.337.0.0">mandelbrot 集合</a></li></ul><h3 id="ba模型生成无标度网络"><a class="markdownIt-Anchor" href="#ba模型生成无标度网络"></a> BA模型生成无标度网络</h3><pre class="highlight"><code class="python">G0 = nx.star_graph(<span class="hljs-number">4</span>)nx.draw(G0, with_labels=<span class="hljs-literal">True</span>)i = <span class="hljs-number">4</span><span class="hljs-comment"># 生成一个节点</span>i += <span class="hljs-number">1</span>color_map = [<span class="hljs-string">'tab:blue'</span>] * icolor_map.append(<span class="hljs-string">'tab:red'</span>)G1 = G0.copy()G1.add_node(i)nx.draw(G1, node_color=color_map, with_labels=<span class="hljs-literal">True</span>)<span class="hljs-comment"># 按照度的大小概率连接</span>possible_neighbors = <span class="hljs-built_in">list</span>(G0.nodes)degrees = [G0.degree(n) <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> possible_neighbors]neighbors_to_choose = [[n] * G0.degree(n) <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> possible_neighbors]neighbors_to_choose = [i <span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> neighbors_to_choose <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> l]neighbors_to_choosej = random.choices(neighbors_to_choose)[<span class="hljs-number">0</span>]<span class="hljs-built_in">print</span>(<span class="hljs-string">'new neighbor is %d'</span> % j)G0.add_edge(i, j)nx.draw(G0, node_color=color_map, with_labels=<span class="hljs-literal">True</span>)<span class="hljs-comment"># 重复</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_SF</span>(<span class="hljs-params">G</span>):        i = <span class="hljs-built_in">len</span>(G.nodes())        possible_neighbors = <span class="hljs-built_in">list</span>(G.nodes)    degrees = [G.degree(n) <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> possible_neighbors]        neighbors_to_choose = [[n] * G.degree(n) <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> possible_neighbors]    neighbors_to_choose = [i <span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> neighbors_to_choose <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> l]    j = random.choices(neighbors_to_choose)[<span class="hljs-number">0</span>]    G.add_edge(i, j)    G = nx.star_graph(<span class="hljs-number">4</span>)N = <span class="hljs-number">100</span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(N):    get_SF(G)    nx.draw(G)    </code></pre><p><img src="/2022/03/08/%E7%BD%91%E7%BB%9C%E6%8C%96%E6%8E%98%E5%9F%BA%E7%A1%80/image-20220308165729644.png" alt="image-20220308165729644"></p><h3 id="对无标度网络的攻击"><a class="markdownIt-Anchor" href="#对无标度网络的攻击"></a> 对无标度网络的攻击</h3><blockquote><p>随机移除节点 vs 蓄意移除节点</p></blockquote><p><img src="/2022/03/08/%E7%BD%91%E7%BB%9C%E6%8C%96%E6%8E%98%E5%9F%BA%E7%A1%80/image-20220308170355504.png" alt=""></p><h1 id="社团结构"><a class="markdownIt-Anchor" href="#社团结构"></a> 社团结构</h1><h2 id="手动划分"><a class="markdownIt-Anchor" href="#手动划分"></a> 手动划分</h2><pre class="highlight"><code class="python">G = nx.Graph()nx.add_cycle(G, [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>])nx.add_cycle(G, [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>])G.add_edge(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>)pos = nx.fruchterman_reingold_layout(G)nx.draw(G, with_labels=<span class="hljs-literal">True</span>, pos=pos)partition1 = [    {<span class="hljs-number">0</span>, <span class="hljs-number">1</span>},    {<span class="hljs-number">2</span>, <span class="hljs-number">3</span>},    {<span class="hljs-number">4</span>, <span class="hljs-number">5</span>},]partition_map1 = {}<span class="hljs-keyword">for</span> idx, cluster_nodes <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(partition1):    <span class="hljs-keyword">for</span> node <span class="hljs-keyword">in</span> cluster_nodes:        partition_map1[node] = idx        </code></pre><h2 id="随机划分"><a class="markdownIt-Anchor" href="#随机划分"></a> 随机划分</h2><pre class="highlight"><code class="python">random_nodes = random.sample(K.nodes, <span class="hljs-number">17</span>)random_partition = [<span class="hljs-built_in">set</span>(random_nodes),<span class="hljs-built_in">set</span>(K.nodes) - <span class="hljs-built_in">set</span>(random_nodes)] <span class="hljs-comment"># 差集</span></code></pre><h2 id="模块度-modularity"><a class="markdownIt-Anchor" href="#模块度-modularity"></a> 模块度 Modularity</h2><p>一个好的社团发掘算法：社团内部连边多，社团之间连边少。</p><p>For weighted undirected networks, as described in the text, we have</p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: No such environment: equation at position 7: \begin{̲e̲q̲u̲a̲t̲i̲o̲n̲}̲    Q_w=\frac{…">\begin{equation}    Q_w=\frac{1}{W}\sum_C \left(W_C-\frac{s_C^2}{4W}\right),    \label{eq:wmodul}\end{equation}</p><p>where</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> is the total weight of the links of the network,</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>C</mi></msub></mrow><annotation encoding="application/x-tex">W_C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> the total weight of the internal links of cluster <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>, and</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>C</mi></msub></mrow><annotation encoding="application/x-tex">s_C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> the total strength of the nodes of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>.</li></ul><p>值得注意的是：</p><ul><li>最优的划分， 0 &lt; Q &lt; 1；</li><li>若把所有节点当成同一个社团，则 Q = 0；</li><li>若把每一个节点当成不同的社团，则 Q &lt; 0；</li></ul><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> pltfig = plt.figure(figsize=(<span class="hljs-number">12</span>, <span class="hljs-number">4</span>))plt.subplot(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>)nx.draw(G, with_labels=<span class="hljs-literal">True</span>, node_color=node_colors1, pos=pos)plt.title(<span class="hljs-string">'partition1'</span>)plt.subplot(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>)nx.draw(G, with_labels=<span class="hljs-literal">True</span>, node_color=node_colors2, pos=pos)plt.title(<span class="hljs-string">'partition2'</span>)plt.show()</code></pre><p><img src="/2022/03/08/%E7%BD%91%E7%BB%9C%E6%8C%96%E6%8E%98%E5%9F%BA%E7%A1%80/image-20220308180939432.png" alt=""></p><h3 id="贪婪模块度划分"><a class="markdownIt-Anchor" href="#贪婪模块度划分"></a> 贪婪模块度划分</h3><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> networkx.algorithms.community <span class="hljs-keyword">import</span> greedy_modularity_communitiesoptimal_partition = greedy_modularity_communities(K)nx.community.quality.modularity(K, optimal_partition)</code></pre><h3 id="girvan-newman划分算法"><a class="markdownIt-Anchor" href="#girvan-newman划分算法"></a> Girvan-Newman划分算法</h3><p>不断的删除网络中边介数（Betweenness）最大的边，直到网络中每个节点都是一个社团为止。</p><ol><li>计算每一条边的边介数；</li><li>删除边介数最大的边；</li><li>重新计算网络中剩下的边的边阶数；</li><li>重复(3)和(4)步骤，直到网络中的任一顶点作为一个社区为止。</li></ol><p><img src="/2022/03/08/%E7%BD%91%E7%BB%9C%E6%8C%96%E6%8E%98%E5%9F%BA%E7%A1%80/image-20220308182129101.png" alt=""></p><h1 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充</h1><p><a href="https://www.bilibili.com/video/BV1Az4y1Q7v5?from=search&amp;seid=14361555497668642316&amp;spm_id_from=333.337.0.0">Gephi 中文教程</a></p>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Graph </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>智能合约漏洞综述</title>
      <link href="/2021/12/13/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E6%BC%8F%E6%B4%9E%E7%BB%BC%E8%BF%B0/"/>
      <url>/2021/12/13/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E6%BC%8F%E6%B4%9E%E7%BB%BC%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>链接打不开是我的本地 pdf，自己搜论文</p></blockquote><h1 id="paper"><a class="markdownIt-Anchor" href="#paper"></a> paper</h1><p><a href="35-%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E7%A0%94%E7%A9%B6%E7%BB%BC%E8%BF%B0.pdf">35-智能合约安全漏洞研究综述</a> #张超-清华<br><a href="%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6%E7%BB%BC%E8%BF%B0.pdf">智能合约安全漏洞检测技术研究综述</a> #钱鹏-浙工商<br><a href="%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%AE%89%E5%85%A8%E7%BB%BC%E8%BF%B0_%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90.pdf">智能合约安全综述_漏洞分析</a></p><h1 id="应用领域"><a class="markdownIt-Anchor" href="#应用领域"></a> 应用领域</h1><ul><li>股权众筹</li><li>游戏</li><li>保险</li><li>供应链</li><li>物联网</li></ul><h1 id="事件"><a class="markdownIt-Anchor" href="#事件"></a> 事件</h1><table><thead><tr><th>安全事件</th><th>安全漏洞</th><th>时间</th><th>危害</th></tr></thead><tbody><tr><td>The DAO</td><td>重入</td><td>2016.6</td><td>$5000w hard-fork</td></tr><tr><td>Parity 钱包被盗+冻结</td><td>代码注入+权限不当</td><td>2017.7</td><td>$3000w 冻结</td></tr><tr><td>BEC/SMT</td><td>整数溢出</td><td>2018.4</td><td>攻击者大量抛售后市值归零</td></tr><tr><td>KotET 合约拒绝服务</td><td>拒绝服务</td><td>2016.2</td><td>攻击者获得永久王座</td></tr></tbody></table><h2 id="第一次-parity"><a class="markdownIt-Anchor" href="#第一次-parity"></a> 第一次 parity</h2><pre class="highlight"><code class="solidity">contract WalletLibrary {     address owner;     // called by constructor     function initWallet(address _owner) {         owner = _owner;         // ... more setup ...     }     function changeOwner(address _new_owner) external {         if (msg.sender == owner) {             owner = _new_owner;         }     }     function () payable {         // ... receive money, log events, ...     }     function withdraw(uint amount) external returns (bool success) {         if (msg.sender == owner) {             return owner.send(amount);         } else {             return false;         }     }}</code></pre><pre class="highlight"><code class="solidity">contract Wallet {    address _walletLibrary;    address owner;    function Wallet(address _owner) {        // replace the following line with “_walletLibrary = new WalletLibrary();”        // if you want to try to exploit this contract in Remix.        _walletLibrary = &lt;address of pre-deployed WalletLibrary&gt;;        _walletLibrary.delegatecall(bytes4(sha3("initWallet(address)")), _owner);    }    function withdraw(uint amount) returns (bool success) {        return _walletLibrary.delegatecall(bytes4(sha3("withdraw(uint)")), amount);    }    // fallback function gets called if no other function matches call    function () payable {        _walletLibrary.delegatecall(msg.data);    }}</code></pre><p>wallet 合约将所有行为交给 walletLibrary 代理执行。首先同名构造函数 <code>Wallet(address _owner)</code> 在合约创建时执行，钱包拥有者为合约创建者。fallback 函数将递交所有的数据给代理库，这里埋下了隐患。当攻击者调用<code>Wallet.initWallet(attacker)</code>时，不匹配 Wallet 中的任何显式函数，所以进入 fallback 函数，<code>initWallet(attacker)</code>将被转发给代理。<code>initWallet(attacker)</code>命中 walletLibrary 中的函数跳转表，于是在 wallet 的上下文中再次执行<code>initWallet()</code>从而使自己成为了钱包拥有者。</p><blockquote><p>msg.sender: 交易发起者</p><p>msg.value: 转账金额，大于 0 将触发收款方的 fallback 函数</p><p>msg.data: 调用函数，也可以随便写，当不命中跳转表时会调用 fallback</p></blockquote><p><a href="https://hackingdistributed.com/2017/07/22/deep-dive-parity-bug/">An In-Depth Look at the Parity Multisig Bug</a></p><blockquote><p>At the EVM level, a contract is just a single program that takes a variable-length binary blob of data as input and produces a variable-length binary blob of data as its output. A transaction in EVM provides an address and some data. If the address holds code, this data is used in a “<a href="https://en.wikipedia.org/wiki/Branch_table">jump table</a>” like structure in the beginning of the contract’s code, with some of the data (the “function selector”) indexing jumps to different parts of contract code using the standard encodings described in the <a href="https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI">Ethereum Contract ABI specification</a>. Above, the function selector for calling a function called initWallet that takes an address as its argument is the mysterious looking bytes4(sha3(“initWallet(address)”)).</p></blockquote><h2 id="第二次-parity"><a class="markdownIt-Anchor" href="#第二次-parity"></a> 第二次 parity</h2><p>Parity 钱包提供了多签钱包的库合约。当库合约的函数被 delegatecall 调用时，它是运行在调用方（即：用户多签合约）的上下文里，像 m_numOwners 这样的变量都来自于用户多签合约的上下文。另外，为了能被用户合约调用，这些库合约的初始化函数都是 public 的。</p><p>库合约本质上也不过是另外一个智能合约，这次攻击调用使用的是库合约本身的上下文。这源于大家忽视了库本身的独立性，其中也包括 Parity 的维护者。他们应该在库合约部署后立刻调用一次<code>initWallet()</code>以<strong>锁定</strong>所有权，结果等了一百多天，被黑客抢先。</p><p>攻击流程:</p><ol><li>攻击者直接调用库合约的<code>initWallet()</code>把自己设置为库合约的 owner。</li><li>攻击者调用<code>kill()</code>函数，把库合约删除，所有依赖于这个库的钱包被冻结了。</li></ol><blockquote><p>这一攻击在上述的第一次 parity 中不会发生，因为没写 kill 函数！</p></blockquote><p>解决办法：构造函数获得库合约所有权后，把库合约的 m_numOwners 变量置 1</p><h3 id="rex"><a class="markdownIt-Anchor" href="#rex"></a> REX</h3><ul><li><a href="https://cointelegraph.com/news/hacker-spends-1k-to-win-over-110k-in-eos-betting-game-using-rex">REX</a></li></ul><h1 id="生命周期"><a class="markdownIt-Anchor" href="#生命周期"></a> 生命周期</h1><ol><li>开发</li><li>编译<ul><li>高级语言编写的合约源代码都将被编译为统一规范的<strong>字节码</strong>(bytecode)才能在 EVM 上运行</li><li>同时，合约还会生成相应的合约调用接口(Application Binary Interface, ABI), 该接口定义了合约所有可以被调用的<strong>外部函数</strong>及其<strong>参数列表</strong>。</li></ul></li><li>部署<br>由一笔合约部署交易完成：<ul><li>合约的 data 字段将被设置为合约部署字节码，交易的接收方被设置 0</li><li>矿工在交易打包时将根据合约部署者的地址和交易次数(nonce)来生成一个新的地址，并将合约的字节码部署到该地址</li><li>将执行构造函数，包括合约变量初始化和同名函数</li></ul></li><li>调用<ul><li>交易调用(transaction call): 由普通地址发起一笔合约调用</li><li>消息调用(message call): 由某个合约发起的对另一个合约中函数的调用</li></ul></li><li>销毁<br>在合约编写时加入销毁功能的合约才能在满足设定条件后销毁。销毁只是意味着不能调用，其 storage 和的代码都可以查看</li></ol><h1 id="程序特性"><a class="markdownIt-Anchor" href="#程序特性"></a> 程序特性</h1><h2 id="gas-机制"><a class="markdownIt-Anchor" href="#gas-机制"></a> gas 机制</h2><p>以太坊设计了 Gas 机制来为合约的执行计算费用。每一个以太坊字节码指令都<strong>根据其运算的复杂程度</strong>被标记了对应的需要消耗的 Gas 花费。合约调用方在发起一次合约调用时, 需要指定本次合约程序执行最高能花费的 Gas 数量, 并为这个最大数量先行付费。数量不足即回滚且不退费，数量充足则退剩下的费用。 #gas</p><h2 id="异常传递机制"><a class="markdownIt-Anchor" href="#异常传递机制"></a> 异常传递机制</h2><p>#exception</p><ul><li><strong>内部函数调用：</strong> 对于本合约或者父合约的内部函数的调用，只需要在以太坊虚拟机执行时进行指令跳转。</li><li><strong>外部函数调用：</strong> 对于指定地址的外部合约函数的调用，需要使用 CALL 指令向外部合约发送消息，这种调用也称为<strong>低级别的调用</strong>。对于所有的低级别调用来说, 如果被调用函数执行过程中出错而抛出异常，则异常并不会被沿着函数调用栈进行传递, 而是仅使用布尔类型的返回值来表示函数调用是否正常完成。 #low-level-call<ul><li><strong>委托调用：</strong> 外部函数调用的一种，本质上是对当前合约函数注入外部代码 #delegate</li></ul></li></ul><h2 id="合约代码无法修改"><a class="markdownIt-Anchor" href="#合约代码无法修改"></a> 合约代码无法修改</h2><p>一旦部署，无法修改。保证了唯一性，但是也不能修漏洞了。</p><h2 id="全局状态与调用序列"><a class="markdownIt-Anchor" href="#全局状态与调用序列"></a> 全局状态与调用序列</h2><p>每个合约都有一个长期的 Storage 存储区域，为合约存储可跨函数使用的全局变量状态。由于合约的<strong>多入口调用方式</strong>，因此在不同函数内部的变量关系、约束结果会随着全局变量进行跨函数的传递，最直接的体现特征就是特定功能或者漏洞的触发需要<strong>多笔交易组成的调用序列</strong>来完成。</p><h1 id="按来源归类漏洞"><a class="markdownIt-Anchor" href="#按来源归类漏洞"></a> 按来源归类漏洞</h1><p><img src="/2021/12/13/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E6%BC%8F%E6%B4%9E%E7%BB%BC%E8%BF%B0/image-20211211201858358.png" alt=""></p><h2 id="高级语言"><a class="markdownIt-Anchor" href="#高级语言"></a> 高级语言</h2><ol><li>变量覆盖<br>在受影响的版本的 solidity 语言中，其声明的数组或者结构体类型变量会被编译器误用为 Storage 类型的变量。从而, 对这些变量的操作将导致对智能合约 Storage 存储区的非法覆盖。</li><li>整数溢出</li><li>未检验返回值，针对 #low-level-call</li><li>任意地址写入，针对 storage 的键值对</li><li>拒绝服务</li><li>资产冻结</li><li>未初始化变量</li><li>影子变量<ol><li>子合约中声明了与父合约中相同的 storage 变量</li><li>全局 storage 变量和函数内部的局部变量重名</li></ol></li><li>权限控制</li></ol><h2 id="虚拟机"><a class="markdownIt-Anchor" href="#虚拟机"></a> 虚拟机</h2><p>三类存储空间：Stack, Memory, Storage</p><table><thead><tr><th>name</th><th>grain</th><th>description</th></tr></thead><tbody><tr><td>stack</td><td>32 字节</td><td>作为程序运行时的必要组件, 用于保存程序运行时的各种临时数据</td></tr><tr><td>memory</td><td>单字节</td><td>保存数组、字符串等较大的临时数据</td></tr><tr><td>storage</td><td>32 字节</td><td>消耗大量 gas，作为区块链状态的一部分永久存储</td></tr></tbody></table><p><img src="/2021/12/13/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E6%BC%8F%E6%B4%9E%E7%BB%BC%E8%BF%B0/image-20211211193109887.png" alt=""></p><h3 id="重入"><a class="markdownIt-Anchor" href="#重入"></a> 重入</h3><p>有典型重入漏洞的代码如下所示：</p><pre class="highlight"><code class="solidity">contract ERCToken{...function withdraw(uint amount) public returns(bool){if (credit[msg.sender]&gt;= amount) {msg.sender.call.value(amount)();credit[msg.sender]-=amount;emit Withdraw(msg.sender, amount);return true;}return false;}}</code></pre><p>如果收到转账的地址是一个<strong>合约地址</strong>，便会<strong>触发收款方的 fallback 函数</strong>，默认 fallback 函数为<code>function() external payable{}</code>。该机制本意是让任何一个合约不用写代码也能获得收款的能力，但它可能被恶意的攻击者用于发起<strong>重入攻击</strong>。 Attack 是一个攻击合约，其代码如下所示:</p><pre class="highlight"><code class="solidity">contract Attack{...function hack() public {erctoken.withdraw(1);}function() public payable { //fallback 函数erctoken.withdraw(1);}}</code></pre><p>攻击者只需要通过 hack 函数调用受害合约的 withdraw 函 数，受害合约 withdraw 函数中<code>msg.sender.call.value(amount)()</code>语句执行时，会触发攻击合约中的 fallback 函数，整个攻击过程如图所示：<br><img src="/2021/12/13/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E6%BC%8F%E6%B4%9E%E7%BB%BC%E8%BF%B0/image-20211211221424451.png" alt=""><br>解决办法：</p><ol><li>先<code>credit[msg.sender]-=amount</code>再转账</li><li>用<code>transfer()</code>限制 gas</li></ol><h3 id="代码注入"><a class="markdownIt-Anchor" href="#代码注入"></a> 代码注入</h3><p>委托调用所使用的 DELEGATECALL 字节码, 允许合约在自己的上下文环境中执行一段其他合约的代码片段。 #delegate</p><h3 id="短地址攻击"><a class="markdownIt-Anchor" href="#短地址攻击"></a> 短地址攻击</h3><p>是指攻击者通过构造末尾为零的地址进行合约调用, 并在调用参数中故意将地址末尾的零舍去, 从而利用虚拟机对于数据的自动补全机制来将<strong>第二个参数进行移位放大</strong>。而第二个参数往往是转账金额。</p><h3 id="不一致性攻击"><a class="markdownIt-Anchor" href="#不一致性攻击"></a> 不一致性攻击</h3><h2 id="区块链"><a class="markdownIt-Anchor" href="#区块链"></a> 区块链</h2><h3 id="时间戳依赖"><a class="markdownIt-Anchor" href="#时间戳依赖"></a> 时间戳依赖</h3><p>区块时间戳是指当前的合约调用交易所属的区块被打包的时间戳。区块时间戳是可以被矿工在一 定的取值范围内操纵的，大约能有 900 秒的范围波动。</p><h3 id="条件竞争"><a class="markdownIt-Anchor" href="#条件竞争"></a> 条件竞争</h3><p>仅仅通过交易顺序来作为决策条件是有问题的。例如, 某个悬赏合约承诺给第一个提交答案的账户奖励。在第一个人提交答案，但还没被打包时，攻击者可以在交易池中找到这个答案并通过<strong>提高汽油费</strong>来让自己“抄”的答案优先被打包。</p><h3 id="随机性不足"><a class="markdownIt-Anchor" href="#随机性不足"></a> 随机性不足</h3><p>由于对于攻击合约和受害合约的调用都来自于攻击者发起的同一笔交易, 自然处在同一个区块中, 因此攻击合约中可以读取到和受害合约中使用的全部区块变量, 从而预测受害合约中的随机数。</p><h1 id="漏洞挖掘方法"><a class="markdownIt-Anchor" href="#漏洞挖掘方法"></a> 漏洞挖掘方法</h1><p><img src="/2021/12/13/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E6%BC%8F%E6%B4%9E%E7%BB%BC%E8%BF%B0/image-20211212140200083.png" alt=""></p><h2 id="模糊测试-fuzz-testing"><a class="markdownIt-Anchor" href="#模糊测试-fuzz-testing"></a> 模糊测试 Fuzz testing</h2><ul><li><strong>黑盒模糊测试</strong>不对程序内部结构进行分析, 而是通过生成随机输入触发程序的缺陷。</li><li><strong>白盒模糊测试</strong>则利用符号执行等程序分析技术对程序结构进行分析, 以提高覆盖率和漏洞挖掘能力。</li><li><strong>灰盒模糊测试</strong>不对程序进行分析但会根据程序反馈调整输入。<br>针对生成调用序列的优化：</li></ul><p><a href="Harvey.pdf">Harvey</a></p><p>Harvey: 通过对在智能合约程序中条件判断语句之前进行插桩的方式, 来测量合约的每一次输入是否有利于产生新的路径。此外, Harvey 还尝试通过不同函数间对全局变量的读写依赖关系进行来生成简单的调用序列, 以提高序列对程序覆盖率的影响。</p><p><a href="ILF.pdf">ILF</a></p><p>ILF: 其首先选取部分的智能合约程序, 并使用符号执行引擎工具对这写合约进行多次的符号执行, 以产生出覆盖率足够高的调用序列。接下来, ILF 使用神经网络对这些调用序列特征进行训练, 并生成可以模仿该序列生成规则的模型以指导模糊测试。</p><h2 id="符号执行-symbolic-execution"><a class="markdownIt-Anchor" href="#符号执行-symbolic-execution"></a> 符号执行 Symbolic execution</h2><p>主要思想是把程序执行过程中不确定的输入转换为<strong>符号值</strong>，以推动程序执行与分析。<br>智能合约与传统程序的差异主要在于合约中<strong>全局变量</strong>的取值是不确定的，因此智能合约的全局变量也需要被处理为符号值。<br><a href="https://github.com/ConsenSys/mythril">Mythril</a>: 多次符号执行增加全局变量的真实性<br><a href="Manticore.pdf">Manticore</a>: 变量值具体化+多合约分析<br><img src="/2021/12/13/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E6%BC%8F%E6%B4%9E%E7%BB%BC%E8%BF%B0/image-20211213101229185.png" alt=""></p><h2 id="形式化验证-formal-verification"><a class="markdownIt-Anchor" href="#形式化验证-formal-verification"></a> 形式化验证 Formal verification</h2><p>形式化验证技术通常使用形式化的描述语言来描述一个系统的属性和特点, 为其构造出形式化规范, 再运用严格的数学逻辑证明来对其实际的运行时行为进行推理。<br><a href="sp20-verx.pdf">sp20-verx</a>: 延迟谓词抽象技术将交易执行期间的符号执行信息与交易之间的抽象信息相结合</p><h2 id="静态程序分析"><a class="markdownIt-Anchor" href="#静态程序分析"></a> 静态程序分析</h2><p>SASC、SmartCheck、Slither</p><h2 id="污点分析"><a class="markdownIt-Anchor" href="#污点分析"></a> 污点分析</h2><p>通过影子栈等方式实现更加精确的数据流分析<br><img src="/2021/12/13/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E6%BC%8F%E6%B4%9E%E7%BB%BC%E8%BF%B0/image-20211212211555358.png" alt=""></p><h1 id="攻防"><a class="markdownIt-Anchor" href="#攻防"></a> 攻防</h1><h3 id="自动化漏洞利用自动攻击"><a class="markdownIt-Anchor" href="#自动化漏洞利用自动攻击"></a> 自动化漏洞利用（自动攻击）</h3><p><a href="teEther.pdf">teEther</a></p><h2 id="攻击阻断"><a class="markdownIt-Anchor" href="#攻击阻断"></a> 攻击阻断</h2><p>Sereum、EVM*提出了有效的实时攻击检测方案, ÆGIS 则进一步提出了如何改进区块链中的<strong>共识算法</strong>以让全网节点对恶意交易的阻断达成共识, 但是其算法设计较为粗糙, 难以被真实应用</p><h1 id="展望"><a class="markdownIt-Anchor" href="#展望"></a> 展望</h1><p>Libra 公司开发了面向资产的中间语言 Move, 通过<strong>静态类型绑定</strong>、<strong>强制类型检查</strong>、<strong>不支持无限循环递归</strong>等方式增加安全性。将不同的高级语言编译为统一的中间语言，来提供统一的安全保障。</p><ol><li>构建统一且规范的智能合约漏洞数据集</li><li>构建基于深度学习的动静态分析综合模型</li><li>构建统一的漏洞检测工具性能评估体系</li></ol><h1 id="idea"><a class="markdownIt-Anchor" href="#idea"></a> idea</h1><p>#idea</p><ol><li>十五种漏洞中，大多通过编译器就能检测出。</li><li>有安全模板和库已经大量应用</li><li>针对新功能、罕用功能的新漏洞</li><li>公共库的漏洞</li></ol><h1 id="深度学习的应用"><a class="markdownIt-Anchor" href="#深度学习的应用"></a> 深度学习的应用</h1><ol><li>模糊测试的输入序列</li><li>静态分析的构图+GNN</li><li>符号分析的强化学习方法</li></ol><h1 id="todo"><a class="markdownIt-Anchor" href="#todo"></a> TODO</h1><ol><li>数据集手工分析，提取特征：storage、函数调用、逻辑跳转</li><li>复现和修改构图方式，比如基于符号分析构图</li><li>看基于深度学习方法挖掘漏洞的论文</li></ol>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blockchain </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>北大肖臻区块链技术与应用</title>
      <link href="/2021/12/04/%E5%8C%97%E5%A4%A7%E8%82%96%E8%87%BB%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
      <url>/2021/12/04/%E5%8C%97%E5%A4%A7%E8%82%96%E8%87%BB%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>记得比较琐碎，以太坊部分待补充完整</p></blockquote><h1 id="btc-密码学原理"><a class="markdownIt-Anchor" href="#btc-密码学原理"></a> BTC-密码学原理</h1><p>比特币最小单位satoshi</p><p>crypto-currency加密货币</p><p>cryptographic hash function密码哈希函数</p><h2 id="哈希函数的性质"><a class="markdownIt-Anchor" href="#哈希函数的性质"></a> 哈希函数的性质</h2><ol><li><strong>collision resistance</strong>冲突阻碍，指会发生哈希冲突的两个输入难以用某个高效算法找到</li></ol><blockquote><p>由实践经验得出某些哈希函数无法人为制造哈希碰撞，这一点无法在数学上证明</p><p>另一些算法，如MD5 已经被破解</p></blockquote><p>​brute-force暴力破解，指用穷举法破解</p><p>​message digest信息摘要/指纹，指利用冲突阻碍原理，信息被篡改后哈希值不改变的情况难以找到</p><ol start="2"><li><strong>hiding</strong>隐匿性</li></ol><p>​H(x)难以反推x，只能用暴力破解</p><p>​**条件：**x的样本空间足够大且分布均匀</p><ol start="3"><li><strong>puzzle friendly</strong></li></ol><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>b</mi><mi>l</mi><mi>o</mi><mi>c</mi><mi>k</mi><mi>h</mi><mi>e</mi><mi>a</mi><mi>d</mi><mi>e</mi><mi>r</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mo>=</mo><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">H(block header) &lt;= target</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>d</mi><mi>i</mi><mi>f</mi><mi>f</mi><mi>i</mi><mi>c</mi><mi>u</mi><mi>l</mi><mi>t</mi><mi>y</mi><mo>=</mo><mfrac><mrow><mtext>挖矿难度</mtext><mo>=</mo><mn>1</mn><mtext> </mtext><mtext>时对应的</mtext><mtext> </mtext><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow><mrow><mtext>当前</mtext><mtext> </mtext><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">difficulty=\frac{挖矿难度=1\,时对应的\,target}{当前\,target}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.24077em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603299999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">当</span><span class="mord cjk_fallback">前</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">挖</span><span class="mord cjk_fallback">矿</span><span class="mord cjk_fallback">难</span><span class="mord cjk_fallback">度</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">应</span><span class="mord cjk_fallback">的</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi><mo>=</mo><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi><mo>∗</mo><mfrac><mrow><mtext>挖出最近</mtext><mtext> </mtext><mn>2016</mn><mtext> </mtext><mtext>个块的实际时间</mtext></mrow><mrow><mn>2016</mn><mo>∗</mo><mn>10</mn><mi>m</mi><mi>i</mi><mi>n</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">target=target*\frac{挖出最近\,2016\,个块的实际时间}{2016*10min}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">0</span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">挖</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">最</span><span class="mord cjk_fallback">近</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">块</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">实</span><span class="mord cjk_fallback">际</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>​target 设定目标，前面都是0，nBits</p><p>​新的target由上面公式算出，但必须处于在上一个的1/4～4倍之间，超过这个范围按边界值</p><p>​这一性质说明，完成这个目标，一定是进行了大量的穷举，即 <strong>proof of work工作量证明</strong></p><p>​difficult to solve, but  easy to verify</p><h2 id="应用"><a class="markdownIt-Anchor" href="#应用"></a> 应用</h2><p>对于股票预测的提前公布会影响股价，所以要提前一天放到封好的信封里</p><p>预测者仅仅提前公布自己的哈希值，第二天收盘时，再公布自己的预测文件</p><ul><li>预测者无法修改这个文件</li><li>别人无法提前反推这个文件</li></ul><p>**问题：**股票的输入空间不足，这会导致隐匿性丧失；但预测者的修改还是很难实现</p><p>**解决：**通过拼接随机数(nonce)扩大输入空间</p><h2 id="比特币用的哈希算法"><a class="markdownIt-Anchor" href="#比特币用的哈希算法"></a> 比特币用的哈希算法</h2><p>SHA-256</p><p>Secure Hash Algorithm</p><h2 id="签名"><a class="markdownIt-Anchor" href="#签名"></a> 签名</h2><p>如何开帐户？创立公钥私钥对</p><p>asymmetric encryption algorithm 非对称加密</p><p>加密用公钥，解密用对应的私钥</p><p>签名用私钥，验证用公钥</p><h1 id="btc-数据结构"><a class="markdownIt-Anchor" href="#btc-数据结构"></a> BTC-数据结构</h1><h2 id="hash-pointers"><a class="markdownIt-Anchor" href="#hash-pointers"></a> hash pointers</h2><p><strong>哈希指针</strong>：前一个区块的位置+H(前一个区块包含其哈希指针的所有数据)结构体</p><p>genesis block创世区块</p><p>most recent block最近区块</p><p>tamper-evident log  篡改事件日志，指中间任意一个哈希修改都会导致之后所有区块哈希值的改变</p><h2 id="merkle-tree"><a class="markdownIt-Anchor" href="#merkle-tree"></a> Merkle Tree</h2><p>默克尔树</p><p>由每个区块包含的交易构建</p><p>merkle proof</p><h2 id="block-header-block-body"><a class="markdownIt-Anchor" href="#block-header-block-body"></a> block header + block body</h2><p>block header：</p><ul><li><p>version</p></li><li><p>hash of previous block header 只取块头哈希</p></li><li><p>merkle root hash 存储了和当前区块交易所有相关区块的根哈希值</p></li><li><p>target</p></li><li><p>nonce</p></li></ul><p>blcok body：</p><ul><li>交易列表</li></ul><p><strong>问题</strong>：只保存了header的轻节点如何验证一笔交易是否写入了区块链中？</p><p><img src="/2021/12/04/%E5%8C%97%E5%A4%A7%E8%82%96%E8%87%BB%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/image-20211125141800039.png" alt="image-20211125141800039"></p><blockquote><p>只要验证当前交易所在的分支，就可以证明交易tx的存在，这称之为proof of membership/inclusion</p><p>那么如何验证某个交易不存在呢？这需要获取整棵树挨个计算。更好的方案是用叶子结点按哈希值排好序。</p></blockquote><h2 id="全节点和轻节点"><a class="markdownIt-Anchor" href="#全节点和轻节点"></a> 全节点和轻节点</h2><p><strong>fully validationg node</strong></p><p><img src="/2021/12/04/%E5%8C%97%E5%A4%A7%E8%82%96%E8%87%BB%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/image-20211126112329965.png" alt=""></p><p><strong>light node</strong></p><p><img src="/2021/12/04/%E5%8C%97%E5%A4%A7%E8%82%96%E8%87%BB%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/image-20211126112314323.png" alt=""></p><h1 id="btc-协议"><a class="markdownIt-Anchor" href="#btc-协议"></a> BTC-协议</h1><p>double spending attack: 一张数字货币很容易通过复制操作变两张</p><p><img src="/2021/12/04/%E5%8C%97%E5%A4%A7%E8%82%96%E8%87%BB%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/image-20211125193750904.png" alt=""></p><p><strong>问题</strong>：B的同伙B’知道A的公钥/地址，为什么不能冒充A</p><ol><li>一方面，B’如果用自己的公钥作为输入，并声明这是A的公钥。这一公钥和其来源，即A收款的输出，即A的地址，对不上</li><li>另一方面，B’如果用A的公钥作为输入，别人会用这个去解密。但你不知道A的私钥，不能用A的私钥签名，别人用A的公钥解密的时候出错</li></ol><blockquote><p>交易的输入：币的来源交易的输出+付款人的公钥</p><p>交易的输出：收款人的地址</p></blockquote><h2 id="分布式共识"><a class="markdownIt-Anchor" href="#分布式共识"></a> 分布式共识</h2><blockquote><p>membership机制：筛选优质会员参与 比如hyperledger 联盟链</p></blockquote><blockquote><p>如果仅仅采用投票机制，sybil attack 机器产生大量账户投票</p></blockquote><ol><li>BTC的共识：算出nonce的节点获得记账权</li></ol><p>​获得记账权的好处：</p><ul><li>出块奖励 block reward  挖出新区块的将获得铸币</li><li>帮别人记账的交易费 transaction fee</li></ul><p>​mining miner</p><ol start="2"><li>longest valid chain</li></ol><h1 id="btc-实现"><a class="markdownIt-Anchor" href="#btc-实现"></a> BTC-实现</h1><p>UTXO: unspent TX output</p><p><img src="/2021/12/04/%E5%8C%97%E5%A4%A7%E8%82%96%E8%87%BB%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/image-20211125211205209.png" alt=""></p><p>给定任何一个区块，计算当前所有的UXTO金额之和，等同于自创世区块到给定区块的挖矿奖励之和。</p><p>在钱包程序中，钱包管理的是一组私钥，对应的是一组公钥和地址。钱包程序必须从创世区块开始扫描每一笔交易，如果：</p><ol><li>遇到某笔交易的某个Output是钱包管理的地址之一，则钱包余额增加；</li><li>遇到某笔交易的某个Input是钱包管理的地址之一，则钱包余额减少。</li></ol><p>UXTO是存储在本地的，其正确性由遍历整个区块链验证</p><p><strong>transaction-based ledger</strong></p><p>irrevocable ledger不可篡改交易</p><h2 id="zero-confirmation-six-confirmation"><a class="markdownIt-Anchor" href="#zero-confirmation-six-confirmation"></a> zero-confirmation &amp; six-confirmation</h2><p>需要回滚某笔交易，在该比交易所在区块的前一个区块开始分叉，只要比原链更长即可</p><p>所以电商需要等待六个区块，使得分叉攻击几乎不可能</p><p>零确认指的是还未挖出新区块，电商自行验证签名和UXTO后确认收款：</p><ul><li>比特币网络中诚实的节点只会接收最早的交易</li><li>发货还需要时间，发现用户回滚交易就不发货。这时候这笔交易后的区块已经很多了</li></ul><h2 id="selfish-mining"><a class="markdownIt-Anchor" href="#selfish-mining"></a> selfish mining</h2><p>挖出区块但不立刻发布有什么好处？</p><p>如果比其他人快一步，别人的算力都浪费在竞争前一个区块上</p><p>但如果运气不好被别人赶上了，自己的算力都浪费了</p><h1 id="btc-网络"><a class="markdownIt-Anchor" href="#btc-网络"></a> BTC-网络</h1><p>appication layer: BitCoin Block chain</p><p>network layer: P2P Overlay Network</p><p>simple, robust, but not efficient</p><p>flooding的方式消息传播 best effort</p><h1 id="btc-挖矿"><a class="markdownIt-Anchor" href="#btc-挖矿"></a> BTC-挖矿</h1><p>调整nonce 4bytes输入空间不够，可能全部尝试了还是到不了target</p><p>所以实际计算还有coinbase交易的coinbase field可以调整，这将影响header里的merkle tree root</p><p><strong>问题</strong>：矿主是如何避免矿工挖到区块自行发布，同时又获得almost valid block的奖励？</p><p><strong>解决</strong>：coinbase的收款地址必须是矿主</p><ul><li><p>这保证了挖出来的奖励只能给矿主。如果填自己的那就没人一起挖，就和矿池没关系了。</p></li><li><p>矿工提交的almost valid block一定是填了矿主的地址。如果他填了自己的地址，也就是不按照矿主发给他的挖，那矿主那边验证不通过，他就拿不到部分奖励。</p></li></ul><h2 id="矿池的优劣"><a class="markdownIt-Anchor" href="#矿池的优劣"></a> 矿池的优劣</h2><p>好处：能让矿工的收入稳定</p><p>坏处：会导致51%攻击，比如回滚和联合抵制（boycott）</p><h1 id="btc-分叉"><a class="markdownIt-Anchor" href="#btc-分叉"></a> BTC-分叉</h1><p>state fork: 随时会产生的</p><ul><li>forking attack or deliberate fork</li></ul><p>protocol fork: 软件/协议升级产生的</p><ul><li>hard fork:新版本认可老版本<ul><li>旧节点不更新软件，那么他将永远无法认可新版本的区块，即使含有新版本的链更长。社区会产生分裂，从而产生两种币</li><li>更新软件的新节点仍然认可老版本的区块，按照最长链原则</li><li>防范重放攻击，带chain ID</li></ul></li><li>soft fork： 新版本不兼容老版本<ul><li>新版本节点掌握大多数算力，老版本节点被迫更新</li></ul></li></ul><h1 id="btc-匿名性-anonymity"><a class="markdownIt-Anchor" href="#btc-匿名性-anonymity"></a> BTC-匿名性 anonymity</h1><p>pseudonymity 别名</p><p><strong>问题</strong>：不同的地址如何关联在一起？</p><ul><li><p>一笔交易如果你的某个地址余额不足，可以有多个输入，多个输入是同一个人</p></li><li><p>一笔交易如果有多个输出，一个是商家收款地址，另一个多出来的找零给自己的新地址</p></li></ul><p><strong>解决</strong>：零币和零钞</p><p><strong>问题</strong>：什么情况能对应现实中的某人？</p><ul><li>大额兑现法币，或者用法币买入</li><li>比特币线下支付，消费记录人人可查</li></ul><p>silk road 黑店</p><h2 id="提高匿名性"><a class="markdownIt-Anchor" href="#提高匿名性"></a> 提高匿名性</h2><p>应用层:</p><ul><li>coin mixing</li></ul><p>网络层:</p><ul><li>TOR 洋葱路由</li></ul><h2 id="zero-knowledge-proof"><a class="markdownIt-Anchor" href="#zero-knowledge-proof"></a> Zero-knowledge proof</h2><p>A 向 B 证明一个陈述是正确的，而不必透露正确之外的内容。</p><p><img src="/2021/12/04/%E5%8C%97%E5%A4%A7%E8%82%96%E8%87%BB%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/image-20211126183519831.png" alt=""></p><h1 id="ethereum-以太坊"><a class="markdownIt-Anchor" href="#ethereum-以太坊"></a> Ethereum 以太坊</h1><p>ETH最小单位wei</p><p>创始人 Vitalik</p><ol><li>出块时间</li><li>基于ghost协议的共识机制</li><li>memory hard mining puzzle 计算密集型</li><li>pow -&gt; proof of stake</li><li>智能合约，记录历史状态，为了支持智能合约的回滚</li></ol><h2 id="账户"><a class="markdownIt-Anchor" href="#账户"></a> 账户</h2><ol><li><p>externally owned account</p><ol><li>balance余额</li><li>nonce 其实是counter，记录该账户交易次数，用来避免重放攻击</li></ol></li><li><p>smart contract account</p><ol><li>code</li><li>storage</li></ol></li></ol><h2 id="状态树-交易树-收据树"><a class="markdownIt-Anchor" href="#状态树-交易树-收据树"></a> 状态树、交易树、收据树</h2><p>modified Merkle Patricia trie</p><p>recursive length profix</p><p><img src="/2021/12/04/%E5%8C%97%E5%A4%A7%E8%82%96%E8%87%BB%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/image-20211127122117738.png" alt=""></p><h2 id="ghost"><a class="markdownIt-Anchor" href="#ghost"></a> GHOST</h2><p>叔父区块 7/8*3</p><p>叔父区块最多有两个</p><p>最长合法链如果包含叔链的交易，那么总共会获得2*1/32*3+3</p><p>最多6代 7/8～2/8</p><h2 id="权益证明"><a class="markdownIt-Anchor" href="#权益证明"></a> 权益证明</h2><p>虚拟挖矿</p><p>pow的系统不是一个闭环，刚诞生的会面临AltCoin Infanticide，也就是外界的美元通过挖矿转化成币，从而让这一币种的价格暴跌</p><p>pos系统是一个闭环，挖矿难度由持有的币决定</p><p>以太坊中准备使用Casper the Friendly Finality Gadget</p><ol><li>对某个epoch是否是finality用保证金进行两轮投票</li><li>对验证者进行奖励和处罚，发现对两条链下注的就没收保证金</li></ol><h2 id="智能合约"><a class="markdownIt-Anchor" href="#智能合约"></a> 智能合约</h2><p>solidity</p><p><img src="/2021/12/04/%E5%8C%97%E5%A4%A7%E8%82%96%E8%87%BB%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/image-20211127161431761.png" alt=""></p><blockquote><p>不支持hash表遍历，用一个数组保存</p><p>hash表所有值初始为0</p><p>不支持多线程</p></blockquote><p><img src="/2021/12/04/%E5%8C%97%E5%A4%A7%E8%82%96%E8%87%BB%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/image-20211127163017087.png" alt=""></p><p><img src="/2021/12/04/%E5%8C%97%E5%A4%A7%E8%82%96%E8%87%BB%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/image-20211127163621440.png" alt=""></p><p><strong>问题</strong>：以太坊中所有全节点都要在本地回滚自己的三棵树，并独立验证别人新发布的区块的正确性，这样得不到任何好处。他们不去验证直接认为某个新区块是正确的怎么办？</p><p><strong>解决</strong>：本地必须保证三棵树的正确性才能继续往下挖，所以一定会更新</p><p><img src="/2021/12/04/%E5%8C%97%E5%A4%A7%E8%82%96%E8%87%BB%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/image-20211127213749740.png" alt=""></p><h2 id="拍卖auction"><a class="markdownIt-Anchor" href="#拍卖auction"></a> 拍卖auction</h2><p><img src="/2021/12/04/%E5%8C%97%E5%A4%A7%E8%82%96%E8%87%BB%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%BA%94%E7%94%A8/image-20211127214840557.png" alt=""></p><p>code is law</p><p>irrecocable trust不可撤消的信托</p><p>智能合约一定要反复测试再发布</p><p>Irrevocability is a double edged sword.</p><p>Nothing is irrevocable.</p><h2 id="dao-decentralized-autonomous-organization"><a class="markdownIt-Anchor" href="#dao-decentralized-autonomous-organization"></a> DAO-decentralized autonomous organization</h2><p>The DAO 众筹的智能合约</p><p>too big to fail</p><p>硬分叉之后，旧链改名为ETC，新链沿用ETH</p><h2 id="反思"><a class="markdownIt-Anchor" href="#反思"></a> 反思</h2><ol><li><p>Is solidity the right programming language?</p></li><li><p>formal verification 是否应该研究？能否实现？</p></li><li><p>专门的模板和编写机构</p></li><li><p>开源也会存在安全漏洞，many eyeball fallacy虽然看的人很多，但看懂的很少，都以为别人看过</p></li><li><p>规则修改用去中心化的方法完成</p></li><li><p>在互不信任的实体建立共识才需要智能合约，其他分布式场景用不到</p></li></ol><h1 id="应用-2"><a class="markdownIt-Anchor" href="#应用-2"></a> 应用</h1><p>不是哪都能用，不应该和已有的支付方式竞争</p><ol><li>Information can flow freely on the Internet, but payment cannot.</li><li>民主不是最好的方案，只是最不坏的方案</li></ol>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blockchain </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A Peek Into the Reasoning of Neural Networks Interpreting with Structural Visual Concepts</title>
      <link href="/2021/11/15/A-Peek-Into-the-Reasoning-of-Neural-Networks-Interpreting-with-Structural-Visual-Concepts/"/>
      <url>/2021/11/15/A-Peek-Into-the-Reasoning-of-Neural-Networks-Interpreting-with-Structural-Visual-Concepts/</url>
      
        <content type="html"><![CDATA[<blockquote><p>#CVPR2021<br>难度：⭐<br>文章地址：<a href="https://arxiv.org/abs/2105.00290">https://arxiv.org/abs/2105.00290</a><br>PPT：<a href="https://www.youtube.com/watch?v=ZzkpUrK-cRA">https://www.youtube.com/watch?v=ZzkpUrK-cRA</a><br>code: <a href="https://github.com/gyhandy/Visual-Reasoning-eXplanation">https://github.com/gyhandy/Visual-Reasoning-eXplanation</a></p></blockquote><h1 id="idea"><a class="markdownIt-Anchor" href="#idea"></a> Idea</h1><p>框架名：VRX, visual reasoning explanation</p><ol><li>提取比特征更高阶的：视觉概念</li><li>按概念之间的关系组成有向有权图</li><li>用 GNN 聚合图结构信息，给出为什么这样预测和为什么不预测成别的标签的解释</li><li>副产品：可以给出预测错误的原因</li></ol><h1 id="framework"><a class="markdownIt-Anchor" href="#framework"></a> Framework</h1><p><img src="/2021/11/15/A-Peek-Into-the-Reasoning-of-Neural-Networks-Interpreting-with-Structural-Visual-Concepts/image-20211110153323457.png" alt=""></p><ol><li>VCE (Visual Concept Extractor) : Grad-Cam 的 attention map 过滤背景，用 ACE (SLIC 分割 -&gt; patch resize -&gt; patch2vec -&gt; 聚类 -&gt; TCAV) 得到最重要的四个视觉概念</li><li>SCG (Structural Concept Graph) : 按照人脑的思维方式，四个概念的空间相对关系应该是确定的。对四个视觉概念按空间结构构图。</li><li>GRN (Graph Reasoning Network) : 传统的卷积+全连接的模型已经能达到 80%以上的正确率。但是全连接部分很难解耦，信息流动不透明，这部分难以解释；GRN 由图卷积和一个简单的 MLP 组成；用知识蒸馏使得 GRN 和原模型决策一致；因为 GRN 是解耦的、易追踪的、可解释的模型，那么就可以用 GRN 以及之前的 VCE 和 SCG 来解释传统的 CNN 模型。</li><li>VDI (Visual Decision Interpreter) : 该研究提出了基于梯度的贡献度分配算法，为每个参与决策的点（视觉概念）和边（概念之间的关系）计算其对于特定决策的贡献值，贡献值的高低代表了其肯定还是否定了该决策。</li></ol><h1 id="details"><a class="markdownIt-Anchor" href="#details"></a> Details</h1><ol><li><p>SCG: 节点表示最重要的四个视觉概念，检测不足四个，则用黑色的节点补满。边是有向有权的，由空间距离和依赖系数组成，后者是可训练参数，作者认为这个参数能在训练完成后揭示概念之间的隐含关系。</p><blockquote><p>SCG 是如何部分删减的？原图中写的是选择重要的边，文中找不到，个人认为是根据计算完成后的权重离 0 的距离选的</p></blockquote></li><li><p>训练中，所有类别的结构概念图共享一套图卷积的参数，但是每个类别在消息传递中有专属的注意力权重参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mrow><mi>j</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">e_{ji}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，类别专属的注意力权重参数是为了学习每个类别独特的视觉概念之间的空间和依赖关系。</p></li><li><p>为了提升模拟的鲁棒性，该研究还用 <strong>mask out 视觉概念添加扰动</strong>的方法使得概念图推理网络与被解释的原网络在面对扰动时决策一致。</p></li></ol><h1 id="实验"><a class="markdownIt-Anchor" href="#实验"></a> 实验</h1><ol><li><p>研究者用 VRX 对错误原因背后推理逻辑的解释作为修改建议，通过<strong>视觉概念（节点）的替换和删除</strong>，以及<strong>空间关系（边）的多样性扩充</strong>，原网络的错分可以被纠正。最终，VRX 将其错误总结为三种类别：</p><p><img src="/2021/11/15/A-Peek-Into-the-Reasoning-of-Neural-Networks-Interpreting-with-Structural-Visual-Concepts/image-20211110185737339.png" alt=""></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> paper-reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CV </tag>
            
            <tag> GNN </tag>
            
            <tag> Interpretability </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GAN初识</title>
      <link href="/2021/11/02/GAN%E5%88%9D%E8%AF%86/"/>
      <url>/2021/11/02/GAN%E5%88%9D%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h1><p>生成对抗网络，Generative Adversarial Network (GAN) , 发明于2014年，是一种无监督学习的方法。最初的GAN由一个生成器和一个判别器组成：生成器把噪声作为输入，尽可能生成以假乱真的样本；判别器以真实样本和生成样本作为输入，输出样本真假判断的结果。最终能从训练好的生成器中输出高质量的，甚至超过真实样本的结果。生成器学习到的是鉴别器认同的数据的分布，如果从某个通常的隐空间（标准正态分布）冷启动，那么它学习的是分布变换的过程。</p><blockquote><p>Goodfellow, Ian J.; Pouget-Abadie, Jean; Mirza, Mehdi; Xu, Bing; Warde-Farley, David; Ozair, Sherjil; Courville, Aaron; Bengio, Yoshua. Generative Adversarial Networks. 2014. <a href="https://arxiv.org/abs/1406.2661">arXiv:1406.2661</a></p></blockquote><p><img src="/2021/11/02/GAN%E5%88%9D%E8%AF%86/2019-07-15-124947.jpg" alt="MNIST手写数字+ GAN架构"></p><h1 id="目标函数"><a class="markdownIt-Anchor" href="#目标函数"></a> 目标函数</h1><p><img src="/2021/11/02/GAN%E5%88%9D%E8%AF%86/image-20211204155049112.png" alt=""></p><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><p>最基础的GAN实现</p><pre class="highlight"><code class="python"><span class="hljs-comment"># Ubuntu 16.04</span><span class="hljs-comment"># tensorflow 2.5, CUDA 11.2</span><span class="hljs-keyword">import</span> tensorflow <span class="hljs-keyword">as</span> tf<span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<span class="hljs-keyword">import</span> PIL<span class="hljs-keyword">import</span> time<span class="hljs-keyword">import</span> os<span class="hljs-keyword">from</span> tensorflow.keras <span class="hljs-keyword">import</span> layers(train_images, train_labels), (_, _) = tf.keras.datasets.mnist.load_data()<span class="hljs-comment"># 加了一维:通道数=1</span>train_images = train_images.reshape(train_images.shape[<span class="hljs-number">0</span>], <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">1</span>).astype(<span class="hljs-string">'float'</span>)train_images = (train_images - <span class="hljs-number">127.5</span>) / <span class="hljs-number">127.5</span>BUFFER_SIZE = <span class="hljs-number">60000</span>BATCH_SIZE = <span class="hljs-number">256</span>EPOCHS = <span class="hljs-number">50</span>noise_dim = <span class="hljs-number">100</span>num_examples_to_generate = <span class="hljs-number">16</span>train_dataset = tf.data.Dataset.from_tensor_slices(train_images).shuffle(BUFFER_SIZE).batch(BATCH_SIZE)<span class="hljs-comment"># 生成器，输入N*100</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">make_generator_model</span>():    model = tf.keras.Sequential()    model.add(layers.Dense(<span class="hljs-number">7</span> * <span class="hljs-number">7</span> * <span class="hljs-number">256</span>, use_bias=<span class="hljs-literal">False</span>, input_shape=(<span class="hljs-number">100</span>,)))    model.add(layers.BatchNormalization())    model.add(layers.LeakyReLU())    model.add(layers.Reshape((<span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">256</span>)))    <span class="hljs-keyword">assert</span> model.output_shape == (<span class="hljs-literal">None</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">256</span>)    model.add(layers.Conv2DTranspose(<span class="hljs-number">128</span>, (<span class="hljs-number">5</span>, <span class="hljs-number">5</span>), strides=(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>), padding=<span class="hljs-string">'same'</span>, use_bias=<span class="hljs-literal">False</span>))    <span class="hljs-keyword">assert</span> model.output_shape == (<span class="hljs-literal">None</span>, <span class="hljs-number">7</span>, <span class="hljs-number">7</span>, <span class="hljs-number">128</span>)    model.add(layers.BatchNormalization())    model.add(layers.LeakyReLU())    model.add(layers.Conv2DTranspose(<span class="hljs-number">64</span>, (<span class="hljs-number">5</span>, <span class="hljs-number">5</span>), strides=(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>), padding=<span class="hljs-string">'same'</span>, use_bias=<span class="hljs-literal">False</span>))    <span class="hljs-keyword">assert</span> model.output_shape == (<span class="hljs-literal">None</span>, <span class="hljs-number">14</span>, <span class="hljs-number">14</span>, <span class="hljs-number">64</span>)    model.add(layers.BatchNormalization())    model.add(layers.LeakyReLU())    model.add(layers.Conv2DTranspose(<span class="hljs-number">1</span>, (<span class="hljs-number">5</span>, <span class="hljs-number">5</span>), strides=(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>), padding=<span class="hljs-string">'same'</span>, use_bias=<span class="hljs-literal">False</span>, activation=<span class="hljs-string">'tanh'</span>))    <span class="hljs-keyword">assert</span> model.output_shape == (<span class="hljs-literal">None</span>, <span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">1</span>)    <span class="hljs-keyword">return</span> modelgenerator = make_generator_model()<span class="hljs-comment"># generate 1*100 normal distribution</span><span class="hljs-comment"># noise = tf.random.normal([1, 100])</span><span class="hljs-comment"># generated_image = generator(noise, training=False)</span><span class="hljs-comment"># discriminator,input N*28*28*1</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">make_discriminator_model</span>():    model = tf.keras.Sequential()    model.add(layers.Conv2D(<span class="hljs-number">64</span>, (<span class="hljs-number">5</span>, <span class="hljs-number">5</span>), strides=(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>), padding=<span class="hljs-string">'same'</span>,                            input_shape=[<span class="hljs-number">28</span>, <span class="hljs-number">28</span>, <span class="hljs-number">1</span>]))    model.add(layers.LeakyReLU())    model.add(layers.Dropout(<span class="hljs-number">0.3</span>))    model.add(layers.Conv2D(<span class="hljs-number">128</span>, (<span class="hljs-number">5</span>, <span class="hljs-number">5</span>), strides=(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>), padding=<span class="hljs-string">'same'</span>))    model.add(layers.LeakyReLU())    model.add(layers.Dropout(<span class="hljs-number">0.3</span>))    model.add(layers.Flatten())    model.add(layers.Dense(<span class="hljs-number">1</span>))    <span class="hljs-keyword">return</span> modeldiscriminator = make_discriminator_model()cross_entropy = tf.keras.losses.BinaryCrossentropy(from_logits=<span class="hljs-literal">True</span>)<span class="hljs-comment"># the more ones in real_output and zeros in fake_output, the better the discriminator is</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">discriminator_loss</span>(<span class="hljs-params">real_output, fake_output</span>):    real_loss = cross_entropy(tf.ones_like(real_output), real_output)    fake_loss = cross_entropy(tf.zeros_like(fake_output), fake_output)    total_loss = real_loss + fake_loss    <span class="hljs-keyword">return</span> total_loss<span class="hljs-comment"># the more zeros in fake_output, the worse generator is</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">generator_loss</span>(<span class="hljs-params">fake_output</span>):    <span class="hljs-keyword">return</span> cross_entropy(tf.ones_like(fake_output), fake_output)<span class="hljs-comment"># same learning rate</span>generator_optimizer = tf.keras.optimizers.Adam(<span class="hljs-number">1e-4</span>)discriminator_optimizer = tf.keras.optimizers.Adam(<span class="hljs-number">1e-4</span>)<span class="hljs-meta">@tf.function</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">train_step</span>(<span class="hljs-params">images</span>):    noise = tf.random.normal([BATCH_SIZE, noise_dim])    <span class="hljs-keyword">with</span> tf.GradientTape() <span class="hljs-keyword">as</span> gen_tape, tf.GradientTape() <span class="hljs-keyword">as</span> disc_tape:        generated_images = generator(noise, training=<span class="hljs-literal">True</span>)        real_output = discriminator(images, training=<span class="hljs-literal">True</span>)        fake_output = discriminator(generated_images, training=<span class="hljs-literal">True</span>)        gen_loss = generator_loss(fake_output)        disc_loss = discriminator_loss(real_output, fake_output)    gradients_of_generator = gen_tape.gradient(gen_loss, generator.trainable_variables)    gradients_of_discriminator = disc_tape.gradient(disc_loss, discriminator.trainable_variables)    generator_optimizer.apply_gradients(<span class="hljs-built_in">zip</span>(gradients_of_generator, generator.trainable_variables))    discriminator_optimizer.apply_gradients(<span class="hljs-built_in">zip</span>(gradients_of_discriminator, discriminator.trainable_variables))checkpoint_dir = <span class="hljs-string">'./training_checkpoints'</span>checkpoint_prefix = os.path.join(checkpoint_dir, <span class="hljs-string">"ckpt"</span>)checkpoint = tf.train.Checkpoint(generator_optimizer=generator_optimizer,                                 discriminator_optimizer=discriminator_optimizer,                                 generator=generator,                                 discriminator=discriminator)seed = tf.random.normal([num_examples_to_generate, noise_dim])<span class="hljs-comment"># for every epochs, for every batch, 256 real image + 256 fake image</span><span class="hljs-comment"># after one epochs, generate 16 fake image to show the growth of generator</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">train</span>(<span class="hljs-params">dataset, epochs</span>):    <span class="hljs-keyword">for</span> epoch <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(epochs):        start = time.time()        <span class="hljs-keyword">for</span> image_batch <span class="hljs-keyword">in</span> dataset:            train_step(image_batch)        generate_and_save_images(generator,                                 epoch + <span class="hljs-number">1</span>,                                 seed)        <span class="hljs-comment"># Save the model every 15 epochs</span>        <span class="hljs-keyword">if</span> (epoch + <span class="hljs-number">1</span>) % <span class="hljs-number">15</span> == <span class="hljs-number">0</span>:            checkpoint.save(file_prefix=checkpoint_prefix)        <span class="hljs-built_in">print</span>(<span class="hljs-string">'Time for epoch {} is {} sec'</span>.<span class="hljs-built_in">format</span>(epoch + <span class="hljs-number">1</span>, time.time() - start))    <span class="hljs-comment"># Generate after the final epoch</span>    generate_and_save_images(generator,                             epochs,                             seed)<span class="hljs-keyword">def</span> <span class="hljs-title function_">generate_and_save_images</span>(<span class="hljs-params">model, epoch, test_input</span>):    predictions = model(test_input, training=<span class="hljs-literal">False</span>)    fig = plt.figure(figsize=(<span class="hljs-number">4</span>, <span class="hljs-number">4</span>))    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(predictions.shape[<span class="hljs-number">0</span>]):        plt.subplot(<span class="hljs-number">4</span>, <span class="hljs-number">4</span>, i + <span class="hljs-number">1</span>)        plt.imshow(predictions[i, :, :, <span class="hljs-number">0</span>] * <span class="hljs-number">127.5</span> + <span class="hljs-number">127.5</span>, cmap=<span class="hljs-string">'gray'</span>)        plt.axis(<span class="hljs-string">'off'</span>)    plt.savefig(<span class="hljs-string">'image_at_epoch_{:04d}.png'</span>.<span class="hljs-built_in">format</span>(epoch))<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:    train(train_dataset,EPOCHS)</code></pre><p><a href="https://www.tensorflow.org/tutorials/generative/dcgan?hl=zh-cn">代码参考</a></p><h1 id="改进"><a class="markdownIt-Anchor" href="#改进"></a> 改进</h1><h2 id="模型结构"><a class="markdownIt-Anchor" href="#模型结构"></a> 模型结构</h2><ul><li><p>DCGAN 去掉池化层、全连接层，使用BN层</p></li><li><p>PGAN 能处理1024*1024的图片</p></li><li><p>SAGAN 加入自注意力机制</p><p><a href="https://www.paperweekly.site/papers/notes/414">SAGAN论文解读</a></p></li><li><p>StyleGAN 生成器各层都输入噪声，噪声由多个全连接层生成</p><p><a href="https://zhuanlan.zhihu.com/p/263554045">StyleGAN 和 StyleGAN2 的深度理解</a></p></li><li><p>BigGAN <img src="/2021/11/02/GAN%E5%88%9D%E8%AF%86/v2-914466c51bb79895c857360a33be982b_720w.jpg" alt=""></p><blockquote><p>噪声向量 z 的块和条件标签 c 在残差块下是通过 concat 操作后送入 BatchNorm 层</p></blockquote><ul><li>发现增大 batchsize 能提高生成效果</li><li>对先验分布 z 设置阈值来对样本<strong>多样性</strong>和<strong>保真度</strong>进行控制</li></ul><p><a href="https://zhuanlan.zhihu.com/p/46581611">深度解读DeepMind新作：史上最强GAN图像生成器—BigGAN</a></p></li><li><p>U-Net 判别器输出全局和局部像素决策</p><p><a href="https://blog.csdn.net/u014546828/article/details/111244358">MyDLNote-Network: 2020 CVPR 基于 U-Net 判别器的生成对抗网络 A U-Net Based Discriminator for Generative Adversari</a></p></li><li><p>multi-modal</p></li></ul><p><img src="/2021/11/02/GAN%E5%88%9D%E8%AF%86/image-20211101163841571.png" alt=""></p><h2 id="条件输入"><a class="markdownIt-Anchor" href="#条件输入"></a> 条件输入</h2><ul><li><p>原始的 GAN 基于噪声作为生成器的输入，一次生成所有类别的图像，无法生成指定图像。</p></li><li><p>CGAN 将类别标签和噪声拼接输入生成器</p></li><li><p>ACGAN 判别器输出真假和类别</p></li><li><p>CGAN with Projection Discriminator 判别器的中间feature和条件信息进行点乘</p></li></ul><h2 id="正则化方法"><a class="markdownIt-Anchor" href="#正则化方法"></a> 正则化方法</h2><ul><li>BN -&gt; Pixelwise Normalization/equalized learning rate -&gt; Spectral Normalization -&gt; Wasserstein Distance</li></ul><h2 id="数据增强"><a class="markdownIt-Anchor" href="#数据增强"></a> 数据增强</h2><ul><li><p>stochastic discriminator augmentation</p></li><li><p>Adaptive discriminator augmentation</p></li></ul><h1 id="应用"><a class="markdownIt-Anchor" href="#应用"></a> 应用</h1><ul><li><p>分类：CatGAN</p></li><li><p>生成：风格迁移、去雨去雾、去马赛克、超分辨率、虚拟换衣、换脸、表情、年龄、妆容迁移</p></li><li><p>生成人脸解决数据来源的隐私问题</p></li><li><p>生成图片用于数据增强</p></li></ul><h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1><p><a href="https://mp.weixin.qq.com/s?__biz=MzU5MTgzNzE0MA==&amp;mid=2247483674&amp;idx=1&amp;sn=4370e8bb00f456bd1f3ad09e4adb7c56&amp;scene=21#wechat_redirect">GAN整整6年了！是时候要来捋捋了！</a></p>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GAN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>muxViz 使用指南</title>
      <link href="/2021/10/18/muxViz-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
      <url>/2021/10/18/muxViz-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h1><ol><li>安装R-studio、R</li><li>muxViz-3.1（无GUI）：<a href="https://github.com/manlius/muxViz">https://github.com/manlius/muxViz</a></li><li>muxViz-2.0（GUI）：<a href="https://github.com/wjj0301/Multiplex-Networks">https://github.com/wjj0301/Multiplex-Networks</a></li></ol><h1 id="输入数据格式"><a class="markdownIt-Anchor" href="#输入数据格式"></a> 输入数据格式</h1><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">config.txt</span>path_multilayer; path_to_layers_info; path_to_layers_layout<span class="hljs-meta prompt_"># </span><span class="language-bash">或者每层对应一个文件</span>path_layer_X; label_layer_X; path_to_layout_layer_X...</code></pre><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">layers.txt</span><span class="hljs-meta prompt_"># </span><span class="language-bash">层信息</span>layerID layerLabel1 L12 L23 L3...</code></pre><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">.edges</span><span class="hljs-meta prompt_"># </span><span class="language-bash">层内连边关系，无headline</span><span class="hljs-meta prompt_"># </span><span class="language-bash">依次为 源节点ID、层ID、目标节点ID、层ID、边权值</span>1 1 53 1 3                                                                     2 1 94 1 42 1 165 1 7...<span class="hljs-meta prompt_"># </span><span class="language-bash">层间连边关系，对于multiplex，节点ID相同</span>1 1 1 22 1 2 2...</code></pre><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">layout.txt</span><span class="hljs-meta prompt_"># </span><span class="language-bash">节点信息，可选，加入此文件后，edges文件nodeID可直接换成nodeLabel</span>nodeID nodeLabel1 n12 n23 n3...</code></pre><h2 id="时间轴文件格式"><a class="markdownIt-Anchor" href="#时间轴文件格式"></a> 时间轴文件格式</h2><p>这个模块允许在多层网络的顶部建立与动态过程相对应的动画，未尝识</p><h2 id="导入r"><a class="markdownIt-Anchor" href="#导入r"></a> 导入R</h2><pre class="highlight"><code class="R">buildMultilayerNetworkFromMuxvizFiles<span class="hljs-punctuation">(</span>  config.file<span class="hljs-punctuation">,</span>  isDirected<span class="hljs-punctuation">,</span>  isWeighted<span class="hljs-punctuation">,</span>  MultisliceType<span class="hljs-punctuation">,</span>  LayerCouplingStrength <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>  format <span class="hljs-operator">=</span> <span class="hljs-string">"muxviz edge-colored"</span><span class="hljs-punctuation">,</span> <span class="hljs-comment"># or "muxviz general"</span>  verbose <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span></code></pre><h1 id="可视化"><a class="markdownIt-Anchor" href="#可视化"></a> 可视化</h1><h2 id="调色板"><a class="markdownIt-Anchor" href="#调色板"></a> 调色板</h2><pre class="highlight"><code class="R">library<span class="hljs-punctuation">(</span>RColorBrewer<span class="hljs-punctuation">)</span>library<span class="hljs-punctuation">(</span>viridis<span class="hljs-punctuation">)</span></code></pre><h2 id="绘图"><a class="markdownIt-Anchor" href="#绘图"></a> 绘图</h2><pre class="highlight"><code class="R">library<span class="hljs-punctuation">(</span>muxViz<span class="hljs-punctuation">)</span>library<span class="hljs-punctuation">(</span>igraph<span class="hljs-punctuation">)</span>library<span class="hljs-punctuation">(</span>rgl<span class="hljs-punctuation">)</span>set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-comment"># Network setup</span>Layers <span class="hljs-operator">&lt;-</span> 3Nodes <span class="hljs-operator">&lt;-</span> 200layerCouplingStrength <span class="hljs-operator">&lt;-</span> 1networkOfLayersType <span class="hljs-operator">&lt;-</span> <span class="hljs-string">"categorical"</span>isDirected <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">F</span>layer.colors <span class="hljs-operator">&lt;-</span> brewer.pal<span class="hljs-punctuation">(</span><span class="hljs-number">8</span><span class="hljs-punctuation">,</span> <span class="hljs-string">"Set2"</span><span class="hljs-punctuation">)</span>pathInfomap <span class="hljs-operator">&lt;-</span> <span class="hljs-string">"infomap-0.x/Infomap"</span>nodeTensor <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span>g.list <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-comment"># 每层社团数</span>plantedGroupsPerLayer <span class="hljs-operator">&lt;-</span> 4<span class="hljs-comment"># matrix of the stochastic block model</span>block.matrix <span class="hljs-operator">&lt;-</span> matrix<span class="hljs-punctuation">(</span><span class="hljs-number">0.1</span> <span class="hljs-operator">/</span> Nodes<span class="hljs-punctuation">,</span> plantedGroupsPerLayer<span class="hljs-punctuation">,</span>                       plantedGroupsPerLayer<span class="hljs-punctuation">)</span>diag<span class="hljs-punctuation">(</span>block.matrix<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-number">2</span> <span class="hljs-operator">*</span> <span class="hljs-built_in">log</span><span class="hljs-punctuation">(</span>Nodes<span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> Nodes<span class="hljs-comment"># 总节点数平均分给四个社团</span>block.sizes <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">floor</span><span class="hljs-punctuation">(</span>Nodes <span class="hljs-operator">/</span> plantedGroupsPerLayer<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> plantedGroupsPerLayer<span class="hljs-punctuation">)</span><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>l <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span>Layers<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>  <span class="hljs-comment">#Generate the layers</span>  <span class="hljs-comment">#双中括号提取修改元素</span>  g.list<span class="hljs-punctuation">[[</span>l<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> sample_sbm<span class="hljs-punctuation">(</span>Nodes<span class="hljs-punctuation">,</span> pref.matrix<span class="hljs-operator">=</span>block.matrix<span class="hljs-punctuation">,</span>                            block.sizes<span class="hljs-operator">=</span>block.sizes<span class="hljs-punctuation">)</span>    <span class="hljs-comment">#Get the list of adjacency matrices which build the multiplex</span>  nodeTensor<span class="hljs-punctuation">[[</span>l<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> get.adjacency<span class="hljs-punctuation">(</span>g.list<span class="hljs-punctuation">[[</span>l<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span>  <span class="hljs-comment">#定义布局方式 "fr","drl", "auto", "kk", "comp", "dh"</span>  lay <span class="hljs-operator">&lt;-</span> layoutMultiplex<span class="hljs-punctuation">(</span>g.list<span class="hljs-punctuation">,</span> layout<span class="hljs-operator">=</span><span class="hljs-string">"fr"</span><span class="hljs-punctuation">,</span> ggplot.format<span class="hljs-operator">=</span><span class="hljs-built_in">F</span><span class="hljs-punctuation">,</span> box<span class="hljs-operator">=</span><span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span>    <span class="hljs-comment"># Show the multiplex network</span>  plot_multiplex3D<span class="hljs-punctuation">(</span>g.list<span class="hljs-punctuation">,</span> layer.layout<span class="hljs-operator">=</span>lay<span class="hljs-punctuation">,</span> layer.colors<span class="hljs-operator">=</span>layer.colors<span class="hljs-punctuation">,</span>                   layer.shift.x<span class="hljs-operator">=</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> layer.space<span class="hljs-operator">=</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span>                   layer.labels<span class="hljs-operator">=</span><span class="hljs-string">"auto"</span><span class="hljs-punctuation">,</span> layer.labels.cex<span class="hljs-operator">=</span><span class="hljs-number">1.5</span><span class="hljs-punctuation">,</span>                   node.size.values<span class="hljs-operator">=</span><span class="hljs-string">"auto"</span><span class="hljs-punctuation">,</span> node.size.scale<span class="hljs-operator">=</span><span class="hljs-number">0.8</span><span class="hljs-punctuation">,</span>                   show.aggregate<span class="hljs-operator">=</span><span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span>  <span class="hljs-comment"># 导出，有问题</span>  snapshot3d<span class="hljs-punctuation">(</span><span class="hljs-string">"../man/figures/multi_sbm.png"</span><span class="hljs-punctuation">,</span> fmt <span class="hljs-operator">=</span> <span class="hljs-string">"png"</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">1024</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">1024</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">}</span></code></pre><p><a href="https://manlius.github.io/muxViz/reference/plot_multiplex3D.html">https://manlius.github.io/muxViz/reference/plot_multiplex3D.html</a></p><h2 id="图像操作"><a class="markdownIt-Anchor" href="#图像操作"></a> 图像操作</h2><p>左键拖动整体旋转，右键按拖动方向改变各层散射角度，中键拖动缩放</p><h2 id="gui"><a class="markdownIt-Anchor" href="#gui"></a> GUI</h2><p>linux下有问题，win下操作</p><ul><li><p>multiplex 要画出层间连线只能用GUI，muxViz未提供接口，GUI源码仍然使用igraph，只能从sever.R中剥离此函数</p></li><li><p>GUI中给出不同节点或边指定颜色的接口，使用后闪退；可以按GUI的社团检测结果给出颜色</p></li><li><p>多层社团检测使用后闪退</p></li></ul><h2 id="导出"><a class="markdownIt-Anchor" href="#导出"></a> 导出</h2><p>win和linux下都有问题，建议直接截图</p><h1 id="图数据分析"><a class="markdownIt-Anchor" href="#图数据分析"></a> 图数据分析</h1><h2 id="单层指标"><a class="markdownIt-Anchor" href="#单层指标"></a> 单层指标</h2><h2 id="多层指标"><a class="markdownIt-Anchor" href="#多层指标"></a> 多层指标</h2>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
            <tag> interpretable </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>task workflow</title>
      <link href="/2021/10/14/task-workflow/"/>
      <url>/2021/10/14/task-workflow/</url>
      
        <content type="html"><![CDATA[<h1 id="taskwarrior-使用指南"><a class="markdownIt-Anchor" href="#taskwarrior-使用指南"></a> Taskwarrior 使用指南</h1><blockquote><p>Linux 命令行任务管理软件</p></blockquote><h1 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h1><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">Arch/Manjaro</span>sudo pacman -S tasksudo pacman -S taskwarrior-tui<span class="hljs-meta prompt_"># </span><span class="language-bash">~/.bashrc</span>alias tt="taskwarrior-tui"</code></pre><h1 id="开始第一个任务"><a class="markdownIt-Anchor" href="#开始第一个任务"></a> 开始第一个任务</h1><p>项目划分出任务，类似于其他软件的主任务和子任务，但taskwarrior里只能两层</p><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">尽量一条长语句说明</span>task add 任务名 project:项目名 due:eow <span class="hljs-meta prompt_"># </span><span class="language-bash">发现重现不了的bug</span>task ID delete Could not reproduce bug +cannot_reproduce</code></pre><h1 id="时间规划"><a class="markdownIt-Anchor" href="#时间规划"></a> 时间规划</h1><h2 id="时间属性"><a class="markdownIt-Anchor" href="#时间属性"></a> 时间属性</h2><pre class="highlight"><code class="shell">task add Send Alice a birthday card \           due:2016-11-08 \           scheduled:2016-11-04 \           wait:november           until:2016-11-10</code></pre><p>due: 任务完成的预计时间</p><p>scheduled: 任务开始的预计时间</p><p>wait: 任务在列表里出现的时间，<code>task list</code>会自动过滤，可以用<code>task waiting</code>查看</p><p>until: 任务自行销毁的时间</p><h2 id="时间格式"><a class="markdownIt-Anchor" href="#时间格式"></a> 时间格式</h2><p><strong>基本格式：YYYY-MM-DDThh:mm</strong></p><ul><li>可以YYYY-MM、YYYY-MM-DD、hh:mm</li><li>所有有歧义的都按最早的算</li><li>也可按时间跨度，3d、3h</li></ul><table><thead><tr><th>快捷命令</th><th>注释</th></tr></thead><tbody><tr><td><code>now</code></td><td>Current local date and time.</td></tr><tr><td><code>today</code></td><td>Current local date, with time 00:00:00.</td></tr><tr><td><code>sod</code></td><td>Local date of the start of the next day, with time 00:00:00. Same as <code>tomorrow</code>.</td></tr><tr><td><code>eod</code></td><td>Current local date, with time 23:59:59.</td></tr><tr><td><code>yesterday</code></td><td>Local date for yesterday, with time 00:00:00.</td></tr><tr><td><code>tomorrow</code></td><td>Local date for tomorrow, with time 00:00:00. Same as <code>sod</code>.</td></tr><tr><td><code>monday</code>, <code>tuesday</code> …</td><td>Local date for the specified day, after today, with time 00:00:00. Can be shortened, e.g. <code>mon</code>, <code>tue</code> <strong>2.6.0</strong> Can be capitalized, e.g. <code>Monday</code>, <code>Tue</code></td></tr><tr><td><code>january</code>, <code>february</code> …</td><td>Local date for the specified month, 1st day, with time 00:00:00. Can be shortened, e.g. <code>jan</code>, <code>feb</code>. <strong>2.6.0</strong> Can be capitalized, e.g. <code>January</code>, <code>Feb</code>.</td></tr><tr><td><code>later</code>, <code>someday</code></td><td>Local 2038-01-18, with time 00:00:00. A date far away, with semantically meaningful to GTD users.</td></tr><tr><td><code>soy</code></td><td>Local date for the next year, January 1st, with time 00:00:00.</td></tr><tr><td><code>eoy</code></td><td>Local date for this year, December 31st, with time 00:00:00.</td></tr><tr><td><code>soq</code></td><td>Local date for the start of the next quarter (January, April, July, October), 1st, with time 00:00:00.</td></tr><tr><td><code>eoq</code></td><td>Local date for the end of the current quarter (March, June, September, December), last day of the month, with time 23:59:59.</td></tr><tr><td><code>som</code></td><td>Local date for the 1st day of the next month, with time 00:00:00.</td></tr><tr><td><code>socm</code></td><td>Local date for the 1st day of the current month, with time 00:00:00.</td></tr><tr><td><code>eom</code>, <code>eocm</code></td><td>Local date for the last day of the current month, with time 23:59:59.</td></tr><tr><td><code>sow</code></td><td>Local date for the next Sunday, with time 00:00:00.</td></tr><tr><td><code>socw</code></td><td>Local date for the last Sunday, with time 00:00:00.</td></tr><tr><td><code>eow</code>, <code>eocw</code></td><td>Local date for the end of the week, Saturday night, with time 00:00:00.</td></tr><tr><td><code>soww</code></td><td>Local date for the start of the work week, next Monday, with time 00:00:00.</td></tr><tr><td><code>eoww</code></td><td>Local date for the end of the work week, Friday night, with time 23:59:59.</td></tr><tr><td><code>1st</code>, <code>2nd</code>, …</td><td>Local date for the next Nth day, with time 00:00:00.</td></tr></tbody></table><h1 id="urgency值"><a class="markdownIt-Anchor" href="#urgency值"></a> urgency值</h1><pre class="highlight"><code class="shell">urgency.user.tag.next.coefficient           15.0 # +next 标签urgency.due.coefficient                     12.0 # 过期或临近ddlurgency.blocking.coefficient                 8.0 # 阻塞其他任务urgency.uda.priority.H.coefficient           6.0 # 设为高优先级urgency.uda.priority.M.coefficient           3.9 # 设为中优先级urgency.uda.priority.L.coefficient           1.8 # 设为低优先级urgency.scheduled.coefficient                5.0 # 定了预定时间的任务urgency.active.coefficient                   4.0 # 激活的任务urgency.age.coefficient                      2.0 # 根据任务创建时间urgency.annotations.coefficient              1.0 # 添加了注释urgency.tags.coefficient                     1.0 # 添加了标签urgency.project.coefficient                  1.0 # 属于某个项目urgency.user.project.My Project.coefficient  5.0 # 属于高优先级的某个项目urgency.waiting.coefficient                 -3.0 # 等待中的任务urgency.blocked.coefficient                 -5.0 # 阻塞中的任务</code></pre><h1 id="上下文"><a class="markdownIt-Anchor" href="#上下文"></a> 上下文</h1><p>定义上下文，通过tag的代数表达式过滤任务</p><pre class="highlight"><code class="">task context define work +work or +freelancetask context define study +school or +homework or +labtask context define home -work -freelance -school -homework -lab</code></pre><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看已经创建的上下文</span>task context show<span class="hljs-meta prompt_"># </span><span class="language-bash">切换上下文</span>task context work</code></pre><h1 id="modify"><a class="markdownIt-Anchor" href="#modify"></a> modify</h1><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">设置依赖</span><span class="hljs-meta prompt_"># </span><span class="language-bash">79任务所依赖的78任务未完成，A任务状态为blocked</span>task 79 modify depends:78<span class="hljs-meta prompt_"># </span><span class="language-bash">删除某个属性</span>task 1 modify due:<span class="hljs-meta prompt_"># </span><span class="language-bash">修改描述</span>task ID modify ...<span class="hljs-meta prompt_"># </span><span class="language-bash">修改属性</span>task ID modify project:Hometask ID modify priority:Mtask ID modify +problem +house</code></pre><h1 id="过滤和虚拟标签"><a class="markdownIt-Anchor" href="#过滤和虚拟标签"></a> 过滤和虚拟标签</h1><p>通常用状态、所属项目、标签来过滤。</p><pre class="highlight"><code class="shell">status:pending and project:Home or -work</code></pre><p>要用时间来过滤，比如我们要过滤出今晚12:00前到期的任务。</p><pre class="highlight"><code class="shell">task due.after:yesterday and due.before:tomorrow list</code></pre><p>这样写很麻烦，2.2版本后加入了虚拟标签，请不要用自定义标签占用它们。</p><p>上面的过滤可以简化为</p><pre class="highlight"><code class="shell">task +TODAY list</code></pre><table><thead><tr><th>虚拟标签</th><th>注释</th></tr></thead><tbody><tr><td><code>BLOCKED</code></td><td>Is the task dependent on another incomplete task?</td></tr><tr><td><code>UNBLOCKED</code></td><td>The opposite of BLOCKED, for convenience. Note +BLOCKED == -UNBLOCKED and vice versa.</td></tr><tr><td><code>BLOCKING</code></td><td>Does another task depend on this incomplete task?</td></tr><tr><td><code>DUE</code></td><td>Is this task due within 7 days? Determined by rc.due</td></tr><tr><td><code>DUETODAY</code></td><td>Is this task due sometime today?</td></tr><tr><td><code>TODAY</code></td><td>Is this task due sometime today?</td></tr><tr><td><code>OVERDUE</code></td><td>Is this task past it’s due date?</td></tr><tr><td><code>WEEK</code></td><td>Is this task due this week? <strong>2.3.0</strong></td></tr><tr><td><code>MONTH</code></td><td>Is this task due this month? <strong>2.3.0</strong></td></tr><tr><td><code>QUARTER</code></td><td>Is this task due this quarter? <strong>2.6.0</strong></td></tr><tr><td><code>YEAR</code></td><td>Is this task due this year? <strong>2.3.0</strong></td></tr><tr><td><code>ACTIVE</code></td><td>Is the task active, ie does it have a start date?</td></tr><tr><td><code>SCHEDULED</code></td><td>Is the task scheduled, ie does it have a scheduled date?</td></tr><tr><td><code>PARENT</code></td><td>Is the task a hidden parent recurring task? <strong>2.3.0</strong></td></tr><tr><td><code>CHILD</code></td><td>Is the task a recurring child task?</td></tr><tr><td><code>UNTIL</code></td><td>Does the task expire, ie does it have an until date?</td></tr><tr><td><code>WAITING</code></td><td>Is the task hidden, ie does it have a wait date?</td></tr><tr><td><code>ANNOTATED</code></td><td>Does the task have any annotations?</td></tr><tr><td><code>READY</code></td><td>Is the task pending, not blocked, and either not scheduled, or scheduled before now. <strong>2.4.0</strong></td></tr><tr><td><code>YESTERDAY</code></td><td>Was the task due yesterday? <strong>2.4.0</strong></td></tr><tr><td><code>TOMORROW</code></td><td>Is the task due tomorrow? <strong>2.4.0</strong></td></tr><tr><td><code>TAGGED</code></td><td>Does the task have any tags?</td></tr><tr><td><code>PENDING</code></td><td>Is the task in the pending state? <strong>2.4.0</strong></td></tr><tr><td><code>COMPLETED</code></td><td>Is the task in the completed state? <strong>2.4.0</strong></td></tr><tr><td><code>DELETED</code></td><td>Is the task in the deleted state? <strong>2.4.0</strong></td></tr><tr><td><code>UDA</code></td><td>Does the task contain any UDA values? <strong>2.5.0</strong></td></tr><tr><td><code>ORPHAN</code></td><td>Does the task contain any orphaned UDA values? <strong>2.5.0</strong></td></tr><tr><td><code>PRIORITY</code></td><td>Does the task have a priority? <strong>2.5.0</strong></td></tr><tr><td><code>PROJECT</code></td><td>Does the task have a project? <strong>2.5.0</strong></td></tr><tr><td><code>LATEST</code></td><td>Is the task the most recently added task? <strong>2.5.0</strong></td></tr></tbody></table><h1 id="tt提供的快捷键"><a class="markdownIt-Anchor" href="#tt提供的快捷键"></a> tt提供的快捷键</h1><pre class="highlight"><code class="shell">uda.taskwarrior-tui.keyconfig.quit=quda.taskwarrior-tui.keyconfig.refresh=ruda.taskwarrior-tui.keyconfig.go-to-bottom=Guda.taskwarrior-tui.keyconfig.go-to-top=guda.taskwarrior-tui.keyconfig.down=juda.taskwarrior-tui.keyconfig.up=kuda.taskwarrior-tui.keyconfig.page-down=Juda.taskwarrior-tui.keyconfig.page-up=Kuda.taskwarrior-tui.keyconfig.delete=xuda.taskwarrior-tui.keyconfig.done=duda.taskwarrior-tui.keyconfig.start-stop=suda.taskwarrior-tui.keyconfig.undo=uuda.taskwarrior-tui.keyconfig.edit=euda.taskwarrior-tui.keyconfig.modify=muda.taskwarrior-tui.keyconfig.shell=!uda.taskwarrior-tui.keyconfig.log=luda.taskwarrior-tui.keyconfig.add=auda.taskwarrior-tui.keyconfig.annotate=Auda.taskwarrior-tui.keyconfig.filter=/uda.taskwarrior-tui.keyconfig.zoom=zuda.taskwarrior-tui.keyconfig.context-menu=cuda.taskwarrior-tui.keyconfig.next-tab=]uda.taskwarrior-tui.keyconfig.previous-tab=[</code></pre><h1 id="生成报告"><a class="markdownIt-Anchor" href="#生成报告"></a> 生成报告</h1><p><code>task ...</code></p><h2 id="内置静态报告"><a class="markdownIt-Anchor" href="#内置静态报告"></a> 内置静态报告</h2><pre class="highlight"><code class="">burndown.dailyburndown.monthlyburndown.weeklycalendarcolorsexportghistory.annualghistory.monthlyhistory.annualhistory.monthlyinformationsummarytimesheet</code></pre><h2 id="内置动态报告"><a class="markdownIt-Anchor" href="#内置动态报告"></a> 内置动态报告</h2><pre class="highlight"><code class="shell">activeallblockedblockingcompletedlistlonglsminimalnewestnextoldestoverduereadyrecurringunblockedwaiting</code></pre><h2 id="自定义报告"><a class="markdownIt-Anchor" href="#自定义报告"></a> 自定义报告</h2><pre class="highlight"><code class="shell">task config report.simple.description 'Simple list of open tasks by project'task config report.simple.columns     'id,project,description.count'task config report.simple.labels      'ID,Proj,Desc'task config report.simple.sort        'project+/,entry+'task config report.simple.filter      'status:pending'task simple</code></pre><h1 id="同步"><a class="markdownIt-Anchor" href="#同步"></a> 同步</h1><p>原来准备使用 <a href="https://inthe.am/">inthe.am</a> 提供的工具使其跟 <a href="https://trello.com/">trello</a> 同步，而trello支持win/macos/ios/linux/android。</p><p>inthe.am主页本身提供task的GUI功能，在浏览器上就可以多端同步。</p><p>在登录后, 按照 <a href="https://inthe.am/configure">Configuration &amp; Settings</a> 中的提示，下载三个文件，修改<code>~/.taskrc</code>，然后<code>task sync init</code>。之后通过 <code>task sync</code> 指令同步任务列表, 既可以达到跨平台同步的功能了。</p><blockquote><p>由于trello和taskwarrior功能逻辑不完全一致，建议不要在trello上操作，而是作为只读的看板</p></blockquote><h1 id="其他技巧"><a class="markdownIt-Anchor" href="#其他技巧"></a> 其他技巧</h1><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">自定义命令</span>task config alias.rm delete<span class="hljs-meta prompt_"># </span><span class="language-bash">自定义快捷键 ~/.taskrc</span><span class="hljs-meta prompt_"># </span><span class="language-bash">这句由官方给出，但不生效</span><span class="hljs-meta prompt_">#</span><span class="language-bash">uda.taskwarrior-tui.keyconfig.shortcut1=S</span>uda.taskwarrior-tui.shortcuts.1=task sync<span class="hljs-meta prompt_"># </span><span class="language-bash">批量处理，在tt中按v</span>task 67,76-79 modify project:fosscontrib<span class="hljs-meta prompt_"># </span><span class="language-bash">彻底删除deleted的任务,2.6新加入的特性，原来用过滤器隐藏</span>task purge<span class="hljs-meta prompt_"># </span><span class="language-bash">加入任务并标记为完成</span>task log ...<span class="hljs-meta prompt_"># </span><span class="language-bash">阻塞别的任务且不被别的任务阻塞优先级最高</span>task +BLOCKING -BLOCKED</code></pre><h1 id="workflow"><a class="markdownIt-Anchor" href="#workflow"></a> workflow</h1><ol><li>每天早上打开manjaro<ol><li>sudo pacman -Syu</li><li>tt</li></ol></li><li>按以下优先级选择任务<ol><li>昨晚离开前仍处于start的任务</li><li>按urgency选择</li></ol></li><li>按s开始任务，按s搁置，完成后done，一段时间后delete</li><li>按1同步，现设置为每一小时自动同步</li><li><code>task burndown.monthly/weekly</code>查看报表</li><li><a href="http://xn--inthe-md5ii85iy4ojim4m2e.am">多端需求用inthe.am</a></li></ol><h1 id="进阶"><a class="markdownIt-Anchor" href="#进阶"></a> 进阶</h1><p><a href="https://taskwarrior.org/docs/terminology.html">https://taskwarrior.org/docs/terminology.html</a></p><h1 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h1><p><a href="https://taskwarrior.org/docs/commands/">https://taskwarrior.org/docs/commands/</a></p><p><a href="https://kdheepak.com/taskwarrior-tui/">https://kdheepak.com/taskwarrior-tui/</a></p>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人品牌的开始</title>
      <link href="/2021/10/11/%E4%B8%AA%E4%BA%BA%E5%93%81%E7%89%8C%E7%9A%84%E5%BC%80%E5%A7%8B/"/>
      <url>/2021/10/11/%E4%B8%AA%E4%BA%BA%E5%93%81%E7%89%8C%E7%9A%84%E5%BC%80%E5%A7%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="楔子"><a class="markdownIt-Anchor" href="#楔子"></a> 楔子</h2><p>昨天看曾仕强教授的演讲，讲了个<strong>三季人</strong>的故事。就是说孔子的学生和一个路人争辩一年到底有几个季节，路人坚决认为是三个季节，孔子学生说明明是四个季节，两人吵得不可开交，只好请孔子来决断。孔子看了路人一眼就对学生说，一年是三个季节，你朝他磕个头承认错误吧。孔子的学生满怀不甘地磕了头，路人也高高兴兴地走了。时候，学生埋怨孔子为什么不坚持真理，孔子说：“你看那个家伙，衣服是绿的，就是只蚂蚱，活不过这个秋天，在他眼里，一年就是三季，你怎么争都不会有结果，还不如磕个头让他高高兴兴地离开。”在网络喷子和“杠精”横行的当下，这个故事颇有启发意义。</p><p>事实上人和人的差别比人和蚂蚱都要大，当今网络空间里的**“三季人”**我们见得太多了。逞口舌之快，开口就是祖宗十八代，自认为是龙吟虎啸，在别人眼里却不过是跳梁小丑。在他们的认知里，网络就是发泄情绪和暴露欲望的平台，与之争辩毫无意义。</p><p>互联网的真正价值在于知识、信息的共享。在互联网占领着我们大量清醒时间的时代，<strong>努力学习、善待他人、兼顾实际生活</strong>，简单地做到这三点，它就能让你线上线下的生活更美好，如果你能把你的个人品牌建立起来，让你的思想和努力规整、存档和共享，我愿意把这样的人尊称为**“八季人”**，也就是说，你等于能活两辈子，甚至传承更久。</p><h2 id="无处不在的个人品牌"><a class="markdownIt-Anchor" href="#无处不在的个人品牌"></a> 无处不在的个人品牌</h2><p>博客、播客、vlog、up主、粉丝、大V……这些词相信你每天都在打交道。不知不觉间，个人品牌如雨后春笋般出现在我们视野中。网红经济，大浪淘沙。最近五年是个人品牌数量快速发展的时期，今后十年将是金字招牌凸显的时候。个人品牌呈现以下三个特征：</p><h3 id="小众"><a class="markdownIt-Anchor" href="#小众"></a> 小众</h3><p>有了计算机技术后的世界是信息化的，数字化的，为了整合海量信息，如今它还呈现出了平台化的特征。当你在数字信息里兜兜转转，企图去寻找那些对自己有用的知识（比如有营养的视频）时，你会发现，搜寻、辨别、试错的成本往往超过你学到东西的价值。诚然，搜索引擎和平台的算法在帮助你降低这个成本，它们会把垃圾的东西过滤掉，但与此同时商业化已经把算法的公正性破坏（如SEO）。“小人”不见了，但我们必须甄别更多的“伪君子”。</p><p>近年来我屡屡发现，搜索引擎的第一位和平台上的“热门推荐”不等于高质量，更不等于对我有用，有时候小众的东西反而让你如获至宝，让你感叹这就是缘分。这些网站、博客就是个人品牌。<strong>不打广告，势单力薄</strong>，绝大多数的个人品牌肯定是小众的，但也绝对是内涵超过名气的。</p><h3 id="有用"><a class="markdownIt-Anchor" href="#有用"></a> 有用</h3><p>当你需要解决技术方面的问题，这些个人品牌就像快递的“最后一公里”，把官方的操作手册翻译、加工、整合，再送到你手中。<strong>负责任的个人品牌</strong>一定自己测试过，保证某种操作方式的有效性，并标明在何时何地是有效的。所以你只要关注他们，就能避免被大量无用的垃圾信息所骚扰。</p><p>虽然和官方相比，个人发布的东西不够权威，不够系统，文章像牢骚，技术如偏方，但随着个人实力的积累，牢骚越来越像离骚（指文学性提高），偏方也能自成一派，这样的东西并不比官方的质量差。并且，它真实、有效，不带包装，不加矫饰，这一点贯穿始终。</p><h3 id="朋友"><a class="markdownIt-Anchor" href="#朋友"></a> 朋友</h3><p>个人品牌就像真正的朋友一样，只要你们趣味相投，只要人家高兴，他就会调用十八般武艺，用极大的热情和精力来帮助你解决问题，不计利益。这就像楼下招牌褪了色的小面馆，跟老板混熟了，多加两块肉一点问题没有，咸淡还更合你口味。试问，大饭店做得到吗，互联网大厂做得到吗？这是个人品牌感性的一面。</p><p>我们在写文章、做视频的时候，精心构思，有条有理；在评论的时候斟酌措辞，这些都体现出个人品牌理性的一面。互联网在我们之间蒙上了一层幕布，滤去了<strong>琐碎的真实，留下了有序的真意</strong>。</p><p>我们在泛滥的信息洪流中，一方面在不断寻求自己的定位、落脚点，或者，<strong>家</strong>，一方面在寻找有温度、说话好听、还能帮到我们的朋友。树立起自己的个人品牌就是家，而别人的个人品牌就是朋友。以个人品牌为媒介的交流，就像“君子之交淡如水”，我们的关系不近不远，我们的友谊地久天长。</p><h2 id="个人品牌的三个准则"><a class="markdownIt-Anchor" href="#个人品牌的三个准则"></a> 个人品牌的三个准则</h2><p>优质个人品牌的准则有以下三点：</p><h3 id="三观正凭良心"><a class="markdownIt-Anchor" href="#三观正凭良心"></a> 三观正，凭良心</h3><p>上文提到什么是一个负责任的个人品牌，负责只是个人品牌的道德中的一点。品行要端正，什么该写什么不该写，什么能写什么不能写，心里都有点数。</p><p><strong>换位思考</strong>。和做人一样，其实当好自己的产品经理，想一想观众看你的作品会有什么感受。概念太多，给一个官方说明，自己也复习一下；参考别人文章很多内容，按照知识共享协议，给一个跳转链接尊重一下？文字太多，插点美图、表情包、图表，整理一下自己的思路，也让读者喘口气，如何？这不是简简单单是优化的问题，你可能觉得我写给自己看别人爱看不看。但互联网就是为了分享的。</p><blockquote><p>请换位思考，在创作的时候秉持着分享精神</p></blockquote><h3 id="终身学习"><a class="markdownIt-Anchor" href="#终身学习"></a> 终身学习</h3><p>在学习、购物、计算机使用中遇到迷茫或者不畅时，第一时间想到<strong>大牛博客（或视频）、个人评测、佳软推荐</strong>，这样的人将越来越多。出于自古以来养成的习惯（以及被各大商业公司的反复欺骗），我们的信任更愿意给那些有血有肉的人，而不是冰冷的数据、平台和机构。个人品牌就是互联网上<strong>值得信赖的、有趣的、术业有专攻的</strong>朋友。实际生活中要找到这样的人何其不易啊。</p><p>要成为这样的人，成为互联网上对别人有用的人，终身学习，与时俱进是必然的要求。不仅在专业技术，还有<strong>文字的打磨、眼光的训练、信息的搜集与整合</strong>是需要一生精进的。</p><h3 id="理性互动"><a class="markdownIt-Anchor" href="#理性互动"></a> 理性互动</h3><p>不知不觉间，<strong>评论区</strong>成了某篇文章、视频或者产品质量的重要参考。用火眼金睛筛选评论区的<strong>水军、喷子</strong>，找到有用信息，对你来说可能易如反掌。评论区本该是科普和抒发感想的舞台，对“三季人”来说，却是比拼亲人数量的战场。</p><p>对个人品牌来说，切不可摆架子，不把人当人。<strong>积极、理性</strong>的互动，才能让你的个人品牌有温度有人情味，才能做到上文所说的“君子之交”。</p><h2 id="个人素质是个人品牌的基础"><a class="markdownIt-Anchor" href="#个人素质是个人品牌的基础"></a> 个人素质是个人品牌的基础</h2><p>个人在实际生活中足够优秀，品牌才能足够响亮。你的硬实力，即知识、技术、能力将起决定性作用，而软实力，即包装（文笔、网页、特效、公关等）的作用也绝对不能小觑。以貌取人饱受诟病，但这是我们人类的本性，无可厚非。文如其人，相由心生的观念也有其道理。正视它，接受它，同时把软硬实力熔为一炉，才是当今个人品牌塑造的坦途。</p><p>对于增强硬实力，我们提倡终身学习，追逐前沿，创新创造；对于增强软实力，多阅读、勤思考、善沟通、懂设计显得尤为重要，一个优秀的个人品牌持有者，一定在努力做一个<strong>作者、读者、哲人、设计师和鉴赏家</strong>。</p><h2 id="建立个人品牌的意义"><a class="markdownIt-Anchor" href="#建立个人品牌的意义"></a> 建立个人品牌的意义</h2><p>生活已经不易，我还要这么累去打造个人品牌，意义何在？</p><ol><li>当做日记，能看到自己的成长历程，<strong>作为经历让自己反思，作为计划让自己行动</strong></li><li>当做<strong>梦和灵感</strong>一类事物的备忘</li><li>当做笔记，以加深记忆，<strong>梳理框架，深化细节</strong></li><li>以上三点都有<strong>分享和交流</strong>的意义</li><li>传承的意义：足够丰富的、有永恒价值的个人品牌将长久地活在网络中</li></ol><p>如今的互联网给了所有品牌凸显的机会，当你的个人品牌建立的那一刻起，你将不再是互联网海洋里的到处游走的水分子，而是成为了一块坚定的礁石，虽然依然渺小，但有了确定的坐标，有了出发点和归宿。通过努力，你将变得美丽多姿，鱼虾成群，不断壮大，也许终其一生你在体积上都比不过那些岛屿和大陆，但是你的色彩和温度无与伦比。如前文所述，今后十年，个人品牌的话语权会越来越大，足够优秀的个人品牌代代相传也是有可能的。</p><h2 id="行动起来吧"><a class="markdownIt-Anchor" href="#行动起来吧"></a> 行动起来吧</h2><p>说了这么多，到最后，信心和行动是最重要的。说是要制胜，要凸显，其实在起步阶段，大家抱着平常心，把这个过程看成平常的日记、随感、笔记就好，没人看给自己看也是很有意义的。无论现在处于什么水平，只要开始就不算晚。慢慢积累，保持谦卑。</p><p>以下是我整理的建立个人品牌的步骤：</p><ol><li><p>开始学习至少一样东西，无论什么，比如：</p><ul><li><p>任意一门你感兴趣的语言</p></li><li><p>任何领域的可以分享的、有价值的技术</p></li><li><p>任意一本可以分享的、有价值的书</p></li><li><p>你的一次出行，照片和游记</p></li></ul></li><li><p>关注已经成熟的吸引你的个人品牌，学习模仿。可以进一步看他们推荐的，扩展开去。</p></li><li><p>学习编程、web前端、视频剪辑、图案设计等等（仅供参考，要用啥学啥，用多深学多深）。这些还没学会，不是整天划水的借口。内容创作不能停下：</p><ul><li><p>比如建站前就可以用markdown在本地写起来，写写上述第1点提到的内容，整理整理第2点中那些成熟个人品牌，列个单子推荐给大家，也可以把视频剪辑这类技术学习的过程记录下来</p><p><img src="/2021/10/11/%E4%B8%AA%E4%BA%BA%E5%93%81%E7%89%8C%E7%9A%84%E5%BC%80%E5%A7%8B/images.png" alt=""></p></li><li><p>比如学习使用视频剪辑软件前，想法、素材、分镜、文案都可以准备起来。</p></li></ul></li><li><p>给自己取个名字，设计一个logo，制作水印、签名或者片头片尾</p></li><li><p>找个平台或者自己建站发布吧！</p></li></ol><h2 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h2><p>2020年新春，我23岁了。我想，这已经不再是自我封闭，无所事事的年纪了。回顾过去，没啥好说的。和我的个人网站一样，让一切从零开始吧！</p><h3 id="2021年10月"><a class="markdownIt-Anchor" href="#2021年10月"></a> 2021年10月</h3><p>回头整理资料，发现写得还可以，便想在博客上发布这篇宣言式的文章。当时的我真的像共产主义萌芽时的年轻人一样，崇尚着人性的高贵，充满理想主义气息。谁能料到，现在的我已经投身于研究大数据的洪流之中了。</p>]]></content>
      
      
      <categories>
          
          <category> freetime </category>
          
      </categories>
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-入门</title>
      <link href="/2021/09/24/docker-%E5%85%A5%E9%97%A8/"/>
      <url>/2021/09/24/docker-%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Linux 容器不是模拟一个完整的操作系统，而是对进程的隔离，或者说，在正常进程外面套了一个保护层。</p></blockquote><p>相比虚拟机的优点：</p><ul><li><p>启动快</p></li><li><p>资源占用少</p></li><li><p>体积小</p></li></ul><blockquote><p>docker 是 Linux 容器的一种封装，提供简单易用的容器使用接口</p></blockquote><h1 id="docker-用途"><a class="markdownIt-Anchor" href="#docker-用途"></a> docker 用途</h1><ol><li><strong>提供一次性的环境</strong><br>本地测试他人的软件、持续集成的时候提供单元测试和构建的环境</li><li><strong>提供弹性的云服务</strong><br>动态扩容和缩容</li><li><strong>组建微服务架构</strong><br>一台机器跑多个服务</li></ol><h1 id="image-文件"><a class="markdownIt-Anchor" href="#image-文件"></a> image 文件</h1><blockquote><p>Docker 把应用程序及其依赖，打包在 image 文件里。</p></blockquote><pre class="highlight"><code class="bash"><span class="hljs-comment"># 列出本机的所有image文件</span>docker image <span class="hljs-built_in">ls</span><span class="hljs-comment"># 删除image文件</span>docker image <span class="hljs-built_in">rm</span> [imageName]<span class="hljs-comment"># 导入镜像存储文件</span>docker load</code></pre><p>从 image 文件生成容器</p><pre class="highlight"><code class="shell">docker container run -p 8000:3000 -it koa-demo /bin/bash<span class="hljs-meta prompt_"># </span><span class="language-bash">如果加了CMD，就不能加/bin/bash</span>docker container run -p 8000:3000 -it koa-demo -p参数：容器的 3000 端口映射到本机的 8000 端口。-it参数：容器的 Shell 映射到当前的 Shell，然后你在本机窗口输入的命令，就会传入容器。koa-demo:0.0.1：image 文件的名字（如果有标签，还需要提供标签，默认是 latest 标签）。/bin/bash：容器启动以后，内部第一个执行的命令。这里是启动 Bash，保证用户可以使用 Shell。</code></pre><h1 id="容器快照-镜像导入导出"><a class="markdownIt-Anchor" href="#容器快照-镜像导入导出"></a> 容器快照、镜像导入导出</h1><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">单个容器当前状态</span>docker export 7691a814370e &gt; ubuntu.tardocker import ubuntu.tar test/ubuntu:v1.0<span class="hljs-meta prompt_"># </span><span class="language-bash">多镜像打包，包含历史记录</span>docker save -o xxx.tar fedora busybox ...docker load -i xxx.tar</code></pre><h1 id="容器文件"><a class="markdownIt-Anchor" href="#容器文件"></a> 容器文件</h1><blockquote><p><strong>image 文件生成的容器实例，本身也是一个文件，称为容器文件。</strong></p><p>关闭容器并不会删除容器文件，只是容器停止运行而已。</p></blockquote><pre class="highlight"><code class="bash"><span class="hljs-comment"># 列出本机正在运行的容器</span>docker container <span class="hljs-built_in">ls</span> <span class="hljs-comment"># 列出本机所有容器，包括终止运行的容器</span>docker container <span class="hljs-built_in">ls</span> --all<span class="hljs-comment"># 删除容器文件</span>docker container <span class="hljs-built_in">rm</span> [containerID]</code></pre><h1 id="dockerfile-制作-image"><a class="markdownIt-Anchor" href="#dockerfile-制作-image"></a> Dockerfile 制作 image</h1><p>从一个基础镜像自定义制作一个镜像，以 koa-demos 为例</p><pre class="highlight"><code class="bash">git <span class="hljs-built_in">clone</span> https://github.com/ruanyf/koa-demos.git<span class="hljs-built_in">cd</span> koa-demos</code></pre><p>首先，在项目的根目录下，新建一个文本文件<code>.dockerignore</code>，写入下面的<a href="https://github.com/ruanyf/koa-demos/blob/master/.dockerignore">内容</a>。</p><pre class="highlight"><code class="bash">.gitnode_modulesnpm-debug.log</code></pre><p>上面代码表示，这三个路径要排除，不要打包进入 image 文件。如果你没有路径要排除，这个文件可以不新建。</p><p>然后，在项目的根目录下，新建一个文本文件 Dockerfile，写入下面的<a href="https://github.com/ruanyf/koa-demos/blob/master/Dockerfile">内容</a>。</p><pre class="highlight"><code class="bash">FROM node:8.4COPY . /appWORKDIR /appRUN npm install --registry=https://registry.npm.taobao.orgEXPOSE 3000CMD node demos/01.js</code></pre><p>上面代码一共五行，含义如下。</p><pre class="highlight"><code class="shell">- `FROM node:8.4`：该 image 文件继承官方的 node image，冒号表示标签，这里标签是`8.4`，即8.4版本的 node。- `COPY . /app`：将当前目录下的所有文件（除了`.dockerignore`排除的路径），都拷贝进入 image 文件的`/app`目录。- `WORKDIR /app`：指定接下来的工作路径为`/app`。- `RUN npm install`：在`/app`目录下，运行`npm install`命令安装依赖。注意，安装后所有的依赖，都将打包进入 image 文件。- `EXPOSE 3000`：将容器 3000 端口暴露出来， 允许外部连接这个端口。- `CMD node demos/01.js`:容器启动后自动执行node demos/01.js![image.png](16a02cdc42dd43f0tplv-t2oaga2asx-watermark.awebp)</code></pre><p>创建 image 文件，可以后续发布到官方仓库</p><pre class="highlight"><code class="shell">docker image build -t [newImageName] .docker image ls</code></pre><h1 id="其他常用命令"><a class="markdownIt-Anchor" href="#其他常用命令"></a> 其他常用命令</h1><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">启动容器，区别于docker container run的新建容器</span>docker container start [containerID]<span class="hljs-meta prompt_"># </span><span class="language-bash">用于进入一个正在运行的docker容器</span>docker container exec -it [containerID] /bin/bash<span class="hljs-meta prompt_"># </span><span class="language-bash">通过连接stdin，连接到容器内输入输出流，会在输入<span class="hljs-built_in">exit</span>后终止docker进程</span><span class="hljs-meta prompt_"># </span><span class="language-bash">运维时应用ctrl+p+q切换到后台</span>docker attach [containerID] <span class="hljs-meta prompt_"># </span><span class="language-bash">终止容器的运行，比docker container <span class="hljs-built_in">kill</span>多发送了一个SIGTERM信号</span>docker container stop [containerID]<span class="hljs-meta prompt_"># </span><span class="language-bash">查看容器的ID</span>docker ps -adocker container ls<span class="hljs-meta prompt_"># </span><span class="language-bash">查看容器长ID</span>docker inspect -f '{{.ID}}' 容器名<span class="hljs-meta prompt_"># </span><span class="language-bash">查看容器所有信息</span>docker inspect [containerID]<span class="hljs-meta prompt_"># </span><span class="language-bash">宿主机文件放入docker，反之亦然</span>docker cp 宿主机路径 [containerID]:容器内路径</code></pre><p><img src="/2021/09/24/docker-%E5%85%A5%E9%97%A8/16a02cdbf14142a0tplv-t2oaga2asx-watermark.awebp" alt="image.png"></p><h1 id="参考文章"><a class="markdownIt-Anchor" href="#参考文章"></a> 参考文章</h1><p><a href="https://juejin.cn/post/6844903815729119245">30 分钟快速入门 Docker 教程</a></p><p><a href="https://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html">阮一峰的网络日志-Docker入门教程</a></p>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 运维 </tag>
            
            <tag> 虚拟化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>诗解</title>
      <link href="/2021/09/14/%E8%AF%97%E8%A7%A3/"/>
      <url>/2021/09/14/%E8%AF%97%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="后续初次出去的后续诗名比较随意"><a class="markdownIt-Anchor" href="#后续初次出去的后续诗名比较随意"></a> 后续（初次出去的后续，诗名比较随意）</h1><p>亲爱的（直抒胸臆）</p><p>别说话，别思考，别多想（指qtt纯真的天性，不会太多思考人情世故，另外带些笔者的暧昧）</p><p>静谧的夜，丛林和虫鸣（指到了锦绣村没进去）</p><p>不必牵手，只是靠近</p><p>你的心跳，我的呼吸，互诉孤独的忧伤（指两人以前喜欢单独行动，尝过自由和寂寞）</p><p>不必犹豫，只是相视</p><p>你眼中的星辰啊，倒映在我深黑色的眼底（qtt眼睛很好看，笔者眼睛很深邃，也有关于两人以前接触的世界不同，思维方式不同的暗示）</p><p>亲爱的</p><p>去争夺，去绽放，去张扬（与前段相反，分开后各自独立奋斗）</p><p>霓虹灯管，吉他和嘶吼（旧天堂书店常邀请乐队）</p><p>不必懊悔，只管尝试（笔者推崇多尝试，自己动手的人生态度）</p><p>步履坚强，烟火如香（指qtt很能走路，并且带着平常人家的烟火气息，笔者觉得很香，头发也挺香）</p><p>不惧风浪，鼓帆航行（指看海的时候，qtt说想在远海的船上漂着）</p><p>海风卷走两岸的忧伤（香港深圳两岸）</p><p>一起听潮，多么宁静的声响（海潮起伏，qtt吹着海风，笔者看着她的背影，找到了心灵的安宁）</p><blockquote><p>gsb 赠 qtt 作于2021.08.01</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库进阶</title>
      <link href="/2021/07/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9B%E9%98%B6/"/>
      <url>/2021/07/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="子查询"><a class="markdownIt-Anchor" href="#子查询"></a> 子查询</h1><h2 id="标量子查询"><a class="markdownIt-Anchor" href="#标量子查询"></a> 标量子查询</h2><pre class="highlight"><code class="sql"><span class="hljs-comment">-- 子查询是结果是一个值</span><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> students <span class="hljs-keyword">where</span> age <span class="hljs-operator">&gt;</span> (<span class="hljs-keyword">select</span> <span class="hljs-built_in">avg</span>(age) <span class="hljs-keyword">from</span> students);</code></pre><h2 id="列级子查询"><a class="markdownIt-Anchor" href="#列级子查询"></a> 列级子查询</h2><blockquote><p>返回的结果是一列(一列多行)</p></blockquote><pre class="highlight"><code class="sql"><span class="hljs-keyword">select</span> 列名 <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> id <span class="hljs-keyword">in</span> (结果是一列的<span class="hljs-keyword">sql</span>语句);</code></pre><h2 id="行级子查询"><a class="markdownIt-Anchor" href="#行级子查询"></a> 行级子查询</h2><blockquote><p>和标量差不多，区别是子查询结果是一行多列</p></blockquote><pre class="highlight"><code class="sql"> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> students <span class="hljs-keyword">from</span> students <span class="hljs-keyword">where</span> (height,age) <span class="hljs-operator">=</span> (<span class="hljs-keyword">select</span> <span class="hljs-built_in">max</span>(height),<span class="hljs-built_in">max</span>(age) <span class="hljs-keyword">from</span> students)</code></pre><h1 id="窗口函数"><a class="markdownIt-Anchor" href="#窗口函数"></a> 窗口函数</h1><blockquote><p>使用后形状不变，类似于pandas里的transform()</p></blockquote><pre class="highlight"><code class="sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>,<span class="hljs-built_in">rank</span>() <span class="hljs-keyword">over</span> (<span class="hljs-keyword">partition</span> <span class="hljs-keyword">by</span> 分组依据列名 <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> 排序依据列名 <span class="hljs-keyword">desc</span>) <span class="hljs-keyword">as</span> 新的排名列名 <span class="hljs-keyword">from</span> 表名;</code></pre><p><img src="/2021/07/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9B%E9%98%B6/UVwajev8FuK9QzW.jpg" alt=""></p><h1 id="事务隔离"><a class="markdownIt-Anchor" href="#事务隔离"></a> 事务隔离</h1><h2 id="隔离等级"><a class="markdownIt-Anchor" href="#隔离等级"></a> 隔离等级</h2><ul><li><p>脏读、脏写、不可重复度、幻读</p></li><li><p>mysql默认等级为可重复读</p></li></ul><pre class="highlight"><code class="sql"><span class="hljs-comment">-- 查看</span><span class="hljs-keyword">select</span> @<span class="hljs-variable">@tx</span>_isolation<span class="hljs-keyword">select</span> @<span class="hljs-variable">@global</span>.tx_isolation<span class="hljs-comment">-- 修改</span><span class="hljs-keyword">set</span> session transaction isolation level ...<span class="hljs-comment">-- read uncommitted</span><span class="hljs-comment">-- read committed</span><span class="hljs-comment">-- repeatable read(default)</span><span class="hljs-comment">-- serializable</span></code></pre><p><a href="https://elsef.com/2018/11/28/%E7%BB%8F%E5%B8%B8%E8%A2%AB%E8%AF%AF%E8%A7%A3%E7%9A%84MySQL%E4%B8%AD%E5%AF%B9REPEATABLE-READ/">幻读的详细解释</a></p><h1 id="sql注入"><a class="markdownIt-Anchor" href="#sql注入"></a> sql注入</h1><pre class="highlight"><code class="sql"><span class="hljs-keyword">UPDATE</span> tablename <span class="hljs-keyword">SET</span> ...<span class="hljs-operator">=</span>... <span class="hljs-keyword">WHERE</span> ...<span class="hljs-comment">-- sql注入</span><span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">or</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-comment">--拿到整个数据库</span><span class="hljs-comment">-- 解决方法：传参</span><span class="hljs-comment">-- python里设定规则，findname读到空格结束，过滤空格后的内容</span><span class="hljs-comment">-- 单独识别or/and，后面的内容放到列表的下一个元素</span>para<span class="hljs-operator">=</span>[findname]</code></pre><h1 id="索引与效率"><a class="markdownIt-Anchor" href="#索引与效率"></a> 索引与效率</h1><h2 id="索引类别聚集索引-唯一索引"><a class="markdownIt-Anchor" href="#索引类别聚集索引-唯一索引"></a> 索引类别：聚集索引、唯一索引</h2><blockquote><p>主键创建时默认是聚集索引</p></blockquote><ul><li><p>**聚集索引：**一张表只能有一列，直接存放B+树叶子结点的地址。非聚集索引存放聚集索引的地址。</p></li><li><p>**唯一索引：**不重复，但可以为null。</p></li></ul><h2 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h2><p><a href="https://www.cnblogs.com/xrq730/p/8446246.html">https://www.cnblogs.com/xrq730/p/8446246.html</a></p><p><strong>char 和 varchar</strong>:</p><p>对于MyISAM表，推荐CHAR类型；对于InnoDB表，推荐VARCHAR类型</p><h1 id="mysql存储结构是b树"><a class="markdownIt-Anchor" href="#mysql存储结构是b树"></a> MySql存储结构是B+树</h1>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库入门</title>
      <link href="/2021/07/04/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%A5%E9%97%A8/"/>
      <url>/2021/07/04/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="sql语法"><a class="markdownIt-Anchor" href="#sql语法"></a> SQL语法</h1><p><strong>注：</strong><code>' ' 指数字或字符串</code></p><blockquote><p>查询比较重要，占业务的绝大多数，创建放后面</p></blockquote><h2 id="select"><a class="markdownIt-Anchor" href="#select"></a> SELECT</h2><pre class="highlight"><code class="sql"><span class="hljs-keyword">SELECT</span> 字段 <span class="hljs-keyword">FROM</span> 表;<span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> 表;<span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DISTINCT</span> 字段 <span class="hljs-keyword">FROM</span> 表;</code></pre><h2 id="top"><a class="markdownIt-Anchor" href="#top"></a> TOP</h2><pre class="highlight"><code class="sql"><span class="hljs-keyword">SELECT</span> TOP 记录数 <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> 表;<span class="hljs-keyword">SELECT</span> TOP 百分数 PERSENT <span class="hljs-keyword">FROM</span> 表;</code></pre><h2 id="where"><a class="markdownIt-Anchor" href="#where"></a> WHERE</h2><pre class="highlight"><code class="sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> 表 <span class="hljs-keyword">WHERE</span> 字段<span class="hljs-operator">+</span>运算符<span class="hljs-operator">+</span><span class="hljs-string">' '</span>;<span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> 表 <span class="hljs-keyword">WHERE</span> (字段A<span class="hljs-operator">=</span><span class="hljs-string">' '</span> <span class="hljs-keyword">OR</span> 字段A<span class="hljs-operator">=</span><span class="hljs-string">' '</span>) <span class="hljs-keyword">AND</span> 列B<span class="hljs-operator">=</span><span class="hljs-string">' '</span>;<span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> 表 <span class="hljs-keyword">WHERE</span> 字段A<span class="hljs-operator">&lt;&gt;</span><span class="hljs-string">' '</span> <span class="hljs-keyword">OR</span> 字段A <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span>;<span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> 表 <span class="hljs-keyword">WHERE</span> 字段A<span class="hljs-operator">&gt;</span><span class="hljs-keyword">ALL</span>(… <span class="hljs-keyword">and</span> 字段A <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">NULL</span>);<span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> 表 <span class="hljs-keyword">WHERE</span> 字段 <span class="hljs-keyword">IN</span> (<span class="hljs-string">' '</span>,<span class="hljs-string">' '</span>);</code></pre><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>=、&lt;&gt;</td><td>等于、不等于</td></tr><tr><td>&lt;、&gt;、&lt;=、&gt;=</td><td>小于、大于、小于等于、大于等于</td></tr><tr><td>(NOT)BETWEEN…AND…</td><td>(不)在某个范围内</td></tr><tr><td>(NOT)LIKE</td><td>(不)匹配某种模式</td></tr></tbody></table><h2 id="like"><a class="markdownIt-Anchor" href="#like"></a> LIKE</h2><pre class="highlight"><code class="sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> 表 <span class="hljs-keyword">WHERE</span> 字段 <span class="hljs-keyword">LIKE</span> <span class="hljs-string">'%_[][!]'</span>;<span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> 表 <span class="hljs-keyword">WHERE</span> 字段 <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">LIKE</span> <span class="hljs-string">'%'</span>;</code></pre><h2 id="as"><a class="markdownIt-Anchor" href="#as"></a> AS/@</h2><pre class="highlight"><code class="sql"><span class="hljs-comment">-- 变量名</span><span class="hljs-keyword">SET</span> <span class="hljs-variable">@X</span><span class="hljs-operator">=</span><span class="hljs-string">' '</span><span class="hljs-comment">-- 表别名</span><span class="hljs-keyword">SELECT</span> 别名.字段 <span class="hljs-keyword">FROM</span> 表 <span class="hljs-keyword">AS</span> 别名;<span class="hljs-comment">-- 字段别名</span><span class="hljs-keyword">SELECT</span> 字段 <span class="hljs-keyword">AS</span> 别名 <span class="hljs-keyword">FROM</span> 表;</code></pre><h2 id="into"><a class="markdownIt-Anchor" href="#into"></a> INTO</h2><pre class="highlight"><code class="sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">INTO</span> 新表 <span class="hljs-keyword">FROM</span> 表;<span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">INTO</span> 新表 <span class="hljs-keyword">IN</span> 数据库 <span class="hljs-keyword">FROM</span> 表;</code></pre><h2 id="order-by"><a class="markdownIt-Anchor" href="#order-by"></a> ORDER BY</h2><pre class="highlight"><code class="sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> 表 <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> 字段<span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> 表 <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> 字段 <span class="hljs-keyword">DESC</span>;<span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> 表 <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> 字段A, 字段B;<span class="hljs-comment">-- 跳过第一行，取接下来的三行</span><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> 表 <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> 字段 LIMIT <span class="hljs-number">1</span>,<span class="hljs-number">3</span>;</code></pre><h2 id="insert-into"><a class="markdownIt-Anchor" href="#insert-into"></a> INSERT INTO</h2><pre class="highlight"><code class="sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> 表 (字段A, 字段B) <span class="hljs-keyword">VALUES</span> (值<span class="hljs-number">1</span>, 值<span class="hljs-number">2</span>);</code></pre><h2 id="update"><a class="markdownIt-Anchor" href="#update"></a> UPDATE</h2><pre class="highlight"><code class="sql"><span class="hljs-keyword">UPDATE</span> 表 <span class="hljs-keyword">SET</span> 字段<span class="hljs-operator">=</span><span class="hljs-string">' '</span> <span class="hljs-keyword">WHERE</span> 字段<span class="hljs-operator">=</span><span class="hljs-string">' '</span>;</code></pre><h2 id="delete"><a class="markdownIt-Anchor" href="#delete"></a> DELETE</h2><pre class="highlight"><code class="sql"><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> 表 <span class="hljs-keyword">WHERE</span> 字段<span class="hljs-operator">=</span><span class="hljs-string">' '</span>;<span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> 表;<span class="hljs-comment">-- 主键继承之前的序号</span><span class="hljs-keyword">DELETE</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> 表;<span class="hljs-comment">-- 主键重新开始</span><span class="hljs-keyword">TRUNCATE</span> <span class="hljs-keyword">TABLE</span> 表;</code></pre><h2 id="group-by"><a class="markdownIt-Anchor" href="#group-by"></a> GROUP BY</h2><pre class="highlight"><code class="sql"><span class="hljs-keyword">SELECT</span> 聚合函数(待统计的字段) <span class="hljs-keyword">FROM</span> 表 <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> 存在重复的字段;</code></pre><table><thead><tr><th>函数</th><th>描述</th><th>其他</th></tr></thead><tbody><tr><td>count()</td><td>条数</td><td>不计入null 值</td></tr><tr><td>sum()</td><td>求和</td><td>不计入null 值</td></tr><tr><td>max()</td><td>最大值</td><td>时间字段代表最近最晚的时间</td></tr><tr><td>min()</td><td>最小值</td><td>时间字段代表最早的时间</td></tr><tr><td>avg()</td><td>平均值</td><td>不计入null 值</td></tr></tbody></table><h2 id="join"><a class="markdownIt-Anchor" href="#join"></a> JOIN</h2><pre class="highlight"><code class="sql"><span class="hljs-keyword">SELECT</span> 字段 <span class="hljs-keyword">FROM</span> 左表 <span class="hljs-keyword">JOIN</span> 右表 <span class="hljs-keyword">ON</span> 左表.字段<span class="hljs-operator">=</span>右表.字段;<span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span><span class="hljs-operator">/</span><span class="hljs-keyword">RIGHT</span> <span class="hljs-keyword">JOIN</span><span class="hljs-operator">/</span><span class="hljs-keyword">FULL</span> <span class="hljs-keyword">JOIN</span></code></pre><h2 id="unionall"><a class="markdownIt-Anchor" href="#unionall"></a> UNION(ALL)</h2><ul><li>列名不一致时，以第一条sql语句的列名对齐</li><li>使用union查询会将重复的行过滤掉，UNION ALL保留重复行</li></ul><pre class="highlight"><code class="sql"><span class="hljs-keyword">SELECT</span> ...<span class="hljs-keyword">UNION</span><span class="hljs-keyword">SELECT</span> ...;</code></pre><h2 id="view"><a class="markdownIt-Anchor" href="#view"></a> VIEW</h2><pre class="highlight"><code class="sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">VIEW</span> 视图 <span class="hljs-keyword">AS</span> <span class="hljs-keyword">SELECT</span> 字段 <span class="hljs-keyword">FROM</span> 表 <span class="hljs-keyword">WHERE</span> ...;<span class="hljs-keyword">SHOW</span> <span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> 视图<span class="hljs-operator">/</span>表;<span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">OR</span> REPLACE <span class="hljs-keyword">VIEW</span> 视图 <span class="hljs-keyword">AS</span> <span class="hljs-keyword">SELECT</span> 字段 <span class="hljs-keyword">FROM</span> 表 <span class="hljs-keyword">WHERE</span> ...;<span class="hljs-keyword">DROP</span> <span class="hljs-keyword">VIEW</span> 视图;</code></pre><h2 id="index"><a class="markdownIt-Anchor" href="#index"></a> INDEX</h2><pre class="highlight"><code class="sql"><span class="hljs-keyword">CREATE</span> INDEX 索引 <span class="hljs-keyword">ON</span> 表(字段(LENGTH));<span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">UNIQUE</span> INDEX 索引 <span class="hljs-keyword">ON</span> 表(字段(LENGTH));<span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表 <span class="hljs-keyword">ADD</span> 索引类 索引名 (字段A(LENGTH), 字段B(LENGTH));<span class="hljs-keyword">SHOW</span> INDEX <span class="hljs-keyword">FROM</span> 表;<span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表 <span class="hljs-keyword">DROP</span> INDEX 索引名</code></pre><table><thead><tr><th>索引类</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td>INDEX</td><td style="text-align:left">普通索引</td></tr><tr><td>UNIQUE</td><td style="text-align:left">唯一索引</td></tr><tr><td>FULLTEXT</td><td style="text-align:left">全文索引(MyISAM)</td></tr><tr><td>组合索引</td><td style="text-align:left">最左前缀原则</td></tr></tbody></table><h2 id="create-database"><a class="markdownIt-Anchor" href="#create-database"></a> CREATE DATABASE</h2><pre class="highlight"><code class="sql"><span class="hljs-keyword">CREATE</span> DATABASE IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> 数据库 <span class="hljs-keyword">default</span> <span class="hljs-type">character</span> <span class="hljs-keyword">set</span> utf8mb4 <span class="hljs-keyword">collate</span> utf8mb4_unicode_ci;<span class="hljs-keyword">SHOW</span> DATABASES;<span class="hljs-keyword">DROP</span> DATABASE 数据库;</code></pre><h2 id="create-table"><a class="markdownIt-Anchor" href="#create-table"></a> CREATE TABLE</h2><pre class="highlight"><code class="sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> 表 (字段A 数据类型 <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span><span class="hljs-operator">=</span><span class="hljs-string">''</span>,字段B 数据类型,<span class="hljs-keyword">PRIMARY</span> KEY AUTO_INCREMENT, <span class="hljs-keyword">CONSTRAINT</span> 约束名 约束类 (字段A, 字段B),    索引类 索引名 (字段(LENGTH)))AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<span class="hljs-keyword">SHOW</span> TABLES;<span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> 表;</code></pre><table><thead><tr><th style="text-align:left">数据类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">integer(size)<br>int(size)<br>smallint(size)<br>tinyint(size)</td><td style="text-align:left">仅容纳整数。在括号内规定数字的最大位数。</td></tr><tr><td style="text-align:left">decimal(size,d)<br>numeric(size,d)</td><td style="text-align:left">容纳带有小数的数字。“size” 规定数字的最大位数。“d” 规定小数点右侧的最大位数。</td></tr><tr><td style="text-align:left">char(size)</td><td style="text-align:left">容纳固定长度的字符串（可容纳字母、数字以及特殊字符）。在括号中规定字符串的长度。</td></tr><tr><td style="text-align:left">varchar(size)</td><td style="text-align:left">容纳可变长度的字符串（可容纳字母、数字以及特殊的字符）。在括号中规定字符串的最大长度。</td></tr><tr><td style="text-align:left">date(yyyymmdd)</td><td style="text-align:left">容纳日期。</td></tr></tbody></table><table><thead><tr><th>约束</th><th>描述</th></tr></thead><tbody><tr><td>NOT NULL</td><td>防止某字段为NULL</td></tr><tr><td>UNIQUE</td><td>防止某字段重复值</td></tr><tr><td>PRIMARY KEY AUTO_INCREMENT</td><td>设为主键，防NULL防重复，自增</td></tr><tr><td>FOREIGN KEY…REFERENCES…</td><td>设为另一表的主键</td></tr><tr><td>DEFAULT</td><td>设置默认值</td></tr><tr><td>CHECK(OPERATOR/AND/OR)</td><td>自定义约束</td></tr></tbody></table><h2 id="alter-table"><a class="markdownIt-Anchor" href="#alter-table"></a> ALTER TABLE</h2><h3 id="更改约束"><a class="markdownIt-Anchor" href="#更改约束"></a> 更改约束</h3><pre class="highlight"><code class="sql"><span class="hljs-comment">-- NOT NULL的更改</span><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表 MODIFY <span class="hljs-keyword">COLUMN</span> 字段 数据类型;<span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表 MODIFY <span class="hljs-keyword">COLUMN</span> 字段 数据类型 <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>;<span class="hljs-comment">-- DEFAULT的更改</span><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表 <span class="hljs-keyword">ALTER</span> 字段 <span class="hljs-keyword">SET</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">' '</span>;<span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表 <span class="hljs-keyword">ALTER</span> 字段 <span class="hljs-keyword">DROP</span> <span class="hljs-keyword">DEFAULT</span>;<span class="hljs-comment">-- 其他约束的更改</span><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表 <span class="hljs-keyword">ADD</span> 约束类(字段A, 字段B);<span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表 <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">CONSTRAINT</span> 约束名 约束类 (字段A, 字段B);<span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表 <span class="hljs-keyword">DROP</span> <span class="hljs-keyword">CONSTRAINT</span> 约束名;</code></pre><h3 id="添加列更改数据类型"><a class="markdownIt-Anchor" href="#添加列更改数据类型"></a> 添加列/更改数据类型</h3><pre class="highlight"><code class="sql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表 <span class="hljs-keyword">ADD</span> 新字段 数据类型;<span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表 MODIFY <span class="hljs-keyword">COLUMN</span> 字段 新数据类型;<span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表 CHANGE <span class="hljs-keyword">COLUMN</span> 字段 新字段名 新数据类型;<span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> 表 <span class="hljs-keyword">DROP</span> <span class="hljs-keyword">COLUMN</span> 字段;</code></pre>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大家的日语初级上</title>
      <link href="/2021/07/04/%E5%A4%A7%E5%AE%B6%E7%9A%84%E6%97%A5%E8%AF%AD%E5%88%9D%E7%BA%A7%E4%B8%8A/"/>
      <url>/2021/07/04/%E5%A4%A7%E5%AE%B6%E7%9A%84%E6%97%A5%E8%AF%AD%E5%88%9D%E7%BA%A7%E4%B8%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="皆さんの日本語-初級上"><a class="markdownIt-Anchor" href="#皆さんの日本語-初級上"></a> 皆さんの日本語　初級上</h1><blockquote><p>覚えにくい、より難しい知識</p></blockquote><h2 id="単語"><a class="markdownIt-Anchor" href="#単語"></a> 単語</h2><p>教室　きょうしつ</p><p>授業　じゅぎょう</p><p>橋／箸　はし</p><p>平仮名　ひえあがな</p><p>片仮名　カタカナ</p><p>手伝う　てつだう</p><p>買い物する</p><p>沖縄　おきなわ</p><p>市役所　しやくしょ</p><p>役に立つ　やくにたつ</p><p>間　あいだ</p><p>集める　あつめる</p><p>意見　いけん</p><p>田舎　いなか</p><p>要る　いる</p><p>後ろ　うしろ</p><p>上着　うわぎ</p><p>動く　うごく</p><p>家内＝妻</p><p>音楽　おんがく</p><p>確認　かくにん</p><p>角　かど</p><p>生活　せいかつ</p><p>洗濯　せんたく</p><p>自動販売機　じどうはんばいき</p><p>地図　ちず</p><p>地球　ちきゅう</p><p>地下鉄　ちかてつ</p><p>調子　ちょうし</p><p>だんだん増（ふ）える</p><h3 id="外来語"><a class="markdownIt-Anchor" href="#外来語"></a> 外来語</h3><p>インターネットInternet</p><p>エスカレータ　escalator</p><h3 id="数词特辑"><a class="markdownIt-Anchor" href="#数词特辑"></a> 数词特辑</h3><p>0.1れいてんいち　1/10じゅうぶんのいち</p><p>三百さんびゃく　六百　ろっぴゃく　八百　はっぴゃく</p><p>三千　さんぜん　八千　はっせん</p><p>四時　よじ　九時　くじ</p><p>九分　きゅうふん　十分　じゅっぷん</p><p>七時七分　しちじななふん</p><p>月曜日　げつようび</p><p>九月九日　くがつここのか　四月十四日　しがつじゅうよっか</p><table><thead><tr><th>順番</th><th>いつ</th><th>いくつ</th></tr></thead><tbody><tr><td>1</td><td>ついたち</td><td>ひとつ</td></tr><tr><td>2</td><td>ふつか</td><td>ふたつ</td></tr><tr><td>3</td><td>みっか</td><td>みっつ</td></tr><tr><td>4</td><td>よっか</td><td>よっつ</td></tr><tr><td>5</td><td>いつか</td><td>いつつ</td></tr><tr><td>6</td><td>むいか</td><td>むいつ</td></tr><tr><td>7</td><td>なのか</td><td>ななつ</td></tr><tr><td>8</td><td>ようか</td><td>やっつ</td></tr><tr><td>9</td><td>ここのか</td><td>ここのつ</td></tr><tr><td>10</td><td>とおか</td><td>とお</td></tr></tbody></table><h3 id="助数詞特辑"><a class="markdownIt-Anchor" href="#助数詞特辑"></a> 助数詞特辑</h3><h4 id="月不用间谁来拯救它"><a class="markdownIt-Anchor" href="#月不用间谁来拯救它"></a> 月不用“间”，谁来拯救它？</h4><p>三ヶ月　三か月　三箇月</p><p><a href="https://landgather.com/month">https://landgather.com/month</a></p><h4 id="通用量词"><a class="markdownIt-Anchor" href="#通用量词"></a> 通用量词</h4><p>「匹」：是指小型動物，如「犬、猫、魚、蚊」等，皆用「一匹、二匹、三匹」。<br>「頭」：則是大型動物，如「馬、牛、象」等，皆用「一頭、二頭、三頭」。<br>「枚」：指扁扁的東西，如「紙、封筒、はがき」等，皆用「一枚、二枚」。<br>「冊」：是書籍一冊冊的意思，如「本、雑誌」等，皆用「一冊、二冊」。<br>「本」：用於量詞時並不是書的意思，而是「支」或「條」的意思，用於長條狀的東西，如「鉛筆、箸、ネクタイ」等，皆用「一本、二本、三本」來表示。</p><p><a href="https://www.sigure.tw/comprehensive-learning/knowledge/465-japanese-counter-word">時雨の町</a></p><h4 id="その他"><a class="markdownIt-Anchor" href="#その他"></a> その他</h4><p>其他还有许多常用的单位词，但用法较单纯，不容易混淆，简单条列如下:</p><p>番（ばん） “第～”计算顺序。</p><p>台（だい） “～台”计算交通工具及电器用品。</p><p>歳（さい） ～岁 年龄</p><p>着（ちゃく） ～件 衣服（衬衫、T恤用“枚”）</p><p>回（かい） ～次 频率</p><p><strong>足（そく） ～双 鞋子跟袜子</strong></p><p><strong>軒（けん） ～间 房屋</strong></p><p>階（かい） ～楼 楼层</p><p>位（い） 第～名 名次</p><p>円（えん） ～日元 货币</p><p>億（おく） ～亿</p><p>課（か） 课程；科（工作单位，机构）</p><p>回（かい） 次数</p><p>画（かく） 笔画</p><p>株（かぶ） 股票；有根植物</p><p>カロリー 卡路里</p><p>巻（かん） 丛书；胶卷</p><p>期（き） 定期毕业班级</p><p>級（きゅう） 等级</p><p>行（ぎょう） 成行的字</p><p>曲（きょく） 歌曲、音乐</p><p>局（きょく） 象棋等棋盘上进行的比赛</p><p>切れ（きれ） 切下的东西</p><p>キロ 千克</p><p>句（く） 文章、诗歌、俳句等</p><p>組（くみ） 班级、班组</p><p>桁（けた） [数]位数</p><p>件（けん） 事情</p><p>戸（こ） 家庭</p><p>校（こう） 校正；学校</p><p>号（ごう） 铅字大小；较小的法律条文；杂志等</p><p>歳（さい） 年龄</p><p>冊（さつ） 书籍、杂志等</p><p>字（じ） 文字</p><p>時（じ） 时刻</p><p>次（じ） 回数、次数</p><p>時間（じかん） 时间单位</p><p>室（しつ） 房间</p><p>種（しゅ） 种类</p><p>首（しゅ） 歌曲、诗歌</p><p>週（しゅう） 时间单位</p><p>周（しゅう） 圈数</p><p>重（じゅう） 层数</p><p>周年（しゅうねん） 周年</p><p>種類（しゅるい） 种类</p><p>章（しょう） 诗歌、文章</p><p>畳（じょう） 房屋面积</p><p>錠（じょう） 药片</p><p>筋（すじ） 细长东西</p><p>隻（せき） 船舶；鸟类</p><p>銭（せん） 货币</p><p>膳（ぜん） 饭食；筷子</p><p>センチ 长度单位</p><p>層（そう） 层数</p><p>艘（そう） 船只</p><p>揃い（そろい） 手套、服装等</p><p>体（たい） 雕像等</p><p><strong>台（だい） 汽车、自行车、机器等能运转的东西</strong></p><p>代（だい） 年代、年龄代</p><p>題（だい） 问题、试题等</p><p>度（たび） 次数</p><p>段（だん） 台阶</p><p><strong>着（ちゃく）衣服</strong></p><p>町（ちょう） 城镇、街道</p><p>通（つう） 书信、电话、电报等</p><p>粒（つぶ） 颗粒状物体</p><p>坪（つぼ） 面积单位</p><p>つまみ 粉末、小颗粒状物</p><p>点（てん） 分数、得分</p><p>度（ど） 温度、角度、经纬度、眼镜度数、次数</p><p>等（とう） 级别</p><p>とおり 种类</p><p>所（ところ） 地方</p><p>年（ねん） 年数</p><p>パーセント 百分比</p><p>杯（はい） 茶、咖啡、酒等饮料</p><p>倍（ばい） 倍数</p><p>拍（はく） 音乐、音节</p><p>泊（はく） 住宿时间</p><p>箱（はこ） 盒装物品</p><p>発（はつ） 子弹、炮弹、焰火等</p><p>班（はん） 组、班级</p><p>番（ばん） 次序</p><p>晩（ばん） ～晚</p><p>尾（び） ～条鱼</p><p>秒（びょう） 时间单位；时刻</p><p>部（ぶ） 书籍、文件等</p><p>分（ぶ） 温度单位“度”等的十分之一</p><p>歩（ほ） 路程</p><p>本（ほん） 树木、笔、裤子等各种细长的东西；录音带、录像带等</p><p>幕（まく） 戏剧等</p><p>い一轮</p><p>名（めい） 人</p><p>メートル 长度单位</p><p>面（めん） 报纸版面、镜子、琴、棋盘等</p><p>夜（や） 晚上</p><p>両（りょう） 车箱、车辆</p><p>輪（りん） 花</p><p>列（れつ） 队列</p><p><strong>羽（わ） 鸟类、兔子</strong></p><p>割（わり） 十分之一</p><p><a href="https://zhuanlan.zhihu.com/p/21559633">https://zhuanlan.zhihu.com/p/21559633</a></p><h3 id="扩展单词教辅"><a class="markdownIt-Anchor" href="#扩展单词教辅"></a> 扩展单词（教辅）</h3><h4 id="国"><a class="markdownIt-Anchor" href="#国"></a> 国</h4><p>アラビア</p><p>エジプト　Egypt</p><p>ベトナム　Vietnam</p><h4 id="名前"><a class="markdownIt-Anchor" href="#名前"></a> 名前</h4><p>渡辺　わたなべ</p><p>伊藤　いとう</p><p>小林こばやし　林　はやし</p><p>井上　いのうえ　上杉　うえすぎ</p><p>清水　しみず</p><h4 id="デパート"><a class="markdownIt-Anchor" href="#デパート"></a> デパート</h4><p>催し物会場もよおしもの会場</p><p>おもちゃ</p><p>電化製品　でんかせいひん</p><p>家具　かぐ</p><p>文房具　ぶんぼうぐ</p><p>食器　しょっき　お膳　おぜん</p><p>紳士服　しんしふく　婦人服　ふじんふく</p><p>駐車場　ちゅうしゃじょう</p><p>化粧品けしょうひん</p><p>アクセサリー　accessory<code>饰品</code></p><h4 id="電話手紙"><a class="markdownIt-Anchor" href="#電話手紙"></a> 電話・手紙</h4><p>警察署　けいさつしょ</p><p>消防署　しょうぼうしょ</p><h4 id="祝祭日-しゅくさいじつ-祝日"><a class="markdownIt-Anchor" href="#祝祭日-しゅくさいじつ-祝日"></a> 祝祭日　しゅくさいじつ　祝日</h4><p>勤労感謝の日</p><p>文化の日</p><p>体育の日　たいいくのひ</p><p>憲法記念日　けんぽうきねんび</p><h4 id="食べ物"><a class="markdownIt-Anchor" href="#食べ物"></a> 食べ物</h4><h5 id="野菜"><a class="markdownIt-Anchor" href="#野菜"></a> 野菜</h5><p>きゅうり　<code>黄瓜</code></p><p>豆　まめ</p><p>大根　だいこん</p><p>レタス　lettuce</p><p>にんじん<code>胡萝卜</code></p><p>葱　ねぎ</p><h5 id="果物-くだもの"><a class="markdownIt-Anchor" href="#果物-くだもの"></a> 果物　くだもの</h5><p>いちご<code>草莓</code></p><p>桃　もも</p><p>西瓜　すいか</p><p>葡萄　ぶどう</p><p>梨　なし</p><p>柿　かき</p><p>みかん　蜜柑</p><h5 id="肉-にく"><a class="markdownIt-Anchor" href="#肉-にく"></a> 肉　にく</h5><p>牛肉　ぎゅうにく</p><p>豚肉　ぶたにく</p><p>ソーセージ　sausage</p><p>ハム　ham</p><h5 id="魚介類-ぎょかいるい"><a class="markdownIt-Anchor" href="#魚介類-ぎょかいるい"></a> 魚介類　ぎょかいるい</h5><p>あじ<code>竹荚鱼</code></p><p>いわし<code>沙丁鱼</code></p><p>さば<code>青花鱼</code></p><p>さんま秋刀鱼</p><p>さけ<code>鲑鱼</code></p><p>まぐろ<code>金枪鱼</code></p><p>たい<code>鲷鱼</code></p><p>たら<code>鳕鱼</code></p><p>かに<code>蟹</code></p><p>いか<code>乌贼</code></p><p>たこ<code>章鱼</code></p><h4 id="家族"><a class="markdownIt-Anchor" href="#家族"></a> 家族</h4><p>妻　つま</p><p>夫　おっと</p><p>夫婦　ふうふ</p><p>奥さん　おくさん</p><p>ご主人　ごしゅじん</p><p>お子さん　おこさん</p><h4 id="音楽-おんがく"><a class="markdownIt-Anchor" href="#音楽-おんがく"></a> 音楽　おんがく</h4><p>ポップス　pops</p><p>ロックrock</p><p>ジャズjazz</p><p>ラテンlatin</p><p>クラシックclassic</p><p>民謡　みんよう</p><p>演歌　えんか</p><p>ミュージカルmusical</p><p>オペラopera</p><h4 id="映画"><a class="markdownIt-Anchor" href="#映画"></a> 映画</h4><p>ホラーhorror</p><p>ドキュメンタリーdocumentary</p><p>ミステリーmystery</p><p>文芸ぶんげい</p><p>アクションaction</p><p>喜劇　きげき</p><h4 id="スポーツ"><a class="markdownIt-Anchor" href="#スポーツ"></a> スポーツ</h4><p>ソフトボールvolleyball</p><p>ラグビーrugby</p><p>バスケットボールbasketball</p><p>卓球たっきゅう</p><p>水泳　すいえい</p><p>ボウリングbowling</p><h4 id="家の中"><a class="markdownIt-Anchor" href="#家の中"></a> 家の中</h4><p>玄関げんかん</p><p>廊下　ろうか</p><p>風呂場　ふろば</p><p>洗面所　せんめんじょ</p><p>台所　だいどころ</p><p>居間　いま</p><p>寝室　しんしつ　部屋　へや</p><p>ベランダ　veranda<code>阳台</code></p><h4 id="メニュー"><a class="markdownIt-Anchor" href="#メニュー"></a> メニュー</h4><p>定食</p><p>天丼てんどん</p><p>親子丼　おやこどん</p><p>野菜炒め　やさいいため</p><p>焼きそば　やきそば</p><p>焼肉　やきにく</p><p>漬物　つけもの</p><p>みそ汁　みそしる</p><p>うどん</p><p>ハンバーグhamburg</p><p>ハンバーガーhamburger</p><p>サラダsalad</p><p>コロッケ<mark>法</mark><code>可乐饼</code></p><p>フライドチキンfrid chicken</p><p>サンドイッチsandwich</p><p>トーストtoast</p><p>ココアcocoa</p><h3 id="まつりと名所"><a class="markdownIt-Anchor" href="#まつりと名所"></a> まつりと名所</h3><p>奈良　東大寺・大仏（ぶつ）</p><p>東京　神田祭り</p><p>大阪　天神祭</p><p>京都　祇園祭</p><p>広島　原爆ドーム</p><h4 id="町の中"><a class="markdownIt-Anchor" href="#町の中"></a> 町の中</h4><p>博物館　はくぶつかん</p><p>植物園　しょくぶつえん</p><p>遊園地　ゆうえんち</p><p>教会　きょうかい</p><p>モスクmosque<code>清真寺</code></p><p>大使館　たいしかん　外交官　がいこうかん</p><p>入国管理局　にゅうこくかんりきょく</p><p>交番　こうばん</p><p>高校　こうこう</p><p>八百屋　やおや</p><h4 id="駅"><a class="markdownIt-Anchor" href="#駅"></a> 駅</h4><p>切符売り場　きっぷうりば</p><p>自動券売機　じどうけんばいき　自動販売機　じどうはんばいき</p><p>精算機せいさんき　算盤　そろばん</p><p>改札口　かいさつぐち<code>验票口</code></p><p>中央口　ちゅうおうぐち</p><p>特急　とっきゅう</p><p>急行　きゅうこう</p><p>快速　かいそく</p><p>準急　じゅんきゅう</p><p>普通　ふつう</p><p>時刻表　じこくひょう</p><p>定期券　ていきけん</p><p>回数券　かいすうけん</p><p>片道　かたみち<code>单程票</code></p><p>往復　おうふく</p><p>バス停　ばすてい</p><p>ホーム　<code>站台</code>platform</p><h4 id="職業-しょくぎょう"><a class="markdownIt-Anchor" href="#職業-しょくぎょう"></a> 職業　しょくぎょう</h4><p>公務員　こうむいん</p><p>調理師　ちょうりし</p><p>理容師　りようし</p><p>教師　きょうし</p><p>弁護士　べんごし</p><p>看護師　かんごし</p><p>運転手　うんてんて</p><p>研究者　けんきゅうしゃ研修生　けんしゅうせい</p><p>警察官　けいさつかん</p><p>政治家　せいじか</p><p>画家　がか</p><p>作家　さっか</p><p>建築家　けんちくか</p><p>俳優　はいゆう</p><h4 id="atmの使い方"><a class="markdownIt-Anchor" href="#atmの使い方"></a> ATMの使い方</h4><p>お預け入れ　おあずけいれ</p><p>お振り込み　おふりこむ</p><p>お振り替え　おふりかえ</p><p>お引き出し　おひきだし</p><p>通帳記入　つうちょうきにゅう</p><p>残高参照　ざんだかさんしょう</p><p>残高照会　ざんだくしょうかい</p><p>口座　こうざ<code>账户</code></p><h4 id="病気"><a class="markdownIt-Anchor" href="#病気"></a> 病気</h4><p>頭・お腹・歯が痛い</p><p>熱があります</p><p>咳（せき）・鼻水・血がでます</p><p>吐き気（はきけ）・寒気・目眩（めまい）がします</p><p>下痢（げり）・便秘（べんぴ）・怪我（けが）・火傷（やけど）をします</p><p>食欲（しょくよく）がありません</p><p>肩（かた）が凝（こ）ります</p><p>体が怠（だる）い</p><p>秘密　ひみつ</p><h4 id="体-からだ"><a class="markdownIt-Anchor" href="#体-からだ"></a> 体　からだ</h4><p>顎　あご</p><p>頸　くび　手首　てくび</p><p>背中　せなか</p><p>腰　こし</p><p>尻　しり</p><p>骨　ほね</p><p>膝　ひざ</p><p>爪　つめ</p><p>指　ゆび</p><p>肘　ひじ</p><p>腕　うで　<code>臂</code></p><p>胸　むね</p><p>かぜ　風邪</p><p>インフルエンザ　influenza</p><p>盲腸　もうちょう</p><p>ぎっくり腰　ぎっくりごし</p><p>捻挫　ねんざ</p><p>骨折　こっせつ</p><p>二日酔い　ふつかよい</p><p>動き</p><p>とぶ　飛ぶ　跳ぶ</p><p>走る　奔る　はしる</p><p>泳ぐ　およぐ　潜る　もぐる</p><p>逆立ちする　さかだちする</p><p>はう　<code>爬</code></p><p>蹴る　ける</p><p>投げる　なげる</p><p>伸ばす　のばす</p><p>曲げる　まげる</p><p>叩く　たたく</p><p>転ぶ　ころぶ<code>跌倒</code></p><p>振り向く　ふりむく　<code>回头</code></p><p>持ち上げる</p><p>飛び込む</p><h4 id="伝統文化娯楽"><a class="markdownIt-Anchor" href="#伝統文化娯楽"></a> 伝統文化・娯楽</h4><p>文楽　ぶんらく</p><p>漫才・落語　まんざい・らくご</p><p>囲碁・将棋　いご・しょうぎ</p><p>パチンコ　<code>弹弓、弹子球</code></p><p>盆踊り　ぼんおどり</p><h4 id="役職名"><a class="markdownIt-Anchor" href="#役職名"></a> 役職名</h4><table><thead><tr><th>機構</th><th>役職名</th></tr></thead><tbody><tr><td>くに</td><td>首相（内閣総理大臣）しゅしょう</td></tr><tr><td>都道府県</td><td>知事　ちじ</td></tr><tr><td>市</td><td>市長</td></tr><tr><td>町</td><td>町長　ちょうちょう</td></tr><tr><td>村　むら</td><td>村長　そんちょう</td></tr><tr><td>大学</td><td>学長</td></tr><tr><td>高等・中・小学校</td><td>校長</td></tr><tr><td>幼稚園　ようちえん</td><td>園長</td></tr><tr><td>会社</td><td>会長・社長・重役（じゅうやく）・部長・課長</td></tr><tr><td>銀行</td><td>頭取・支店長</td></tr><tr><td>病院</td><td>院長・看護師長</td></tr></tbody></table><p>衣服</p><p>スーツsuits</p><p>ワンピースone piece<code>连衣裙</code></p><p>上着　うわぎ　下着　したぎ</p><p>ズボン　<mark>法</mark>jupon</p><p>パンツ pants</p><p>スカートskirt</p><p>ブラウスblouse</p><p>シャツshirts</p><p>セーターsweater</p><p>マフラーmuffler</p><p>手袋　てぶくろ<code>手套</code></p><p>レインコートraincoat</p><p>ネクタイ  necktie</p><p>ベルトbelt</p><p>靴下　くつした</p><p>パンティー・ストッキングpanti stocking</p><p>ハイヒールhigh heel</p><p>ブーツboots</p><p>運動靴　うんどうくつ</p><p>ぞうり　下駄</p><p>たび<code>布袜</code></p><p>道路・交通</p><p>歩道　ほどう　横断歩道　おうだんほどう　歩道橋　ほどうきょう</p><p>車道　しゃどう</p><p>高速道路　こうそくどうろ</p><p>通り　とおり<code>马路</code></p><p>交差点　こうさてん　角　かど</p><p>坂　さか</p><p>踏切　ふみきり</p><p>ガソリンスタンド　gasoline stand</p><p>進入禁止　しんにゅうきんし</p><p>一方通行　いっぽつうこう</p><p>駐車禁止　ちゅうしゃきんし</p><p>右折禁止　うせつきんし</p><p>贈答　ぞうとう</p><p>お年玉　おとしだま</p><p>入学祝　にゅうがくいわい</p><p>卒業祝　そつぎょういわい</p><p>結婚祝　けっこんいわい</p><p>出産祝い　しゅっさんいわい</p><p>お中元　おちゅうげん</p><p>お歳暮　おせんぼ</p><p>お香典　おこうでん</p><p>お見舞い　おみまい</p><p>熨斗袋　のしぶくろ</p><p>人の一生</p><table><thead><tr><th>階段</th><th>こと</th></tr></thead><tbody><tr><td>赤ちゃん</td><td>保育園</td></tr><tr><td>子供</td><td>宿題</td></tr><tr><td>青年</td><td>専門学校・大学・大学院・卒業・就職・結婚</td></tr><tr><td>中年</td><td>離婚・再婚</td></tr><tr><td>老年</td><td>退職</td></tr></tbody></table><h2 id="挨拶-あいさつ"><a class="markdownIt-Anchor" href="#挨拶-あいさつ"></a> 挨拶　あいさつ</h2><p>お出かけですか。</p><p>お上がりください。</p><p>また今度お願いします。</p><p>いっしょにいかがですか。</p><p>おかげさまで。　お陰様で。　<code>托您的福</code></p><p>どうしたの？＝どうしましたか。</p><p>遅い！ちこくするよ。</p><p>どうでしたか。＝How is …?</p><h2 id="文法"><a class="markdownIt-Anchor" href="#文法"></a> 文法</h2><p>一週間に一回映画をみます。</p><p>スポーツでサッカーが一番おもしろいです。</p><p>本を返さなければなりません。</p><p>カードで払うことができます。</p><p>考（かんが）えでも、わかりません。</p><p>私は課長に会社を辞めると言いました。</p><p>これを回すと、音がおおきくなります。</p><p>26歳のとき、結婚しました。</p><p>ミラーさんがきたら、でかけましょう。</p><p>そんなに寒くかったです。</p>]]></content>
      
      
      <categories>
          
          <category> freetime </category>
          
      </categories>
      
      
        <tags>
            
            <tag> languages </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>王道Python笔记</title>
      <link href="/2021/06/23/%E7%8E%8B%E9%81%93Python%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/06/23/%E7%8E%8B%E9%81%93Python%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="day2"><a class="markdownIt-Anchor" href="#day2"></a> day2</h1><p>现在的服务器，硬件追求性价比，可靠性用软件保证</p><p>系统级进程用数个无密码用户启动，互相独立</p><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">给root配置密码</span>sudo passwd rootuseradd -m ... -s /bin/bashuserdel -r</code></pre><h2 id="linux通配"><a class="markdownIt-Anchor" href="#linux通配"></a> linux通配</h2><table><thead><tr><th></th><th>基本规则</th><th>说明</th></tr></thead><tbody><tr><td>grep</td><td>输出含匹配段的行，首尾规则</td><td>! [] ^ $ * ?</td></tr><tr><td>find/shell/rm等</td><td>输出文件路径，无首尾规则，加-name，加引号</td><td>! [] *(同.*) .</td></tr></tbody></table><h1 id="day4"><a class="markdownIt-Anchor" href="#day4"></a> day4</h1><p>安装ipython3</p><p>复数 complex(a,b) .real/imag</p><p>命名规范：</p><ul><li>常量全大写，可加下划线</li><li>变量、方法用下划线命名法</li><li>类名用大驼峰命名法</li></ul><p>float类型17位精度</p><p>1 and 3 =3 真则返回后一个</p><p>5 or 0 =5 真则返回前一个</p><p>~x = -x-1</p><p>位操作去重</p><p>并查集、位操作看文献耦合</p><h2 id="变量"><a class="markdownIt-Anchor" href="#变量"></a> 变量</h2><p>一切变量都是引用</p><p>变量中记录数据的地址，使用id()可以查看</p><p>修改变量值的时候，改变这个地址</p><p>函数传递时，赋值没法改变函数外的值，只有通过可变类型（list|dict|set）</p><p>0-255固定地址（数字表）</p><h3 id="全局变量和局部变量"><a class="markdownIt-Anchor" href="#全局变量和局部变量"></a> 全局变量和局部变量</h3><p>变量在函数内被使用，就近原则</p><p>变量在函数内被赋值，则认为是局部变量</p><p>函数内修改一个全局变量时，必须加global</p><h3 id="三大可变类型"><a class="markdownIt-Anchor" href="#三大可变类型"></a> 三大可变类型</h3><h4 id="列表"><a class="markdownIt-Anchor" href="#列表"></a> 列表</h4><p>append、pop(按位删除一次)或del a[i]、remove(按值删除)、count、insert、extend(列表追加)、reverse、sort(reverse=True)归并排序、A.index(按值查下标)</p><p>函数内改变函数外，取下标赋值</p><h4 id="字典"><a class="markdownIt-Anchor" href="#字典"></a> 字典</h4><p>hash实现</p><p>dict1=dict{}</p><p>key必须是不可变类型，一般放字符串</p><p>dic.get(key)比dic[]更安全</p><p>keys|values|items</p><p>setdefault(key,value) 如key不存在，修改value</p><p>update 覆盖已存在key的value，添加不存在key，实现合并。python 3.9支持加号</p><h5 id="格式化输出"><a class="markdownIt-Anchor" href="#格式化输出"></a> 格式化输出</h5><pre class="highlight"><code class="python"><span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> xiaoming:<span class="hljs-comment"># 等于for k in xiaoming.keys()</span><span class="hljs-built_in">print</span>(%s:%s % (k, xiaoming[k]))</code></pre><h4 id="集合"><a class="markdownIt-Anchor" href="#集合"></a> 集合</h4><p>set1=set()</p><p>add、clear、copy</p><p>x.union不改变x，x.update改变x</p><p>a|b  a-b a&amp;b a^b</p><h1 id="day8"><a class="markdownIt-Anchor" href="#day8"></a> day8</h1><ul><li>没有return的函数，返回None</li></ul><h2 id="字符串"><a class="markdownIt-Anchor" href="#字符串"></a> 字符串</h2><ol><li><p>逆序：str[::-1]</p></li><li><p>list(str) 相当于 split(‘’)，然后用’'.join(list)恢复；字符串切分、读取类似列表，list(str)将其转化成单字符列表</p></li></ol><h1 id="day9"><a class="markdownIt-Anchor" href="#day9"></a> day9</h1><ul><li>lis.extend()等价于lis+=… 不改变ID，函数外也会改变</li></ul><h1 id="day10"><a class="markdownIt-Anchor" href="#day10"></a> day10</h1><ol><li><p>dir(Class)看类的方法和属性</p><p>dir(Object)看对象属性和方法</p></li><li><p>直接打印对象时显示__str__的返回值，__repr__更高级</p></li></ol><h1 id="day11"><a class="markdownIt-Anchor" href="#day11"></a> day11</h1><ol><li><p>面向对象的思想：实现任何需求，都创建一个对象，让对象去做</p></li><li><p>file.seek()在非二进制模式下只能向后偏移</p></li></ol><p>二进制模式写入需要转为字节流：</p><ul><li><p>字符串：str.encode(‘utf8’)</p></li><li><p>整型数：struct.pack(‘i’,123)</p></li></ul><ol start="3"><li><p>eval(字符串)-&gt;列表、字典</p><p>eval(‘命令’) 直接执行，danger，尤其在接收网络内容时!!</p></li></ol><h1 id="day14"><a class="markdownIt-Anchor" href="#day14"></a> day14</h1><ol><li>python链表</li></ol><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Node</span>:<span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,ele</span>):self.ele=eleself.<span class="hljs-built_in">next</span>=<span class="hljs-literal">None</span></code></pre><ol start="2"><li><p>堆排序是空间复杂度O（1）的最好排序算法</p></li><li><p>计数排序 时间复杂度最低</p></li><li><p>传递方法时只传方法名字，参数用*args传递</p></li><li><p>用小根堆找第K大元素</p></li></ol><h1 id="day15"><a class="markdownIt-Anchor" href="#day15"></a> day15</h1><ul><li>python对整形数移位操作时，该数为无符号数</li></ul><h1 id="day16"><a class="markdownIt-Anchor" href="#day16"></a> day16</h1><ul><li><p>ping 使用icmp协议实现的</p></li><li><p>tcp 报文头中有滑动窗口大小</p></li><li><p>tcp头长20，udp头长8  udp效率高，且适用于无线</p></li></ul><h1 id="day18"><a class="markdownIt-Anchor" href="#day18"></a> day18</h1><ul><li><p>UDP 的特点： 尽最大努力交付，发送大于接收，接收方直接丢弃，可以多个端口使用同一个描述符和缓冲区，一对多</p></li><li><p>python中TCP在accept成功后会返回套接字和客户端ip，端口元组</p><p>UDP在每次recvfrom时得到发送者的内容和ip，端口元组</p></li><li><p>暂停态(T)用于程序调试</p></li><li><p>nohup 后台运行，jobs查看，fg到前台，bg到后台</p></li><li><p>socket发送和接收整型数</p><pre class="highlight"><code class="python"><span class="hljs-comment">#发送端</span>socket.send(struct.pack(<span class="hljs-string">'I'</span>,<span class="hljs-number">123</span>))<span class="hljs-comment">#接收端</span>recv_data=socket.recv(<span class="hljs-number">4</span>)data=struct.unpack(<span class="hljs-string">'I'</span>,recv_data)[<span class="hljs-number">0</span>]</code></pre></li></ul><h1 id="day19"><a class="markdownIt-Anchor" href="#day19"></a> day19</h1><ol><li><p>时间片轮转:</p><p>一轮调度周期内把时间分割为若干个时间片，调度器将时间片分配给就绪队列的进程</p></li><li><p>killall/pkill 按名字杀进程</p></li><li><p>crontab -e 设置定时任务</p></li><li><p>子进程创建的一瞬间是父进程的克隆</p></li><li><p>python特色：主线程执行结束前，会等待子线程结束，join用于子线程之间的等待，不写join子线程也会执行到底，因为主线程一直在；C中子线程随着主线程的消亡而消亡，必须要join()</p></li><li><p>join移到了进程里并取代了wait</p></li><li><p>thread类，从run函数进入其他方法</p></li></ol><h1 id="day20"><a class="markdownIt-Anchor" href="#day20"></a> day20</h1><ol><li><p>当一个函数有yield 时，他就是一个生成器</p></li><li><p>线程切换比较耗时，操作系统会给每个线程分配cache；每一个协程仅保存压栈寄存器状态，切换时不用进入内核态</p></li><li><p>next(g)，第一次从开头运行到yield，返回yield</p></li></ol><p>后面每一次从yield传参运行到下一个yield传参之前</p><p>正则表达式：</p><table><thead><tr><th>匹配个数</th><th>贪婪</th><th>非贪婪</th></tr></thead><tbody><tr><td>1+</td><td>.+</td><td>.+?</td></tr><tr><td>任意</td><td>.*</td><td>.*?返回空</td></tr><tr><td>0/1</td><td>.{0,1}或.?</td><td>.*?</td></tr><tr><td>1</td><td>.{1}或.</td><td>无</td></tr></tbody></table><p><strong>可以匹配0个的会给$^以及单一匹配让步</strong></p><h1 id="day22"><a class="markdownIt-Anchor" href="#day22"></a> day22</h1><ol><li><p>从模块导入全局变量</p><p>import common: 共享</p><p>from common import GVAR：只共享可变类型</p></li><li><p>工厂模式：用工厂的create方法，根据传入的字符串的不同，创建不同的类的对象</p></li></ol><h1 id="day23"><a class="markdownIt-Anchor" href="#day23"></a> day23</h1><ol><li><p>assert 为假，抛出断言异常，相当于if+raise</p></li><li><p>dir(类名)看所有类属性和方法，__dict__用于打印类属性方法/对象所有属性和方法</p></li><li><p>__getitem__ 让对象以方括号形式访问</p></li><li><p>mysql 数据类型</p><p><a href="https://www.cnblogs.com/xrq730/p/8446246.html">https://www.cnblogs.com/xrq730/p/8446246.html</a></p><p>char 和 varchar</p><p>对于MyISAM表，推荐CHAR类型；对于InnoDB表，推荐VARCHAR类型</p></li></ol><h1 id="day25"><a class="markdownIt-Anchor" href="#day25"></a> day25</h1><pre class="highlight"><code class="sql"><span class="hljs-keyword">UPDATE</span> tablename <span class="hljs-keyword">SET</span> ...<span class="hljs-operator">=</span>... <span class="hljs-keyword">WHERE</span> ...<span class="hljs-comment">-- sql注入</span><span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">or</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-comment">--拿到整个数据库</span><span class="hljs-comment">-- 解决方法：传参</span>para<span class="hljs-operator">=</span>[findname]</code></pre><h1 id="day26"><a class="markdownIt-Anchor" href="#day26"></a> day26</h1><ol><li><p>主键默认有索引，并且是唯一索引</p></li><li><p>只能在一个表中某一列存在聚集索引，索引值和行数据存储在一起</p></li><li><p>一定要有公网ip才能被任意机器ping通，ping通才能主动发起对被ping通方的连接</p></li><li><p>隔离等级</p><pre class="highlight"><code class="sql"><span class="hljs-comment">-- 查看</span><span class="hljs-keyword">select</span> @<span class="hljs-variable">@tx</span>_isolation<span class="hljs-keyword">select</span> @<span class="hljs-variable">@global</span>.tx_isolation<span class="hljs-comment">-- 修改</span><span class="hljs-keyword">set</span> session transaction isolation level ...<span class="hljs-comment">-- read uncommitted</span><span class="hljs-comment">-- read committed</span><span class="hljs-comment">-- repeatable read(default)</span><span class="hljs-comment">-- serializable</span></code></pre><p><a href="https://elsef.com/2018/11/28/%E7%BB%8F%E5%B8%B8%E8%A2%AB%E8%AF%AF%E8%A7%A3%E7%9A%84MySQL%E4%B8%AD%E5%AF%B9REPEATABLE-READ/">幻读的详细解释</a></p></li><li><p>配置主从同步mariadb 10和mysql的区别：</p><ol><li>配置文件在/etc/my.cnf</li><li><code>systemctl restart mariadb</code></li></ol></li><li><p>source 和备份恢复都可以导入sql文件，出现<code>utf8mb4_0900_ai_ci</code>编码错误来源于注释掉的行，比较坑爹</p></li><li><p>回调函数：作为参数传入另一个函数的函数，延迟调用，C语言中用函数指针实现</p></li><li><p>主键创建时默认是聚集索引</p></li><li><p>唯一索引可以为null</p></li></ol><h1 id="day27"><a class="markdownIt-Anchor" href="#day27"></a> day27</h1><ol><li>闭包：函数里定义的函数，在调用时根据传入参数返回一个新函数</li><li>闭包消耗的资源比对象少，能传递功能和数据</li><li>闭包里的nonloal不释放局部变量，类似于静态局部变量的性质</li><li>使用闭包相当于重写一个函数</li><li>装饰器使用闭包技术，对原来的函数进行了扩展。装饰器需要传参用两层闭包</li><li>离函数更近的装饰器先装饰，后调用</li></ol><h1 id="day32"><a class="markdownIt-Anchor" href="#day32"></a> day32</h1><h2 id="数据分析常用方法"><a class="markdownIt-Anchor" href="#数据分析常用方法"></a> 数据分析常用方法：</h2><ol><li>对比分析</li><li>多维拆解</li><li>留存分析</li><li>漏斗分析：目的明确</li></ol><h2 id="高级方法"><a class="markdownIt-Anchor" href="#高级方法"></a> 高级方法：</h2><ol><li>用户画像</li><li>归因查找：末次归因、递减归因、首次归因</li><li>路径挖掘：起点明确</li><li>行为序列：单个用户的操作记录</li></ol><h1 id="day33"><a class="markdownIt-Anchor" href="#day33"></a> day33</h1><h2 id="ipython魔法命令"><a class="markdownIt-Anchor" href="#ipython魔法命令"></a> ipython魔法命令：</h2><table><thead><tr><th>魔法命令</th><th>作用</th></tr></thead><tbody><tr><td>%pwd|%cd|%ls</td><td>同shell</td></tr><tr><td>%writefile</td><td>写入文件</td></tr><tr><td>%run  .py/.ipynb</td><td>运行脚本</td></tr><tr><td>%whos|%reset</td><td>查看/清除当前变量</td></tr><tr><td>%timeit</td><td>测试单行代码运行时间</td></tr></tbody></table><h2 id="matplotlib踩坑"><a class="markdownIt-Anchor" href="#matplotlib踩坑"></a> matplotlib踩坑</h2><ol><li><p>动态修改中文</p><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> matplotlib <span class="hljs-keyword">import</span> font_manager<span class="hljs-comment"># linux</span>myfont = font_manager.FontProperties(fname=<span class="hljs-string">'/usr/share/fonts/ttf/???.ttf'</span>，size=<span class="hljs-number">15</span>) <span class="hljs-comment"># windows</span>my_font = font_manager.FontProperties(fname=<span class="hljs-string">'C:\Windows\Fonts\???.ttf'</span>,size=<span class="hljs-number">15</span>) mpl.rcParams[<span class="hljs-string">'axes.unicode_minus'</span>] = <span class="hljs-literal">False</span>  <span class="hljs-comment"># 后面需要显示中文的地方加参数</span>fontsproperties=myfont<span class="hljs-comment"># 特别的，legend()后面的参数用proc</span>proc=myfont</code></pre></li><li><p>全局修改中文</p><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> matplotlib <span class="hljs-keyword">import</span> pyplot <span class="hljs-keyword">as</span> plt plt.rcParams[<span class="hljs-string">'font.sans-serif'</span>]=[<span class="hljs-string">'SimHei'</span>] <span class="hljs-comment">#用来正常显示中文标签</span>plt.rcParams[<span class="hljs-string">'axes.unicode_minus'</span>]=<span class="hljs-literal">False</span> <span class="hljs-comment">#用来正常显示负号</span></code></pre></li></ol><h1 id="day37"><a class="markdownIt-Anchor" href="#day37"></a> day37</h1><h2 id="chrome-退出ctrllk后地址栏的选中状态"><a class="markdownIt-Anchor" href="#chrome-退出ctrllk后地址栏的选中状态"></a> chrome 退出<code>ctrl+l/k</code>后地址栏的选中状态</h2><p><code>Esc</code>不行，谷歌工程师脑子进水了，只能<code>Tab</code>。</p><h1 id="day46"><a class="markdownIt-Anchor" href="#day46"></a> day46</h1><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> tensorflow <span class="hljs-keyword">import</span> keras<span class="hljs-keyword">class</span> <span class="hljs-title class_">WideDeepModel</span>(keras.models.Model):<span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<span class="hljs-comment"># 继承父类</span><span class="hljs-built_in">super</span>().__init__()    self.hidden1_layer = keras.layers.Dense(<span class="hljs-number">30</span>, activation=<span class="hljs-string">'relu'</span>)    self.hidden2_layer = keras.layers.Dense(<span class="hljs-number">30</span>, activation=<span class="hljs-string">'relu'</span>)    self.output_layer1 = keras.layers.Dense(<span class="hljs-number">1</span>)    self.output_layer2 = keras.layers.Dense(<span class="hljs-number">1</span>)       <span class="hljs-keyword">def</span> <span class="hljs-title function_">call</span>(<span class="hljs-params">self,inputs</span>):    <span class="hljs-comment"># 定义正向计算，输入张量和输出张量</span>    input_wide=inputs[<span class="hljs-number">0</span>]    input_deep=inputs[<span class="hljs-number">1</span>]    hidden1=self.hidden1_layer(input_deep)    hidden2=self.hidden2_layer(hidden1)    concat=keras.layers.concatenate([input_wide,hidden2])    output1=self.output_layer1(concat)    output2=self.output_layer2(hidden2)    <span class="hljs-keyword">return</span> [output1,output2]model=WideDeepModel()<span class="hljs-comment"># 两个输入层的维度</span>model.build(input_shape=[(<span class="hljs-literal">None</span>,<span class="hljs-number">5</span>),(<span class="hljs-literal">None</span>,<span class="hljs-number">6</span>)])model.<span class="hljs-built_in">compile</span>(loss=<span class="hljs-string">"mean_squared_error"</span>,              optimizer = keras.optimizers.SGD(<span class="hljs-number">0.001</span>))callbacks = [keras.callbacks.EarlyStopping(    patience=<span class="hljs-number">5</span>, min_delta=<span class="hljs-number">1e-2</span>)]history = model.fit([x_train_scaled_wide, x_train_scaled_deep],[y_train,y_train],                    validation_data =([x_valid_scaled_wide, x_valid_scaled_deep],[y_valid,y_valid]),                    epochs = <span class="hljs-number">100</span>,                    callbacks = callbacks)</code></pre><h1 id="day49"><a class="markdownIt-Anchor" href="#day49"></a> day49</h1><h2 id="卷积神经网络"><a class="markdownIt-Anchor" href="#卷积神经网络"></a> 卷积神经网络</h2><p>每一层的参数计算：上层通道数*卷积核大小*本层通道数 +本层通道数</p><h2 id="modelcheckpoint"><a class="markdownIt-Anchor" href="#modelcheckpoint"></a> modelcheckpoint</h2><p>保存之前的最佳模型，再次训练时会在之前的参数上继续训练</p><h2 id="others"><a class="markdownIt-Anchor" href="#others"></a> others</h2><ol><li>selu比relu收敛更快</li><li>卷积和池化都能减少过拟合</li></ol><h1 id="day50"><a class="markdownIt-Anchor" href="#day50"></a> day50</h1><h2 id="plot_model"><a class="markdownIt-Anchor" href="#plot_model"></a> plot_model</h2><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> tensorflow.keras.utils <span class="hljs-keyword">import</span> plot_modelplot_model(single_rnn_model)</code></pre><h2 id="rnn"><a class="markdownIt-Anchor" href="#rnn"></a> RNN</h2><p>根据上下文预测</p><p>保存权重而不是模型，可以改变传入批次的大小</p><h1 id="day55"><a class="markdownIt-Anchor" href="#day55"></a> day55</h1><p>白化：</p><ol><li>PCA白化 均值为0,方差为1</li><li>ZCA白化 均值为0,方差相同</li></ol><p>批归一化：对各维度分别 均值为0,方差为1，再添加缩放和偏移保留部分数据分布特征</p><h1 id="day56"><a class="markdownIt-Anchor" href="#day56"></a> day56</h1><p>route -n 看网关</p><p>lsof -i:端口号</p><h1 id="day58"><a class="markdownIt-Anchor" href="#day58"></a> day58</h1><h2 id="hadoopyarn-架构"><a class="markdownIt-Anchor" href="#hadoopyarn-架构"></a> hadoop/YARN 架构</h2><p>mapreduce的调度计算分给resourceManager，本身只负责数据统计计算</p><ol><li><p>client 按128M/块分割好的数据存储到datanode(默认3份)，namenode放元数据（类似于Linux目录结构体信息）</p></li><li><p>client 向resourceManager提交jobs</p></li><li><p>主机的resourceManager和nodeManage协商，jobs分解为tasks，初始化container，分发管家applicationMaster给container，管家申请资源，注册进程</p></li><li><p>applicationMaster向nodeManager申请启动，把task给container</p></li><li><p>task执行完毕，向管家报告，管家请求kill</p></li><li><p>namenode定期汇报datanode；nodemanager定期汇报container</p></li></ol><h2 id="hadoop启动"><a class="markdownIt-Anchor" href="#hadoop启动"></a> hadoop启动</h2><pre class="highlight"><code class="shell">./start-all.sh</code></pre><h2 id="hive启动"><a class="markdownIt-Anchor" href="#hive启动"></a> hive启动</h2><pre class="highlight"><code class="shell">service docker startdocker start mysqlhive --service matestore &amp;hive</code></pre><h1 id="day68"><a class="markdownIt-Anchor" href="#day68"></a> day68</h1><p>grpc：远程过程调用，客户端直接调用服务端的函数</p><h1 id="day72"><a class="markdownIt-Anchor" href="#day72"></a> day72</h1><ol><li><p>在django model 层设置外键，mysql 的外键db_constraint设为false以提高效率</p></li><li><p>先用一对一，扩展为一对多很方便</p></li></ol><h1 id="bounces-in-wangdao"><a class="markdownIt-Anchor" href="#bounces-in-wangdao"></a> bounces in wangdao</h1><ul><li><p>[x] 红黑树完整代码</p></li><li><p>[ ] 图神经网络</p></li><li><p>[ ] 网络科学导论</p></li><li><p>[ ] 统计学习方法</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>after install manjaro</title>
      <link href="/2021/06/17/after-install-manjaro/"/>
      <url>/2021/06/17/after-install-manjaro/</url>
      
        <content type="html"><![CDATA[<h1 id="manjaro最简安装"><a class="markdownIt-Anchor" href="#manjaro最简安装"></a> manjaro最简安装</h1><blockquote><p>为提高debug和搜索能力，仅给出粗略步骤</p></blockquote><p>先选英文系统，后改中文，安装时考虑是否要休眠功能，内存小于16g建议搞个<strong>和内存等大的swap</strong></p><ol><li><p>改pac源，导入archlinuxcn密钥环，更新密钥，改pip源</p><blockquote><p><s>testing和unstable分支国内都不同步了，裂开</s></p><p>testing分支恢复了</p><p><a href="https://repo.manjaro.org/">查看源状态</a></p></blockquote></li><li><p>设置里选个内核，推荐5.15，安装显卡驱动linux515-nvida</p></li><li><p>~~改字体分辨率，固定为120～</p></li><li><p>安装fcitx 5，拼音、词库和皮肤</p></li><li><p>下载 <a href="https://github.com/Fndroid/clash_for_windows_pkg/releases">clash</a>，开机启动，配置终端使用tz的快捷命令，很常用</p></li></ol><pre class="highlight"><code class="shell">   alias vpn="export http_proxy=http://127.0.0.1:7890 &amp;&amp; export https_proxy=http://127.0.0.1:7890</code></pre><ol start="6"><li><p>觉得滚轮慢的安装imwheel设置滚轮速度，有触摸板需求安装libinput，修改配置文件</p></li><li><p>安装oh my zsh和vim plus，导入<a href="https://github.com/rockcor/my_vim_and_zsh">rockcor-github</a>上配置，安装zsh的插件（auto-jump，美化主题等）</p></li><li><p>安装chrome（AUR仓库安装edge）浏览器插件直接同步（推荐vimium C、coco-cut）</p></li><li><p>安装播放器smplayer或者MPV（找懒人包）</p></li><li><p>系统美化，图表、UI、终端字体、大小、桌面部件，全局菜单，latte，回收站留着（后悔药）</p></li><li><p>ssh、github密钥管理，桌面拉几个快捷方式用于和服务器还有硬盘里的window交流</p></li><li><p>optimus设为hybird</p></li><li><p>安装常用软件 wps for linux、<a href="https://blog.csdn.net/qq_37284020/article/details/107116065">wine-qq</a>、网易云音乐、steam、坚果云、百度网盘、<a href="https://www.sixyin.com/577.html">xmind</a>、<s>typora</s>obsidian（强推）、heroic games、simplescreenrecorder、goldendict、snowflake、qbittorrent<br>**安装方式：**搜索<code>xxx arch</code>找到对应软件是否在库的界面，如果是官方库就<code>pacman -S xxx</code>，AUR库就<code>yay -S xxx</code></p></li><li><p>配置大量快捷键：系统设置、yakuake、浏览器、终端、文件管理器、静音、锁屏</p></li><li><p><a href="https://coda.world/manjaro-optimization-and-setting/">系统优化</a></p></li><li><p>debug开机问题</p></li></ol><pre class="highlight"><code class="bash">journalctl -b<span class="hljs-comment"># 目标：让所有红色行消失</span><span class="hljs-comment"># 出现baloo file错误</span>balooctl <span class="hljs-built_in">disable</span>balooctl purgebalooctl <span class="hljs-built_in">enable</span><span class="hljs-comment"># virtualbox全家桶启动异常，先卸载干净vbox</span>sudo <span class="hljs-built_in">rm</span> -rf /etc/modules-load.d/vir*<span class="hljs-comment">#开机后桌面卡死，panel弹不出来</span>ctrl alt f2 里重启经测试是显卡问题，hybird设置好应该就可以<span class="hljs-comment">#休眠无法唤醒，改grub，自行搜索</span><span class="hljs-comment">#systemlog中大量qt5 xcb报错啥的不用管</span></code></pre><ol start="17"><li><p>grub美化，有空搞搞</p></li><li><p>硬件测试，详见<a href="https://wiki.archlinux.org/title/Benchmarking_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">benchmark</a>，风扇速度看看能不能改，和笔记本型号有关</p></li><li><p>系统维护：</p></li></ol><pre class="highlight"><code class="bash"><span class="hljs-comment"># 官方库检查更新</span>sudo pacman-mirrors --fasttrack 5 &amp;&amp; sudo pacman -Syyu<span class="hljs-comment"># 垃圾清理</span>sudo pacman -Scc<span class="hljs-comment"># AUR里的软件更新</span>yay -Syu</code></pre>]]></content>
      
      
      <categories>
          
          <category> tech-article </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> manjaro </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
